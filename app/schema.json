{
  "name": "HEM1538",
  "collections": [
    {
      "name": "ReferenceRanges",
      "schematic": {
        "components": [
          {
            "name": "assay",
            "children": [
              {
                "name": "low_value",
                "label": "Low value",
                "type": "number",
                "required": { "when": "always" }
              },
              {
                "name": "high_value",
                "label": "High value",
                "type": "number",
                "required": { "when": "always" }
              }
            ],
            "validations": [
              {
                "name": "assayValues",
                "code": "item.low_value <= item.high_value;",
                "message": "assay low value must be less than or equal to high value",
                "field": "low_value"
              },
              {
                "name": "assayPositiveNumber",
                "code": "0 <= parseInt(item.low_value);",
                "message": "assay low value must be greater than or equal to zero",
                "field": "low_value"
              }
            ]
          }
        ],
        "children": [
          {
            "name": "site_name",
            "label": "Site name",
            "type": "string",
            "required": { "when": "always" },
            "enum": [ "Vanderbilt" ]
          },
          {
            "name": "start_date",
            "label": "Start date",
            "type": "string",
            "required": { "when": "always" },
            "validate": {
              "name": "rrStartDateValid",
              "code": "dateValid(value, 'YYYY-MM-DD')",
              "message": "is not a valid date"
            }
          },
          {
            "name": "end_date",
            "label": "End date",
            "type": "string",
            "validate": {
              "name": "endDateValid",
              "code": "!value || dateValid(value, 'YYYY-MM-DD')",
              "message": "is not a valid date"
            }
          },
          { "name": "wbc", "component": "assay" },
          { "name": "rbc", "component": "assay" },
          { "name": "hemoglobin", "component": "assay" },
          { "name": "hematocrit", "component": "assay" },
          { "name": "plateletCount", "component": "assay" },
          { "name": "wbcNeutrophil", "component": "assay" },
          { "name": "wbcEosinophil", "component": "assay" },
          { "name": "wbcBasophil", "component": "assay" },
          { "name": "wbcLymphocyte", "component": "assay" },
          { "name": "wbcMonocyte", "component": "assay" },
          { "name": "wbcBlasts", "component": "assay" },
          { "name": "wbcPromyelocytes", "component": "assay" },
          { "name": "wbcMyelocytes", "component": "assay" },
          { "name": "wbcMetamyelocytes", "component": "assay" },
          { "name": "wbcBands", "component": "assay" },
          { "name": "potassium", "component": "assay" },
          { "name": "serumCreatinine", "component": "assay" },
          { "name": "calcium", "component": "assay" },
          { "name": "totalBilirubin", "component": "assay" },
          { "name": "totalProtein", "component": "assay" },
          { "name": "albumin", "component": "assay" },
          { "name": "alt", "component": "assay" },
          { "name": "ast", "component": "assay" },
          { "name": "alkalinePhosphatase", "component": "assay" },
          { "name": "lactateDehydrogenase", "component": "assay" },
          { "name": "glucose", "component": "assay" },
          { "name": "bloodUreaNitrogen", "component": "assay" },
          { "name": "sodium", "component": "assay" },
          { "name": "chloride", "component": "assay" },
          { "name": "carbonDioxide", "component": "assay" },
          { "name": "magnesium", "component": "assay" },
          { "name": "phosphorus", "component": "assay" },
          { "name": "uricAcid", "component": "assay" },
          { "name": "amylase", "component": "assay" },
          { "name": "lipase", "component": "assay" },
          { "name": "inr", "component": "assay" },
          { "name": "aptt", "component": "assay" },
          { "name": "hba1c", "component": "assay" },
          { "name": "iga", "component": "assay" },
          { "name": "igg", "component": "assay" },
          { "name": "igm", "component": "assay" }
        ],
        "validations": [
          {
            "name": "dateOrder",
            "field": "end_date",
            "message": "must be on or after start date",
            "code": "!item.end_date || dateCompare(item.start_date, '<=', item.end_date);"
          },
          {
            "name": "hematocritHighValue",
            "field": "hematocrit.high_value",
            "message": "must be less than or equal to 100",
            "code": "item.hematocrit.high_value <= 100"
          },
          {
            "name": "wbcNeutrophilHighValue",
            "field": "wbcNeutrophil.high_value",
            "message": "must be less than or equal to 100",
            "code": "item.wbcNeutrophil.high_value <= 100"
          },
          {
            "name": "wbcEosinophilHighValue",
            "field": "wbcEosinophil.high_value",
            "message": "must be less than or equal to 100",
            "code": "item.wbcEosinophil.high_value <= 100"
          },
          {
            "name": "wbcBasophilHighValue",
            "field": "wbcBasophil.high_value",
            "message": "must be less than or equal to 100",
            "code": "item.wbcBasophil.high_value <= 100"
          },
          {
            "name": "wbcLymphocyteHighValue",
            "field": "wbcLymphocyte.high_value",
            "message": "must be less than or equal to 100",
            "code": "item.wbcLymphocyte.high_value <= 100"
          },
          {
            "name": "wbcMonocyteHighValue",
            "field": "wbcMonocyte.high_value",
            "message": "must be less than or equal to 100",
            "code": "item.wbcMonocyte.high_value <= 100"
          },
          {
            "name": "wbcBlastsHighValue",
            "field": "wbcBlasts.high_value",
            "message": "must be less than or equal to 100",
            "code": "item.wbcBlasts.high_value <= 100"
          },
          {
            "name": "wbcPromyelocytesHighValue",
            "field": "wbcPromyelocytes.high_value",
            "message": "must be less than or equal to 100",
            "code": "item.wbcPromyelocytes.high_value <= 100"
          },
          {
            "name": "wbcMyelocytesHighValue",
            "field": "wbcMyelocytes.high_value",
            "message": "must be less than or equal to 100",
            "code": "item.wbcMyelocytes.high_value <= 100"
          },
          {
            "name": "wbcMetamyelocytesHighValue",
            "field": "wbcMetamyelocytes.high_value",
            "message": "must be less than or equal to 100",
            "code": "item.wbcMetamyelocytes.high_value <= 100"
          },
          {
            "name": "wbcBandsHighValue",
            "field": "wbcBands.high_value",
            "message": "must be less than or equal to 100",
            "code": "item.wbcBands.high_value <= 100"
          },
          {
            "name": "hba1cHighValue",
            "field": "hba1c.high_value",
            "message": "must be less than or equal to 100",
            "code": "item.hba1c.high_value <= 100"
          }
        ],
        "hooks": [
          {
            "action": "afterComment",
            "roles": [ "central_monitor" ],
            "code": [
              "[{",
              "  type: 'event',",
              "  args: {",
              "    event: 'email',",
              "    eventName: 'sendCommentSubmittedEmail',",
              "    data: {",
              "      roles: [ 'site1_entry' ],",
              "      notificationName: 'monitorCommented',",
              "      from: 'noreply@vanderbilt.edu',",
              "      bodyOpts: {",
              "        link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/referenceranges/'+topItem.id.toString()",
              "      }",
              "    }",
              "  }",
              "}]"
            ]
          },
          {
            "action": "afterComment",
            "roles": [ "site1_entry" ],
            "code": [
              "[{",
              "  type: 'event',",
              "  args: {",
              "    event: 'email',",
              "    eventName: 'sendCommentSubmittedEmail',",
              "    data: {",
              "      roles: [ 'central_monitor' ],",
              "      notificationName: 'entryCommented',",
              "      from: 'noreply@vanderbilt.edu',",
              "      bodyOpts: {",
              "        link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/referenceranges/'+topItem.id.toString()",
              "      }",
              "    }",
              "  }",
              "}]"
            ]
          }
        ],
        "events": [
          {
            "name": "sendCommentSubmittedEmail",
            "code": [
              "var mailerOpts = {",
              "  to: data.opts.to,",
              "  from: data.opts.from,",
              "  bodyOpts: data.opts.bodyOpts",
              "};",
              "data.mailer.set(mailerOpts);",
              "data.mailer.send();"
            ]
          }
        ],
        "notifications": [
          {
            "type": "email",
            "name": "monitorCommented",
            "subject": "HEM1538 EDC Query submitted",
            "body": "A query has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
          },
          {
            "type": "email",
            "name": "entryCommented",
            "subject": "Site entry user comment submitted",
            "body": "A query response has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
          },
          {
            "type": "display",
            "name": "create",
            "body": "Reference range was saved successfully"
          },
          {
            "type": "display",
            "name": "update",
            "body": "Reference range was saved successfully"
          },
          {
            "type": "display",
            "name": "delete",
            "body": "Reference range was deleted successfully"
          }
        ],
        "permissions": [
          {
            "roles": [ "site1_read", "site1_pi", "site1_restricted" ],
            "modes": [ "read" ],
            "matches": {
              "when": "conditionally",
              "code": "top.site_name === 'Vanderbilt'"
            }
          },
          {
            "roles": [ "site2_read", "site2_pi", "site2_restricted" ],
            "modes": [ "read" ],
            "matches": {
              "when": "conditionally",
              "code": "top.site_name === 'Site 2'"
            }
          },
          {
            "roles": [ "site3_read", "site3_pi", "site3_restricted" ],
            "modes": [ "read" ],
            "matches": {
              "when": "conditionally",
              "code": "top.site_name === 'Site 3'"
            }
          },
          {
            "roles": [ "site4_read", "site4_pi", "site4_restricted" ],
            "modes": [ "read" ],
            "matches": {
              "when": "conditionally",
              "code": "top.site_name === 'Site 4'"
            }
          },
          {
            "roles": [ "site5_read", "site5_pi", "site5_restricted" ],
            "modes": [ "read" ],
            "matches": {
              "when": "conditionally",
              "code": "top.site_name === 'Site 5'"
            }
          },
          {
            "roles": [ "site1_entry" ],
            "modes": [ "create", "read", "update", "delete", "comment" ],
            "matches": {
              "when": "conditionally",
              "code": "top.site_name === 'Vanderbilt'"
            }
          },
          {
            "roles": [ "site2_entry" ],
            "modes": [ "create", "read", "update", "delete", "comment" ],
            "matches": {
              "when": "conditionally",
              "code": "top.site_name === 'Site 2'"
            }
          },
          {
            "roles": [ "site3_entry" ],
            "modes": [ "create", "read", "update", "delete", "comment" ],
            "matches": {
              "when": "conditionally",
              "code": "top.site_name === 'Site 3'"
            }
          },
          {
            "roles": [ "site4_entry" ],
            "modes": [ "create", "read", "update", "delete", "comment" ],
            "matches": {
              "when": "conditionally",
              "code": "top.site_name === 'Site 4'"
            }
          },
          {
            "roles": [ "site5_entry" ],
            "modes": [ "create", "read", "update", "delete", "comment" ],
            "matches": {
              "when": "conditionally",
              "code": "top.site_name === 'Site 5'"
            }
          },
          {
            "roles": [ "central_read", "central_pi", "central_restricted" ],
            "modes": [ "read" ],
            "matches": { "when": "always" }
          },
          {
            "roles": [ "central_entry", "central_monitor" ],
            "modes": [ "create", "read", "update", "delete" ],
            "matches": { "when": "always" }
          },
          {
            "roles": [ "central_monitor" ],
            "modes": [ "verify", "comment" ],
            "matches": { "when": "always" }
          }
        ],
        "draftable": true,
        "verifiable": { "type": "local" },
        "commentable": true
      }
    },
    {
      "name": "StudyEnrollments",
      "schematic": {
        "components": [
          {
            "name": "adverse_event",
            "children": [
              {
                "name": "followup_date",
                "label": "Follow-up date",
                "type": "string",
                "required": { "when": "always" },
                "validate": {
                  "name": "aeFollowupDateValid",
                  "message": "is not a valid date",
                  "code": "dateValid(value, 'YYYY-MM-DD');"
                },
                "permissions": [
                  {
                    "roles": [ "site1_read", "site1_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Vanderbilt'"
                    }
                  },
                  {
                    "roles": [ "site1_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Vanderbilt'"
                    }
                  },
                  {
                    "roles": [ "site2_read", "site2_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 2'"
                    }
                  },
                  {
                    "roles": [ "site2_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 2'"
                    }
                  },
                  {
                    "roles": [ "site3_read", "site3_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 3'"
                    }
                  },
                  {
                    "roles": [ "site3_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 3'"
                    }
                  },
                  {
                    "roles": [ "site4_read", "site4_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 4'"
                    }
                  },
                  {
                    "roles": [ "site4_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 4'"
                    }
                  },
                  {
                    "roles": [ "site5_read", "site5_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 5'"
                    }
                  },
                  {
                    "roles": [ "site5_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 5'"
                    }
                  },
                  {
                    "roles": [ "central_entry" ],
                    "modes": [ "read", "delete" ],
                    "matches": { "when": "always" }
                  },
                  {
                    "roles": [ "central_monitor", "central_read" ],
                    "modes": [ "read" ],
                    "matches": { "when": "always" }
                  }
                ]
              },
              {
                "name": "followup_comment",
                "label": "Follow-up comments",
                "type": "string",
                "required": { "when": "always" }
              },
              {
                "name": "event_category",
                "label": "Event category",
                "type": "string",
                "required": { "when": "always" },
                "enum": [
                  "Blood and lymphatic system disorders",
                  "Cardiac disorders",
                  "Congenital, familial and genetic disorders",
                  "Ear and labyrinth disorders",
                  "Endocrine disorders",
                  "Eye disorders",
                  "Gastrointestinal disorders",
                  "General disorders and administration site conditions",
                  "Hepatobiliary disorders",
                  "Immune system disorders",
                  "Infections and infestations",
                  "Injury, poisoning and procedural complications",
                  "Investigations",
                  "Metabolism and nutrition disorders",
                  "Musculoskeletal and connective tissue disorders",
                  "Neoplasms benign, malignant, or unspecified (including cysts and polyps)",
                  "Nervous system disorders",
                  "Pregnancy, puerperium and perinatal conditions",
                  "Psychiatric disorders",
                  "Renal and urinary disorders",
                  "Reproductive system and breast disorders",
                  "Respiratory, thoracic and mediastinal disorders",
                  "Skin and subcutaneous tissue disorders",
                  "Social circumstances",
                  "Surgical and medical procedures",
                  "Vascular disorders"
                ]
              },
              {
                "name": "blood_event_type",
                "label": "Event type",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.event_category === 'Blood and lymphatic system disorders'"
                },
                "enum": [
                  "Anemia",
                  "Bone marrow hypocellular",
                  "Disseminated intravascular coagulation",
                  "Febrile neutropenia",
                  "Hemolysis",
                  "Hemolytic uremic syndrome",
                  "Leukocytosis",
                  "Lymph node pain",
                  "Spleen disorder",
                  "Thrombotic thrombocytopenic purpura",
                  "Blood and lymphatic system disorder - Other, specify"
                ]
              },
              {
                "name": "cardiac_event_type",
                "label": "Event type",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.event_category === 'Cardiac disorders'"
                },
                "enum": [
                  "Acute coronary syndrome",
                  "Aortic valve disease",
                  "Asystole",
                  "Atrial fibrillation",
                  "Atrial flutter",
                  "Atrioventricular block complete",
                  "Cardiac arrest",
                  "Chest pain - cardiac",
                  "Conduction disorder",
                  "Constrictive pericarditis",
                  "Heart failure",
                  "Left ventricular systolic dysfunction",
                  "Mitral valve disease",
                  "Mobitz (type) II atrioventricular block",
                  "Mobitz type I",
                  "Myocardial infarction",
                  "Myocarditis",
                  "Paroxysmal atrial tachycardia",
                  "Pericardial effusion",
                  "Pericardial tamponade",
                  "Pericarditis",
                  "Pulmonary valve disease",
                  "Restrictive cardiomyopathy",
                  "Right ventricular dysfunction",
                  "Sick sinus syndrome",
                  "Sinus bradycardia",
                  "Sinus tachycardia",
                  "Supraventricular tachycardia",
                  "Tricuspid valve disease",
                  "Ventricular arrhythmia",
                  "Ventricular fibrillation",
                  "Ventricular tachycardia",
                  "Wolff-Parkinson-White syndrome",
                  "Cardiac disorder - Other, specify"
                ]
              },
              {
                "name": "congenital_event_type",
                "label": "Event type",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.event_category === 'Congenital, familial and genetic disorders'"
                },
                "enum": [
                  "Congenital, familial and genetic disorders - Other, specify"
                ]
              },
              {
                "name": "ear_event_type",
                "label": "Event type",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.event_category === 'Ear and labyrinth disorders'"
                },
                "enum": [
                  "Ear pain",
                  "External ear inflammation",
                  "External ear pain",
                  "Hearing impaired",
                  "Middle ear inflammation",
                  "Tinnitus",
                  "Vertigo",
                  "Vestibular disorder",
                  "Ear and labyrinth disorders - Other, specify"
                ]
              },
              {
                "name": "endocrine_event_type",
                "label": "Event type",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.event_category === 'Endocrine disorders'"
                },
                "enum": [
                  "Adrenal insufficiency",
                  "Cushingoid",
                  "Delayed puberty",
                  "Hyperthyroidism",
                  "Hypoparathyroidism",
                  "Hypothyroidism",
                  "Endocrine disorders - Other, specify"
                ]
              },
              {
                "name": "eye_event_type",
                "label": "Event type",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.event_category === 'Eye disorders'"
                },
                "enum": [
                  "Blurred vision",
                  "Cataract",
                  "Conjunctivitis",
                  "Corneal ulcer",
                  "Dry eye",
                  "Extraocular muscle paresis",
                  "Eye pain",
                  "Eyelid function disorder",
                  "Flashing lights",
                  "Floaters",
                  "Glaucoma",
                  "Keratitis",
                  "Night blindness",
                  "Optic nerve disorder",
                  "Papilledema",
                  "Photophobia",
                  "Retinal detachment",
                  "Retinal tear",
                  "Retinal vascular disorder",
                  "Retinopathy",
                  "Scleral disorder",
                  "Uveitis",
                  "Vitreous hemorrhage",
                  "Watering eyes",
                  "Eye disorders - Other, specify"
                ]
              },
              {
                "name": "gastro_event_type",
                "label": "Event type",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.event_category === 'Gastrointestinal disorders'"
                },
                "enum": [
                  "Abdominal distension",
                  "Abdominal pain",
                  "Anal fistula",
                  "Anal hemorrhage",
                  "Anal mucositis",
                  "Anal necrosis",
                  "Anal pain",
                  "Anal stenosis",
                  "Anal ulcer",
                  "Ascites",
                  "Cecal hemorrhage",
                  "Cheilitis",
                  "Colitis",
                  "Colonic fistula",
                  "Colonic hemorrhage",
                  "Colonic obstruction",
                  "Colonic perforation",
                  "Colonic stenosis",
                  "Colonic ulcer",
                  "Constipation",
                  "Dental caries",
                  "Diarrhea",
                  "Dry mouth",
                  "Duodenal fistula",
                  "Duodenal hemorrhage",
                  "Duodenal obstruction",
                  "Duodenal perforation",
                  "Duodenal stenosis",
                  "Duodenal ulcer",
                  "Dyspepsia",
                  "Dysphagia",
                  "Enterocolitis",
                  "Enterovesical fistula",
                  "Esophageal fistula",
                  "Esophageal hemorrhage",
                  "Esophageal necrosis",
                  "Esophageal obstruction",
                  "Esophageal pain",
                  "Esophageal perforation",
                  "Esophageal stenosis",
                  "Esophageal ulcer",
                  "Esophageal varices hemorrhage",
                  "Esophagitis",
                  "Fecal incontinence",
                  "Gastric fistula",
                  "Gastric hemorrhage",
                  "Gastric necrosis",
                  "Gastric perforation",
                  "Gastric stenosis",
                  "Gastric ulcer",
                  "Gastritis",
                  "Gastroesophageal reflux disease",
                  "Gastrointestinal fistula",
                  "Gastrointestinal pain",
                  "Gastroparesis",
                  "Gingival pain",
                  "Hemorrhoidal hemorrhage",
                  "Hemorrhoids",
                  "Ileal fistula",
                  "Ileal hemorrhage",
                  "Ileal obstruction",
                  "Ileal perforation",
                  "Ileal stenosis",
                  "Ileal ulcer",
                  "Ileus",
                  "Intra-abdominal hemorrhage",
                  "Jejunal fistula",
                  "Jejunal hemorrhage",
                  "Jejunal obstruction",
                  "Jejunal perforation",
                  "Jejunal stenosis",
                  "Jejunal ulcer",
                  "Lip pain",
                  "Lower gastrointestinal hemorrhage",
                  "Malabsorption",
                  "Mucositis oral",
                  "Nausea",
                  "Obstruction gastric",
                  "Oral cavity fistula",
                  "Oral dysesthesia",
                  "Oral hemorrhage",
                  "Oral pain",
                  "Pancreatic duct stenosis",
                  "Pancreatic fistula",
                  "Pancreatic hemorrhage",
                  "Pancreatic necrosis",
                  "Pancreatitis",
                  "Periodontal disease",
                  "Peritoneal necrosis",
                  "Proctitis",
                  "Rectal fistula",
                  "Rectal hemorrhage",
                  "Rectal mucositis",
                  "Rectal necrosis",
                  "Rectal obstruction",
                  "Rectal pain",
                  "Rectal perforation",
                  "Rectal stenosis",
                  "Rectal ulcer",
                  "Retroperitoneal hemorrhage",
                  "Salivary duct inflammation",
                  "Salivary gland fistula",
                  "Small intestinal mucositis",
                  "Small intestinal obstruction",
                  "Small intestinal perforation",
                  "Small intestinal stenosis",
                  "Small intestine ulcer",
                  "Stomach pain",
                  "Tooth development disorder",
                  "Toothache",
                  "Typhlitis",
                  "Upper gastrointestinal hemorrhage",
                  "Vomiting",
                  "Gastrointestinal disorders - Other, specify"
                ]
              },
              {
                "name": "general_event_type",
                "label": "Event type",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.event_category === 'General disorders and administration site conditions'"
                },
                "enum": [
                  "Chills",
                  "Death neonatal",
                  "Death NOS",
                  "Edema face",
                  "Edema limbs",
                  "Edema trunk",
                  "Facial pain",
                  "Fatigue",
                  "Fever",
                  "Flu like symptoms",
                  "Gait disturbance",
                  "Hypothermia",
                  "Infusion related reaction",
                  "Infusion site extravasation",
                  "Injection site reaction",
                  "Irritability",
                  "Localized edema",
                  "Multi-organ failure",
                  "Neck edema",
                  "Non-cardiac chest pain",
                  "Pain",
                  "Sudden death NOS",
                  "General disorders and administration site conditions - Other, specify"
                ]
              },
              {
                "name": "hepatobiliary_event_type",
                "label": "Event type",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.event_category === 'Hepatobiliary disorders'"
                },
                "enum": [
                  "Bile duct stenosis",
                  "Biliary fistula",
                  "Cholecystitis",
                  "Gallbladder fistula",
                  "Gallbladder necrosis",
                  "Gallbladder obstruction",
                  "Gallbladder pain",
                  "Gallbladder perforation",
                  "Hepatic failure",
                  "Hepatic hemorrhage",
                  "Hepatic necrosis",
                  "Hepatic pain",
                  "Perforation bile duct",
                  "Portal hypertension",
                  "Portal vein thrombosis",
                  "Hepatobiliary disorders - Other, specify"
                ]
              },
              {
                "name": "immune_event_type",
                "label": "Event type",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.event_category === 'Immune system disorders'"
                },
                "enum": [
                  "Allergic reaction",
                  "Anaphylaxis",
                  "Autoimmune disorder",
                  "Cytokine release syndrome",
                  "Serum sickness",
                  "Immune system disorders - Other, specify"
                ]
              },
              {
                "name": "infection_event_type",
                "label": "Event type",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.event_category === 'Infections and infestations'"
                },
                "enum": [
                  "Abdominal infection",
                  "Anorectal infection",
                  "Appendicitis",
                  "Appendicitis perforated",
                  "Arteritis infective",
                  "Biliary tract infection",
                  "Bladder infection",
                  "Bone infection",
                  "Breast infection",
                  "Bronchial infection",
                  "Catheter related infection",
                  "Cecal infection",
                  "Cervicitis infection",
                  "Conjunctivitis infective",
                  "Corneal infection",
                  "Cranial nerve infection",
                  "Device related infection",
                  "Duodenal infection",
                  "Encephalitis infection",
                  "Encephalomyelitis infection",
                  "Endocarditis infective",
                  "Endophthalmitis",
                  "Enterocolitis infectious",
                  "Esophageal infection",
                  "Eye infection",
                  "Gallbladder infection",
                  "Gum infection",
                  "Hepatic infection",
                  "Hepatitis viral",
                  "Infective myositis",
                  "Joint infection",
                  "Kidney infection",
                  "Laryngitis",
                  "Lip infection",
                  "Lung infection",
                  "Lymph gland infection",
                  "Mediastinal infection",
                  "Meningitis",
                  "Mucosal infection",
                  "Nail infection",
                  "Otitis externa",
                  "Otitis media",
                  "Ovarian infection",
                  "Pancreas infection",
                  "Papulopustular rash",
                  "Paronychia",
                  "Pelvic infection",
                  "Penile infection",
                  "Periorbital infection",
                  "Peripheral nerve infection",
                  "Peritoneal infection",
                  "Pharyngitis",
                  "Phlebitis infective",
                  "Pleural infection",
                  "Prostate infection",
                  "Rash pustular",
                  "Rhinitis infective",
                  "Salivary gland infection",
                  "Scrotal infection",
                  "Sepsis",
                  "Sinusitis",
                  "Skin infection",
                  "Small intestine infection",
                  "Soft tissue infection",
                  "Splenic infection",
                  "Stoma site infection",
                  "Tooth infection",
                  "Tracheitis",
                  "Upper respiratory infection",
                  "Urethral infection",
                  "Urinary tract infection",
                  "Uterine infection",
                  "Vaginal infection",
                  "Vulval infection",
                  "Wound infection",
                  "Infections and infestations - Other, specify"
                ]
              },
              {
                "name": "complications_event_type",
                "label": "Event type",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.event_category === 'Injury, poisoning and procedural complications'"
                },
                "enum": [
                  "Ankle fracture",
                  "Aortic injury",
                  "Arterial injury",
                  "Biliary anastomotic leak",
                  "Bladder anastomotic leak",
                  "Burn",
                  "Dermatitis radiation",
                  "Esophageal anastomotic leak",
                  "Fall",
                  "Fallopian tube anastomotic leak",
                  "Fallopian tube perforation",
                  "Fracture",
                  "Gastric anastomotic leak",
                  "Gastrointestinal anastomotic leak",
                  "Gastrointestinal stoma necrosis",
                  "Hip fracture",
                  "Injury to carotid artery",
                  "Injury to inferior vena cava",
                  "Injury to jugular vein",
                  "Injury to superior vena cava",
                  "Intestinal stoma leak",
                  "Intestinal stoma obstruction",
                  "Intestinal stoma site bleeding",
                  "Intraoperative arterial injury",
                  "Intraoperative breast injury",
                  "Intraoperative cardiac injury",
                  "Intraoperative ear injury",
                  "Intraoperative endocrine injury",
                  "Intraoperative gastrointestinal injury",
                  "Intraoperative head and neck injury",
                  "Intraoperative hemorrhage",
                  "Intraoperative hepatobiliary injury",
                  "Intraoperative musculoskeletal injury",
                  "Intraoperative neurological injury",
                  "Intraoperative ocular injury",
                  "Intraoperative renal injury",
                  "Intraoperative reproductive tract injury",
                  "Intraoperative respiratory injury",
                  "Intraoperative skin injury",
                  "Intraoperative splenic injury",
                  "Intraoperative urinary injury",
                  "Intraoperative venous injury",
                  "Kidney anastomotic leak",
                  "Large intestinal anastomotic leak",
                  "Pancreatic anastomotic leak",
                  "Pharyngeal anastomotic leak",
                  "Postoperative hemorrhage",
                  "Postoperative thoracic procedure complication",
                  "Prolapse of intestinal stoma",
                  "Prolapse of urostomy",
                  "Radiation recall reaction (dermatologic)",
                  "Rectal anastomotic leak",
                  "Seroma",
                  "Small intestinal anastomotic leak",
                  "Spermatic cord anastomotic leak",
                  "Spinal fracture",
                  "Stenosis of gastrointestinal stoma",
                  "Stomal ulcer",
                  "Tracheal hemorrhage",
                  "Tracheal obstruction",
                  "Tracheostomy site bleeding",
                  "Ureteric anastomotic leak",
                  "Urethral anastomotic leak",
                  "Urostomy leak",
                  "Urostomy obstruction",
                  "Urostomy site bleeding",
                  "Urostomy stenosis",
                  "Uterine anastomotic leak",
                  "Uterine perforation",
                  "Vaginal anastomotic leak",
                  "Vas deferens anastomotic leak",
                  "Vascular access complication",
                  "Venous injury",
                  "Wound complication",
                  "Wound dehiscence",
                  "Wrist fracture",
                  "Injury, poisoning and procedural complications - Other, specify"
                ]
              },
              {
                "name": "investigations_event_type",
                "label": "Event type",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.event_category === 'Investigations'"
                },
                "enum": [
                  "Activated partial thromboplastin time prolonged",
                  "Alanine aminotransferase increased",
                  "Alkaline phosphatase increased",
                  "Aspartate aminotransferase increased",
                  "Blood antidiuretic hormone abnormal",
                  "Blood bilirubin increased",
                  "Blood corticotrophin decreased",
                  "Blood gonadotrophin abnormal",
                  "Carbon monoxide diffusing capacity decreased",
                  "Cardiac troponin I increased",
                  "Cardiac troponin T increased",
                  "CD4 lymphocytes decreased",
                  "Cholesterol high",
                  "CPK increased",
                  "Creatinine increased",
                  "Ejection fraction decreased",
                  "Electrocardiogram QT corrected interval prolonged",
                  "Fibrinogen decreased",
                  "Forced expiratory volume decreased",
                  "GGT increased",
                  "Hemoglobin increased",
                  "INR increased",
                  "Lipase increased",
                  "Lymphocyte count decreased",
                  "Lymphocyte count increased",
                  "Neutrophil count decreased",
                  "Pancreatic enzymes decreased",
                  "Platelet count decreased",
                  "Serum amylase increased",
                  "Urine output decreased",
                  "Vital capacity abnormal",
                  "Weight gain",
                  "Weight loss",
                  "White blood cell decreased",
                  "Investigations - Other, specify"
                ]
              },
              {
                "name": "metabolism_event_type",
                "label": "Event type",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.event_category === 'Metabolism and nutrition disorders'"
                },
                "enum": [
                  "Acidosis",
                  "Alcohol intolerance",
                  "Alkalosis",
                  "Anorexia",
                  "Dehydration",
                  "Glucose intolerance",
                  "Hypercalcemia",
                  "Hyperglycemia",
                  "Hyperkalemia",
                  "Hypermagnesemia",
                  "Hypernatremia",
                  "Hypertriglyceridemia",
                  "Hyperuricemia",
                  "Hypoalbuminemia",
                  "Hypocalcemia",
                  "Hypoglycemia",
                  "Hypokalemia",
                  "Hypomagnesemia",
                  "Hyponatremia",
                  "Hypophosphatemia",
                  "Iron overload",
                  "Obesity",
                  "Tumor lysis syndrome",
                  "Metabolism and nutrition disorders - Other, specify"
                ]
              },
              {
                "name": "musculoskeletal_event_type",
                "label": "Event type",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.event_category === 'Musculoskeletal and connective tissue disorders'"
                },
                "enum": [
                  "Abdominal soft tissue necrosis",
                  "Arthralgia",
                  "Arthritis",
                  "Avascular necrosis",
                  "Back pain",
                  "Bone pain",
                  "Buttock pain",
                  "Chest wall pain",
                  "Exostosis",
                  "Fibrosis deep connective tissue",
                  "Flank pain",
                  "Generalized muscle weakness",
                  "Growth suppression",
                  "Head soft tissue necrosis",
                  "Joint effusion",
                  "Joint range of motion decreased",
                  "Joint range of motion decreased cervical spine",
                  "Joint range of motion decreased lumbar spine",
                  "Kyphosis",
                  "Lordosis",
                  "Muscle weakness left-sided",
                  "Muscle weakness lower limb",
                  "Muscle weakness right-sided",
                  "Muscle weakness trunk",
                  "Muscle weakness upper limb",
                  "Musculoskeletal deformity",
                  "Myalgia",
                  "Myositis",
                  "Neck pain",
                  "Neck soft tissue necrosis",
                  "Osteonecrosis of jaw",
                  "Osteoporosis",
                  "Pain in extremity",
                  "Pelvic soft tissue necrosis",
                  "Scoliosis",
                  "Soft tissue necrosis lower limb",
                  "Soft tissue necrosis upper limb",
                  "Superficial soft tissue fibrosis",
                  "Trismus",
                  "Unequal limb length",
                  "Musculoskeletal and connective tissue disorder - Other, specify"
                ]
              },
              {
                "name": "neoplasms_event_type",
                "label": "Event type",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.event_category === 'Neoplasms benign, malignant, or unspecified (including cysts and polyps)'"
                },
                "enum": [
                  "Leukemia secondary to oncology chemotherapy",
                  "Myelodysplastic syndrome",
                  "Treatment related secondary malignancy",
                  "Tumor pain",
                  "Neoplasms benign, malignant, or unspecified (including cysts and polyps) - Other, specify"
                ]
              },
              {
                "name": "nervous_system_event_type",
                "label": "Event type",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.event_category === 'Nervous system disorders'"
                },
                "enum": [
                  "Abducens nerve disorder",
                  "Accessory nerve disorder",
                  "Acoustic nerve disorder NOS",
                  "Akathisia",
                  "Amnesia",
                  "Aphonia",
                  "Arachnoiditis",
                  "Ataxia",
                  "Brachial plexopathy",
                  "Central nervous system necrosis",
                  "Cerebrospinal fluid leakage",
                  "Cognitive disturbance",
                  "Concentration impairment",
                  "Depressed level of consciousness",
                  "Dizziness",
                  "Dysarthria",
                  "Dysesthesia",
                  "Dysphasia",
                  "Edema cerebral",
                  "Encephalopathy",
                  "Extrapyramidal disorder",
                  "Facial muscle weakness",
                  "Facial nerve disorder",
                  "Glossopharyngeal nerve disorder",
                  "Headache",
                  "Hydrocephalus",
                  "Hypersomnia",
                  "Hypoglossal nerve disorder",
                  "Intracranial hemorrhage",
                  "IVth nerve disorder",
                  "Leukoencephalopathy",
                  "Memory impairment",
                  "Meningismus",
                  "Movements involuntary",
                  "Myelitis",
                  "Neuralgia",
                  "Nystagmus",
                  "Oculomotor nerve disorder",
                  "Olfactory nerve disorder",
                  "Paresthesia",
                  "Peripheral motor neuropathy",
                  "Peripheral sensory neuropathy",
                  "Phantom pain",
                  "Pyramidal tract syndrome",
                  "Radiculitis",
                  "Recurrent laryngeal nerve palsy",
                  "Reversible posterior leukoencephalopathy syndrome",
                  "Seizure",
                  "Sinus pain",
                  "Somnolence",
                  "Spasticity",
                  "Stroke",
                  "Syncope",
                  "Tremor",
                  "Trigeminal nerve disorder",
                  "Vagus nerve disorder",
                  "Vasovagal reaction",
                  "Nervous system disorders - Other, specify"
                ]
              },
              {
                "name": "pregnancy_event_type",
                "label": "Event type",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.event_category === 'Pregnancy, puerperium and perinatal conditions'"
                },
                "enum": [
                  "Fetal death",
                  "Fetal growth retardation",
                  "Premature delivery",
                  "Unintended pregnancy",
                  "Pregnancy, puerperium, or perinatal conditions - Other, specify"
                ]
              },
              {
                "name": "psych_event_type",
                "label": "Event type",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.event_category === 'Psychiatric disorders'"
                },
                "enum": [
                  "Agitation",
                  "Anxiety",
                  "Confusion",
                  "Delayed orgasm",
                  "Delirium",
                  "Delusions",
                  "Depression",
                  "Euphoria",
                  "Hallucinations",
                  "Insomnia",
                  "Libido increased",
                  "Mania",
                  "Personality change",
                  "Psychosis",
                  "Restlessness",
                  "Suicidal ideation",
                  "Suicide attempt",
                  "Psychiatric disorders - Other, specify"
                ]
              },
              {
                "name": "renal_event_type",
                "label": "Event type",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.event_category === 'Renal and urinary disorders'"
                },
                "enum": [
                  "Acute kidney injury",
                  "Bladder perforation",
                  "Bladder spasm",
                  "Chronic kidney disease",
                  "Cystitis noninfective",
                  "Hematuria",
                  "Proteinuria",
                  "Renal calculi",
                  "Renal colic",
                  "Renal hemorrhage",
                  "Urinary fistula",
                  "Urinary incontinence",
                  "Urinary retention",
                  "Urinary tract obstruction",
                  "Urinary tract pain",
                  "Renal and urinary disorders - Other, specify"
                ]
              },
              {
                "name": "reproductive_event_type",
                "label": "Event type",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.event_category === 'Reproductive system and breast disorders'"
                },
                "enum": [
                  "Azoospermia",
                  "Breast atrophy",
                  "Breast pain",
                  "Dysmenorrhea",
                  "Dyspareunia",
                  "Erectile dysfunction",
                  "Fallopian tube obstruction",
                  "Fallopian tube stenosis",
                  "Female genital tract fistula",
                  "Genital edema",
                  "Gynecomastia",
                  "Hematosalpinx",
                  "Irregular menstruation",
                  "Menorrhagia",
                  "Oligospermia",
                  "Ovarian hemorrhage",
                  "Ovarian rupture",
                  "Ovulation pain",
                  "Pelvic floor muscle weakness",
                  "Pelvic pain",
                  "Penile pain",
                  "Perineal pain",
                  "Premature menopause",
                  "Prostatic hemorrhage",
                  "Prostatic obstruction",
                  "Prostatic pain",
                  "Scrotal pain",
                  "Spermatic cord hemorrhage",
                  "Spermatic cord obstruction",
                  "Testicular disorder",
                  "Testicular hemorrhage",
                  "Testicular pain",
                  "Uterine fistula",
                  "Uterine hemorrhage",
                  "Uterine obstruction",
                  "Uterine pain",
                  "Vaginal dryness",
                  "Vaginal fistula",
                  "Vaginal hemorrhage",
                  "Vaginal inflammation",
                  "Vaginal obstruction",
                  "Vaginal pain",
                  "Vaginal perforation",
                  "Vaginal stricture",
                  "Vaginismus",
                  "Reproductive system and breast disorders - Other, specify"
                ]
              },
              {
                "name": "respiratory_event_type",
                "label": "Event type",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.event_category === 'Respiratory, thoracic and mediastinal disorders'"
                },
                "enum": [
                  "Adult respiratory distress syndrome",
                  "Apnea",
                  "Aspiration",
                  "Atelectasis",
                  "Bronchial fistula",
                  "Bronchial obstruction",
                  "Bronchial stricture",
                  "Bronchopleural fistula",
                  "Bronchopulmonary hemorrhage",
                  "Bronchospasm",
                  "Chylothorax",
                  "Cough",
                  "Dyspnea",
                  "Epistaxis",
                  "Hiccups",
                  "Hoarseness",
                  "Hypoxia",
                  "Laryngeal edema",
                  "Laryngeal fistula",
                  "Laryngeal hemorrhage",
                  "Laryngeal inflammation",
                  "Laryngeal mucositis",
                  "Laryngeal obstruction",
                  "Laryngeal stenosis",
                  "Laryngopharyngeal dysesthesia",
                  "Laryngospasm",
                  "Mediastinal hemorrhage",
                  "Nasal congestion",
                  "Pharyngeal fistula",
                  "Pharyngeal hemorrhage",
                  "Pharyngeal mucositis",
                  "Pharyngeal necrosis",
                  "Pharyngeal stenosis",
                  "Pharyngolaryngeal pain",
                  "Pleural effusion",
                  "Pleural hemorrhage",
                  "Pleuritic pain",
                  "Pneumonitis",
                  "Pneumothorax",
                  "Productive cough",
                  "Pulmonary edema",
                  "Pulmonary fibrosis",
                  "Pulmonary fistula",
                  "Pulmonary hypertension",
                  "Respiratory failure",
                  "Retinoic acid syndrome",
                  "Sinus disorder",
                  "Sleep apnea",
                  "Sore throat",
                  "Stridor",
                  "Tracheal fistula",
                  "Tracheal mucositis",
                  "Tracheal stenosis",
                  "Voice alteration",
                  "Wheezing",
                  "Respiratory, thoracic and mediastinal disorders - Other, specify"
                ]
              },
              {
                "name": "skin_event_type",
                "label": "Event type",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.event_category === 'Skin and subcutaneous tissue disorders'"
                },
                "enum": [
                  "Bullous dermatitis",
                  "Dry skin",
                  "Erythema multiforme",
                  "Erythroderma",
                  "Fat atrophy",
                  "Hyperhidrosis",
                  "Hypohidrosis",
                  "Lipohypertrophy",
                  "Pain of skin",
                  "Palmar-plantar erythrodysesthesia syndrome",
                  "Periorbital edema",
                  "Photosensitivity",
                  "Pruritus",
                  "Purpura",
                  "Rash acneiform",
                  "Rash maculo-papular",
                  "Scalp pain",
                  "Skin atrophy",
                  "Skin induration",
                  "Skin ulceration",
                  "Stevens-Johnson syndrome",
                  "Toxic epidermal necrolysis",
                  "Urticaria",
                  "Skin and subcutaneous tissue disorders - Other, specify"
                ]
              },
              {
                "name": "social_event_type",
                "label": "Event type",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.event_category === 'Social circumstances'"
                },
                "enum": [ "Menopause", "Social circumstances - Other, specify" ]
              },
              {
                "name": "surgical_event_type",
                "label": "Event type",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.event_category === 'Surgical and medical procedures'"
                },
                "enum": [ "Surgical and medical procedures - Other, specify" ]
              },
              {
                "name": "vascular_event_type",
                "label": "Event type",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.event_category === 'Vascular disorders'"
                },
                "enum": [
                  "Capillary leak syndrome",
                  "Flushing",
                  "Hematoma",
                  "Hot flashes",
                  "Hypertension",
                  "Hypotension",
                  "Lymph leakage",
                  "Lymphedema",
                  "Lymphocele",
                  "Peripheral ischemia",
                  "Superior vena cava syndrome",
                  "Thromboembolic event",
                  "Vasculitis",
                  "Visceral arterial ischemia",
                  "Vascular disorders - Other, specify"
                ]
              },
              {
                "name": "other_event_specify",
                "label": "If other event, specify",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": [
                    "(item.blood_event_type && item.blood_event_type.search('Other, specify') >= 0) ||",
                    "(item.cardiac_event_type && item.cardiac_event_type.search('Other, specify') >= 0) ||",
                    "(item.congenital_event_type && item.congenital_event_type.search('Other, specify') >= 0) ||",
                    "(item.ear_event_type && item.ear_event_type.search('Other, specify') >= 0) ||",
                    "(item.endocrine_event_type && item.endocrine_event_type.search('Other, specify') >= 0) ||",
                    "(item.general_event_type && item.general_event_type.search('Other, specify') >= 0) ||",
                    "(item.immune_event_type && item.immune_event_type.search('Other, specify') >= 0) ||",
                    "(item.musculoskeletal_event_type && item.musculoskeletal_event_type.search('Other, specify') >= 0) ||",
                    "(item.neoplasms_event_type && item.neoplasms_event_type.search('Other, specify') >= 0) ||",
                    "(item.pregnancy_event_type && item.pregnancy_event_type.search('Other, specify') >= 0) ||",
                    "(item.reproductive_event_type && item.reproductive_event_type.search('Other, specify') >= 0) ||",
                    "(item.social_event_type && item.social_event_type.search('Other, specify') >= 0) ||",
                    "(item.surgical_event_type && item.surgical_event_type.search('Other, specify') >= 0)"
                  ]
                }
              },
              {
                "name": "grade",
                "label": "Grade (CTCAE 4.03)",
                "type": "string",
                "required": { "when": "always" },
                "enum": [ "1", "2", "3", "4", "5" ]
              },
              {
                "name": "ongoing",
                "label": "Is this event resolved or ongoing?",
                "type": "string",
                "required": { "when": "always" },
                "enum": [ "Resolved", "Ongoing" ]
              },
              {
                "name": "start_date",
                "label": "Event start date",
                "type": "string",
                "required": { "when": "always" },
                "validate": {
                  "name": "aeStartDateValid",
                  "message": "is not a valid date",
                  "code": "dateValid(value, 'YYYY-MM-DD')"
                },
                "permissions": [
                  {
                    "roles": [ "site1_read", "site1_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Vanderbilt'"
                    }
                  },
                  {
                    "roles": [ "site1_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Vanderbilt'"
                    }
                  },
                  {
                    "roles": [ "site2_read", "site2_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 2'"
                    }
                  },
                  {
                    "roles": [ "site2_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 2'"
                    }
                  },
                  {
                    "roles": [ "site3_read", "site3_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 3'"
                    }
                  },
                  {
                    "roles": [ "site3_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 3'"
                    }
                  },
                  {
                    "roles": [ "site4_read", "site4_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 4'"
                    }
                  },
                  {
                    "roles": [ "site4_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 4'"
                    }
                  },
                  {
                    "roles": [ "site5_read", "site5_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 5'"
                    }
                  },
                  {
                    "roles": [ "site5_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 5'"
                    }
                  },
                  {
                    "roles": [ "central_entry" ],
                    "modes": [ "read", "delete" ],
                    "matches": { "when": "always" }
                  },
                  {
                    "roles": [ "central_monitor", "central_read" ],
                    "modes": [ "read" ],
                    "matches": { "when": "always" }
                  }
                ]
              },
              {
                "name": "end_date",
                "label": "Event end date",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.ongoing === 'Resolved'"
                },
                "permissions": [
                  {
                    "roles": [ "site1_read", "site1_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Vanderbilt'"
                    }
                  },
                  {
                    "roles": [ "site1_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Vanderbilt'"
                    }
                  },
                  {
                    "roles": [ "site2_read", "site2_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 2'"
                    }
                  },
                  {
                    "roles": [ "site2_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 2'"
                    }
                  },
                  {
                    "roles": [ "site3_read", "site3_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 3'"
                    }
                  },
                  {
                    "roles": [ "site3_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 3'"
                    }
                  },
                  {
                    "roles": [ "site4_read", "site4_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 4'"
                    }
                  },
                  {
                    "roles": [ "site4_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 4'"
                    }
                  },
                  {
                    "roles": [ "site5_read", "site5_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 5'"
                    }
                  },
                  {
                    "roles": [ "site5_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 5'"
                    }
                  },
                  {
                    "roles": [ "central_entry" ],
                    "modes": [ "read", "delete" ],
                    "matches": { "when": "always" }
                  },
                  {
                    "roles": [ "central_monitor", "central_read" ],
                    "modes": [ "read" ],
                    "matches": { "when": "always" }
                  }
                ]
              },
              {
                "name": "disease_attribution",
                "label": "Disease attribution",
                "type": "string",
                "required": { "when": "always" },
                "enum": [
                  "Definite",
                  "Probable",
                  "Possible",
                  "Unlikely",
                  "Unrelated"
                ]
              },
              {
                "name": "tgr1202_attribution",
                "label": "Study drug: TGR-1202",
                "type": "string",
                "required": { "when": "always" },
                "enum": [
                  "Definite",
                  "Probable",
                  "Possible",
                  "Unlikely",
                  "Unrelated"
                ]
              },
              {
                "name": "ruxolitinib_attribution",
                "label": "Study drug: Ruxolitinib",
                "type": "string",
                "required": { "when": "always" },
                "enum": [
                  "Definite",
                  "Probable",
                  "Possible",
                  "Unlikely",
                  "Unrelated"
                ]
              },
              {
                "name": "procedure_attribution",
                "label": "Study procedure (please specify)",
                "type": "string",
                "required": { "when": "always" },
                "enum": [
                  "Definite",
                  "Probable",
                  "Possible",
                  "Unlikely",
                  "Unrelated"
                ]
              },
              {
                "name": "other_attribution",
                "label": "Other (please specify)",
                "type": "string",
                "required": { "when": "always" },
                "enum": [
                  "Definite",
                  "Probable",
                  "Possible",
                  "Unlikely",
                  "Unrelated"
                ]
              },
              {
                "name": "procedure_attribution_specify",
                "label": "For procedure attribution, specify procedure",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.procedure_attribution && item.procedure_attribution !== 'Unrelated'"
                }
              },
              {
                "name": "other_attribution_specify",
                "label": "For other attribution, specify other cause",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.other_attribution && item.other_attribution !== 'Unrelated'"
                }
              },
              {
                "name": "is_dlt",
                "label": "Is this adverse event considered a DLT?",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": [
                    "if(grandparent && grandparent.Visits){",
                    "  var visits;",
                    "  visits = grandparent.Visits.filter(function(x){return x.visit_type === 'Treatment period visit'});",
                    "  if(visits && visits.length > 0 && visits[0].visit_date){",
                    "    var c1d1_date = visits[0].visit_date;",
                    "    var start_date = new Date(item.start_date);",
                    "    start_date.setHours(0,0,0,0);",
                    "    (item.tgr1202_attribution && item.tgr1202_attribution !== 'Unrelated' || item.ruxolitinib_attribution && item.ruxolitinib_attribution !== 'Unrelated') && dateCompare(item.start_date, '>=', c1d1_date) && start_date <= addDays(c1d1_date, 28);",
                    "  }else{",
                    "    item.tgr1202_attribution && item.tgr1202_attribution !== 'Unrelated' || item.ruxolitinib_attribution && item.ruxolitinib_attribution !== 'Unrelated';",
                    "  }",
                    "}else{",
                  "    item.tgr1202_attribution && item.tgr1202_attribution !== 'Unrelated' || item.ruxolitinib_attribution && item.ruxolitinib_attribution !== 'Unrelated';",
                    "}"
                  ]
                },
                "enum": [ "Yes", "No" ]
              },
              {
                "name": "dlt_reason",
                "label": "DLT: provide reason",
                "type": "string",
                "required": { "when": "conditionally", "code": "item.is_dlt === 'Yes'" },
                "enum": [
                  "Protocol-specified",
                  "Investigator discretion",
                  "Other, specify"
                ]
              },
              {
                "name": "dlt_reason_other",
                "label": "DLT reason: specify other",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.is_dlt === 'Yes' && item.dlt_reason === 'Other, specify'"
                }
              },
              {
                "name": "dlt_comment",
                "label": "DLT comment (optional)",
                "type": "string"
              },
              {
                "name": "serious",
                "label": "Is this adverse event considered serious (SAE)?",
                "type": "string",
                "enum": [ "Yes", "No" ],
                "required": { "when": "always" }
              },
              {
                "name": "serious_reason",
                "label": "SAE: reason",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.serious === 'Yes'"
                },
                "enum": [
                  "Death",
                  "Life threatening condition",
                  "Hospitalization",
                  "Disability/incapacity",
                  "Birth defect/anomaly",
                  "Investigator discretion"
                ]
              },
              {
                "name": "serious_comments",
                "label": "SAE: additional information or comments",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.serious === 'Yes'"
                }
              },
              {
                "name": "serious_report_date",
                "label": "SAE: IRB report date",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.serious === 'Yes'"
                },
                "validate": {
                  "name": "aeSeriousReportDateValid",
                  "message": "is not a valid date",
                  "code": "dateValid(value, 'YYYY-MM-DD')"
                },
                "permissions": [
                  {
                    "roles": [ "site1_read", "site1_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Vanderbilt'"
                    }
                  },
                  {
                    "roles": [ "site1_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Vanderbilt'"
                    }
                  },
                  {
                    "roles": [ "site2_read", "site2_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 2'"
                    }
                  },
                  {
                    "roles": [ "site2_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 2'"
                    }
                  },
                  {
                    "roles": [ "site3_read", "site3_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 3'"
                    }
                  },
                  {
                    "roles": [ "site3_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 3'"
                    }
                  },
                  {
                    "roles": [ "site4_read", "site4_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 4'"
                    }
                  },
                  {
                    "roles": [ "site4_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 4'"
                    }
                  },
                  {
                    "roles": [ "site5_read", "site5_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 5'"
                    }
                  },
                  {
                    "roles": [ "site5_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 5'"
                    }
                  },
                  {
                    "roles": [ "central_entry" ],
                    "modes": [ "read", "delete" ],
                    "matches": { "when": "always" }
                  },
                  {
                    "roles": [ "central_monitor", "central_read" ],
                    "modes": [ "read" ],
                    "matches": { "when": "always" }
                  }
                ]
              }
            ],
            "validations": [
              {
                "name": "adverseEventsValidation1",
                "field": "grade",
                "message": "cannot be 5 if event is ongoing",
                "code": "item.grade !== '5' || item.ongoing !== 'Ongoing'"
              },
              {
                "name": "adverseEventsValidation2",
                "field": "start_date",
                "message": "must be after patient's date of birth",
                "code": [
                  "if(grandparent.Visits && grandparent.Visits.length > 0){",
                  "  var baseline = grandparent.Visits.filter(function(x){ return (x.visit_type === 'Screening visit' && x.BaselineCovariates && x.BaselineCovariates.birth_date)});",
                  "  if(baseline.length > 0){",
                  "    var dob = baseline[0].BaselineCovariates.birth_date;",
                  "    dateValid(item.start_date, 'YYYY-MM-DD') && dateCompare(item.start_date, '>=', dob);",
                  "  }else{",
                  "    dateValid(item.start_date, 'YYYY-MM-DD')",
                  "  }",
                  "}else{",
                  "  dateValid(item.start_date, 'YYYY-MM-DD')",
                  "}"
                ]
              },
              {
                "name": "adverseEventsValidation4",
                "field": "attribution",
                "message": "at least one attribution must be greater than 'Unrelated'",
                "code": "item.disease_attribution !== 'Unrelated' || item.tgr1202_attribution !== 'Unrelated' || item.ruxolitinib_attribution !== 'Unrelated' || item.procedure_attribution !== 'Unrelated' || item.other_attribution !== 'Unrelated'"
              },
              {
                "name": "adverseEventsValidation5",
                "field": "serious",
                "message": "must be 'Yes' if grade is 5",
                "code": "item.grade !== 5 || item.serious === 'Yes'"
              },
              {
                "name": "adverseEventsValidation6",
                "field": "serious_reason",
                "message": "must be 'Death' if grade is 5",
                "code": "item.grade !== 5 || item.serious_reason === 'Death'"
              },
              {
                "name": "adverseEventsValidation8",
                "field": "serious_report_date",
                "message": "must be on or after start date",
                "code": "item.serious !== 'Yes' || dateCompare(item.serious_report_date, '>=', item.start_date)"
              },
              {
                "name": "endDateValid",
                "field": "end_date",
                "message": "is not a valid date",
                "code": "item.ongoing !== 'Resolved' || dateValid(item.end_date, 'YYYY-MM-DD')"
              },
              {
                "name": "startDateLTEendDate",
                "field": "end_date",
                "message": "must be on or after start date",
                "code": "item.ongoing !== 'Resolved' || dateCompare(item.start_date, '<=', item.end_date)"
              },
              {
                "name": "followupDateGTEPrevious",
                "field": "followup_date",
                "message": "must be after most recent date reported",
                "code": [
                  "var result = true;",
                  "if(parent.id === undefined && grandparent.Followups && grandparent.Followups.length > 0){",
                  "  var events = grandparent.Followups.map(function(x){ if(x.id !== undefined){return x.event.followup_date}});",
                  "  var dates = events.filter(function(x){ return x != undefined});",
                  "  if(dates.length > 0){",
                  "    dates.sort();",
                  "    result = item.followup_date >= dates[dates.length - 1];",
                  "  }",
                  "}",
                  "result;"
                ]
              }
            ]
          },
          {
            "name": "rangeDetails",
            "children": [
              {
                "name": "clinically_significant",
                "label": "You have confirmed an out-of-range-value for this lab. Is this lab value clinically significant?",
                "type": "string",
                "enum": [ "Yes", "No" ]
              },
              {
                "name": "reportable_adverse_event",
                "label": "Is this lab value reportable as an adverse event?",
                "type": "string",
                "enum": [
                  "Yes. Reportable.",
                  "No. Not reportable per protocol.",
                  "No. Not reportable for other reason."
                ],
                "required": {
                  "when": "conditionally",
                  "code": "item.clinically_significant === 'Yes'"
                }
              },
              {
                "name": "reportable_adverse_event_other",
                "label": "Out-of-range lab not reportable as AE: specify reason",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.reportable_adverse_event === 'No. Not reportable for other reason.'"
                }
              }
            ]
          }
        ],
        "children": [
          {
            "name": "site_name",
            "label": "Registering Institution",
            "type": "string",
            "required": { "when": "always" },
            "enum": [ "Vanderbilt" ],
            "permissions": [
              {
                "roles": [
                  "site1_entry",
                  "site1_read",
                  "site1_pi",
                  "site1_restricted"
                ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Vanderbilt'"
                }
              },
              {
                "roles": [
                  "site2_entry",
                  "site2_read",
                  "site2_pi",
                  "site2_restricted"
                ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 2'"
                }
              },
              {
                "roles": [
                  "site3_entry",
                  "site3_read",
                  "site3_pi",
                  "site3_restricted"
                ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 3'"
                }
              },
              {
                "roles": [
                  "site4_entry",
                  "site4_read",
                  "site4_pi",
                  "site4_restricted"
                ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 4'"
                }
              },
              {
                "roles": [
                  "site5_entry",
                  "site5_read",
                  "site5_pi",
                  "site5_restricted"
                ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 5'"
                }
              },
              {
                "roles": [ "central_entry" ],
                "modes": [ "create", "read", "update", "delete" ],
                "matches": { "when": "always" }
              },
              {
                "roles": [
                  "central_monitor",
                  "central_pi",
                  "central_read",
                  "central_restricted"
                ],
                "modes": [ "read" ],
                "matches": { "when": "always" }
              }
            ]
          },
          {
            "name": "Eligibility",
            "children": [
              {
                "name": "eligible",
                "label": "Patient eligible for study?",
                "type": "string",
                "enum": [ "Yes", "No" ],
                "required": { "when": "always" }
              },
              {
                "name": "reason_ineligible",
                "label": "Reason ineligible",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.eligible === 'No'"
                }
              }
            ],
            "permissions": [
              {
                "roles": [ "site1_read", "site1_pi", "site1_restricted" ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Vanderbilt'"
                }
              },
              {
                "roles": [ "site2_read", "site2_pi", "site2_restricted" ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 2'"
                }
              },
              {
                "roles": [ "site3_read", "site3_pi", "site3_restricted" ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 3'"
                }
              },
              {
                "roles": [ "site4_read", "site4_pi", "site4_restricted" ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 4'"
                }
              },
              {
                "roles": [ "site5_read", "site5_pi", "site5_restricted" ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 5'"
                }
              },
              {
                "roles": [ "site1_entry" ],
                "modes": [ "read", "update" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Vanderbilt'"
                }
              },
              {
                "roles": [ "site2_entry" ],
                "modes": [ "read", "update" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 2'"
                }
              },
              {
                "roles": [ "site3_entry" ],
                "modes": [ "read", "update" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 3'"
                }
              },
              {
                "roles": [ "site4_entry" ],
                "modes": [ "read", "update" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 4'"
                }
              },
              {
                "roles": [ "site5_entry" ],
                "modes": [ "read", "update" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 5'"
                }
              },
              {
                "roles": [
                  "central_monitor",
                  "central_pi",
                  "central_read",
                  "central_restricted"
                ],
                "modes": [ "read" ],
                "matches": { "when": "always" }
              },
              {
                "roles": [ "central_entry" ],
                "modes": [ "create", "update", "read", "delete" ],
                "matches": { "when": "always" }
              }
            ]
          },
          {
            "name": "Details",
            "children": [
              {
                "name": "patient_site_id",
                "type": "string",
                "required": { "when": "always" },
                "validate": {
                  "name": "patient_study_idValid",
                  "message": "must be two numeric digits",
                  "code": "value.match(/^[0-9]{2}$/) !== null"
                }
              },
              {
                "name": "patient_study_id",
                "type": "string",
                "required": { "when": "always" },
                "validate": {
                  "name": "patient_study_idValid",
                  "message": "must be three numeric digits",
                  "code": "value.match(/^[0-9]{3}$/) !== null"
                }
              },
              {
                "name": "first_initial",
                "label": "Patient's first initial",
                "type": "string",
                "required": { "when": "always" },
                "validate": {
                  "name": "firstInitialFormat",
                  "message": "must be an alphabetic character",
                  "code": "value.match(/^[A-Za-z]$/) !== null"
                },
                "permissions": [
                  {
                    "roles": [ "site1_entry", "site1_read", "site1_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Vanderbilt'"
                    }
                  },
                  {
                    "roles": [ "site2_entry", "site2_read", "site2_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 2'"
                    }
                  },
                  {
                    "roles": [ "site3_entry", "site3_read", "site3_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 3'"
                    }
                  },
                  {
                    "roles": [ "site4_entry", "site4_read", "site4_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 4'"
                    }
                  },
                  {
                    "roles": [ "site5_entry", "site5_read", "site5_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 5'"
                    }
                  },
                  {
                    "roles": [ "central_entry" ],
                    "modes": [ "create", "read", "update", "delete" ],
                    "matches": { "when": "always" }
                  },
                  {
                    "roles": [ "central_monitor", "central_read" ],
                    "modes": [ "read" ],
                    "matches": { "when": "always" }
                  }
                ]
              },
              {
                "name": "middle_initial",
                "label": "Patient's middle initial",
                "type": "string",
                "validate": {
                  "name": "middleInitialFormat",
                  "message": "must be an alphabetic character",
                  "code": "!value || value.match(/^[A-Za-z]$/) !== null"
                },
                "permissions": [
                  {
                    "roles": [ "site1_entry", "site1_read", "site1_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Vanderbilt'"
                    }
                  },
                  {
                    "roles": [ "site2_entry", "site2_read", "site2_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 2'"
                    }
                  },
                  {
                    "roles": [ "site3_entry", "site3_read", "site3_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 3'"
                    }
                  },
                  {
                    "roles": [ "site4_entry", "site4_read", "site4_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 4'"
                    }
                  },
                  {
                    "roles": [ "site5_entry", "site5_read", "site5_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 5'"
                    }
                  },
                  {
                    "roles": [ "central_entry" ],
                    "modes": [ "create", "read", "update", "delete" ],
                    "matches": { "when": "always" }
                  },
                  {
                    "roles": [ "central_monitor", "central_read" ],
                    "modes": [ "read" ],
                    "matches": { "when": "always" }
                  }
                ]
              },
              {
                "name": "last_initial",
                "label": "Patient's last initial",
                "type": "string",
                "required": { "when": "always" },
                "validate": {
                  "name": "lastInitialFormat",
                  "message": "must be an alphabetic character",
                  "code": "value.match(/^[A-Za-z]$/) !== null"
                },
                "permissions": [
                  {
                    "roles": [ "site1_entry", "site1_read", "site1_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Vanderbilt'"
                    }
                  },
                  {
                    "roles": [ "site2_entry", "site2_read", "site2_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 2'"
                    }
                  },
                  {
                    "roles": [ "site3_entry", "site3_read", "site3_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 3'"
                    }
                  },
                  {
                    "roles": [ "site4_entry", "site4_read", "site4_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 4'"
                    }
                  },
                  {
                    "roles": [ "site5_entry", "site5_read", "site5_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 5'"
                    }
                  },
                  {
                    "roles": [ "central_entry" ],
                    "modes": [ "create", "read", "update", "delete" ],
                    "matches": { "when": "always" }
                  },
                  {
                    "roles": [ "central_monitor", "central_read" ],
                    "modes": [ "read" ],
                    "matches": { "when": "always" }
                  }
                ]
              },
              {
                "name": "trial_stage",
                "label": "In which trial stage was patient enrolled?",
                "type": "string",
                "required": { "when": "always" },
                "enum": [
                  "Escalation stage I",
                  "Escalation stage II",
                  "Expansion stage"
                ]
              },
              {
                "name": "stage_cohort",
                "label": "Specify cohort",
                "type": "number",
                "required": {
                  "when": "conditionally",
                  "code": "['Escalation stage I', 'Escalation stage II'].indexOf(item.trial_stage) >= 0"
                }
              }
            ],
            "validations": [
              {
                "name": "stageCohortPositiveInteger",
                "field": "stage_cohort",
                "message": "Stage cohort must be positive integer.",
                "code": "['Escalation stage I', 'Escalation stage II'].indexOf(item.trial_stage) < 0 || item.stage_cohort >= 0"
              }
            ],
            "permissions": [
              {
                "roles": [
                  "site1_entry",
                  "site1_read",
                  "site1_pi",
                  "site1_restricted"
                ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Vanderbilt'"
                }
              },
              {
                "roles": [
                  "site2_entry",
                  "site2_read",
                  "site2_pi",
                  "site2_restricted"
                ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 2'"
                }
              },
              {
                "roles": [
                  "site3_entry",
                  "site3_read",
                  "site3_pi",
                  "site3_restricted"
                ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 3'"
                }
              },
              {
                "roles": [
                  "site4_entry",
                  "site4_read",
                  "site4_pi",
                  "site4_restricted"
                ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 4'"
                }
              },
              {
                "roles": [
                  "site5_entry",
                  "site5_read",
                  "site5_pi",
                  "site5_restricted"
                ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 5'"
                }
              },
              {
                "roles": [ "central_entry" ],
                "modes": [ "create", "read", "update", "delete" ],
                "matches": { "when": "always" }
              },
              {
                "roles": [
                  "central_monitor",
                  "central_pi",
                  "central_read",
                  "central_restricted"
                ],
                "modes": [ "read" ],
                "matches": { "when": "always" }
              },
              {
                "roles": [ "central_monitor" ],
                "modes": [ "verify", "comment" ],
                "matches": { "when": "always" }
              }
            ]
          },
          {
            "name": "ConcomitantMedications",
            "children": [
              {
                "name": "medication",
                "label": "Medication",
                "type": "string",
                "required": { "when": "always" }
              },
              {
                "name": "indication",
                "label": "Indication",
                "type": "string",
                "required": { "when": "always" }
              },
              {
                "name": "ongoing",
                "label": "Is the use of this medication ongoing?",
                "type": "string",
                "required": { "when": "always" },
                "enum": [ "Yes", "No" ]
              },
              {
                "name": "start_date",
                "label": "Start date",
                "type": "string",
                "required": { "when": "always" },
                "validate": {
                  "name": "concomStartDateValid",
                  "message": "is not a valid date",
                  "code": "dateValid(value, '9999-99-99')"
                },
                "permissions": [
                  {
                    "roles": [ "site1_read", "site1_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Vanderbilt'"
                    }
                  },
                  {
                    "roles": [ "site1_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Vanderbilt'"
                    }
                  },
                  {
                    "roles": [ "site2_read", "site2_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 2'"
                    }
                  },
                  {
                    "roles": [ "site2_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 2'"
                    }
                  },
                  {
                    "roles": [ "site3_read", "site3_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 3'"
                    }
                  },
                  {
                    "roles": [ "site3_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 3'"
                    }
                  },
                  {
                    "roles": [ "site4_read", "site4_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 4'"
                    }
                  },
                  {
                    "roles": [ "site4_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 4'"
                    }
                  },
                  {
                    "roles": [ "site5_read", "site5_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 5'"
                    }
                  },
                  {
                    "roles": [ "site5_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 5'"
                    }
                  },
                  {
                    "roles": [ "central_entry" ],
                    "modes": [ "read", "delete" ],
                    "matches": { "when": "always" }
                  },
                  {
                    "roles": [ "central_monitor", "central_read" ],
                    "modes": [ "read" ],
                    "matches": { "when": "always" }
                  }
                ]
              },
              {
                "name": "stop_date",
                "label": "Stop date",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.ongoing === 'No';"
                },
                "permissions": [
                  {
                    "roles": [ "site1_read", "site1_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Vanderbilt'"
                    }
                  },
                  {
                    "roles": [ "site1_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Vanderbilt'"
                    }
                  },
                  {
                    "roles": [ "site2_read", "site2_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 2'"
                    }
                  },
                  {
                    "roles": [ "site2_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 2'"
                    }
                  },
                  {
                    "roles": [ "site3_read", "site3_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 3'"
                    }
                  },
                  {
                    "roles": [ "site3_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 3'"
                    }
                  },
                  {
                    "roles": [ "site4_read", "site4_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 4'"
                    }
                  },
                  {
                    "roles": [ "site4_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 4'"
                    }
                  },
                  {
                    "roles": [ "site5_read", "site5_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 5'"
                    }
                  },
                  {
                    "roles": [ "site5_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 5'"
                    }
                  },
                  {
                    "roles": [ "central_entry" ],
                    "modes": [ "read", "delete" ],
                    "matches": { "when": "always" }
                  },
                  {
                    "roles": [ "central_monitor", "central_read" ],
                    "modes": [ "read" ],
                    "matches": { "when": "always" }
                  }
                ]
              }
            ],
            "validations": [
              {
                "name": "stopDateValid",
                "field": "stop_date",
                "code": "item.ongoing !== 'No' || dateValid(item.stop_date, '9999-99-99');",
                "message": "is not a valid date"
              },
              {
                "name": "dateOrder",
                "field": "stop_date",
                "message": "must be after start date",
                "code": "item.ongoing !== 'No' || dateCompare(item.start_date, '<=', item.stop_date);"
              },
              {
                "name": "concomStartDateValid",
                "field": "start_date",
                "message": "must be after patient's date of birth",
                "code": [
                  "var screening = parent.Visits.filter(function(x){ return x.visit_type === 'Screening visit' });",
                  "if(screening.length > 0 && screening[0].BaselineCovariates && screening[0].BaselineCovariates.birth_date){",
                  "  dateCompare(screening[0].BaselineCovariates.birth_date, '<=', item.start_date)",
                  "}"
                ]
              }
            ],
            "hooks": [
              {
                "action": "afterComment",
                "roles": [ "central_monitor" ],
                "code": [
                  "if (item.isDirty()) {",
                  "  [{",
                  "    type: 'event',",
                  "    args: {",
                  "      event: 'email',",
                  "      eventName: 'sendCommentSubmittedEmail',",
                  "      data: {",
                  "        roles: [ 'site1_entry' ],",
                  "        notificationName: 'monitorCommented',",
                  "        from: 'noreply@vanderbilt.edu',",
                  "        bodyOpts: {",
                  "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/concomitant_medications/'+item.id.toString()",
                  "        }",
                  "      }",
                  "    }",
                  "  }]",
                  "}"
                ]
              },
              {
                "action": "afterComment",
                "roles": [ "site1_entry" ],
                "code": [
                  "if (item.isDirty()) {",
                  "  [{",
                  "    type: 'event',",
                  "    args: {",
                  "      event: 'email',",
                  "      eventName: 'sendCommentSubmittedEmail',",
                  "      data: {",
                  "        roles: [ 'central_monitor' ],",
                  "        notificationName: 'entryCommented',",
                  "        from: 'noreply@vanderbilt.edu',",
                  "        bodyOpts: {",
                  "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/concomitant_medications/'+item.id.toString()",
                  "        }",
                  "      }",
                  "    }",
                  "  }]",
                  "}"
                ]
              }
            ],
            "events": [
              {
                "name": "sendCommentSubmittedEmail",
                "code": [
                  "var mailerOpts = {",
                  "  to: data.opts.to,",
                  "  from: data.opts.from,",
                  "  bodyOpts: data.opts.bodyOpts",
                  "};",
                  "data.mailer.set(mailerOpts);",
                  "data.mailer.send();"
                ]
              }
            ],
            "notifications": [
              {
                "type": "email",
                "name": "monitorCommented",
                "subject": "HEM1538 EDC Query submitted",
                "body": "A query has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
              },
              {
                "type": "email",
                "name": "entryCommented",
                "subject": "Site entry user comment submitted",
                "body": "A query response has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
              },
              {
                "type": "display",
                "name": "create",
                "body": "Concomitant medication was saved successfully"
              },
              {
                "type": "display",
                "name": "update",
                "body": "Concomitant medication was saved successfully"
              },
              {
                "type": "display",
                "name": "delete",
                "body": "Concomitant medication was deleted successfully"
              }
            ],
            "permissions": [
              {
                "roles": [ "site1_read", "site1_pi", "site1_restricted" ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Vanderbilt'"
                }
              },
              {
                "roles": [ "site2_read", "site2_pi", "site2_restricted" ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 2'"
                }
              },
              {
                "roles": [ "site3_read", "site3_pi", "site3_restricted" ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 3'"
                }
              },
              {
                "roles": [ "site4_read", "site4_pi", "site4_restricted" ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 4'"
                }
              },
              {
                "roles": [ "site5_read", "site5_pi", "site5_restricted" ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 5'"
                }
              },
              {
                "roles": [ "site1_entry" ],
                "modes": [ "read", "update", "delete", "comment" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Vanderbilt'"
                }
              },
              {
                "roles": [ "site2_entry" ],
                "modes": [ "read", "update", "delete", "comment" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 2'"
                }
              },
              {
                "roles": [ "site3_entry" ],
                "modes": [ "read", "update", "delete", "comment" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 3'"
                }
              },
              {
                "roles": [ "site4_entry" ],
                "modes": [ "read", "update", "delete", "comment" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 4'"
                }
              },
              {
                "roles": [ "site5_entry" ],
                "modes": [ "read", "update", "delete", "comment" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 5'"
                }
              },
              {
                "roles": [
                  "central_entry",
                  "central_monitor",
                  "central_read",
                  "central_pi",
                  "central_restricted"
                ],
                "modes": [ "read" ],
                "matches": { "when": "always" }
              },
              {
                "roles": [ "central_monitor" ],
                "modes": [ "verify", "comment" ],
                "matches": { "when": "always" }
              }
            ],
            "repeatable": true,
            "draftable": true,
            "verifiable": { "type": "local" },
            "commentable": true
          },
          {
            "name": "Visits",
            "children": [
              {
                "name": "visit_type",
                "label": "Visit type",
                "type": "string",
                "required": { "when": "always" },
                "enum": [
                  "Screening visit",
                  "Treatment period visit",
                  "Unscheduled visit",
                  "Dose adjustment by phone",
                  "End-of-treatment (EoT) visit",
                  "End-of-study (EoS) visit"
                ]
              },
              {
                "name": "visit_date",
                "label": "Visit date",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.performed !== 'No'"
                },
                "validate": {
                  "name": "visitDateValid",
                  "message": "is not a valid date",
                  "code": "dateValid(value, 'YYYY-MM-DD')"
                },
                "permissions": [
                  {
                    "roles": [ "site1_read", "site1_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Vanderbilt'"
                    }
                  },
                  {
                    "roles": [ "site1_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Vanderbilt'"
                    }
                  },
                  {
                    "roles": [ "site2_read", "site2_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 2'"
                    }
                  },
                  {
                    "roles": [ "site2_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 2'"
                    }
                  },
                  {
                    "roles": [ "site3_read", "site3_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 3'"
                    }
                  },
                  {
                    "roles": [ "site3_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 3'"
                    }
                  },
                  {
                    "roles": [ "site4_read", "site4_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 4'"
                    }
                  },
                  {
                    "roles": [ "site4_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 4'"
                    }
                  },
                  {
                    "roles": [ "site5_read", "site5_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 5'"
                    }
                  },
                  {
                    "roles": [ "site5_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 5'"
                    }
                  },
                  {
                    "roles": [ "central_entry" ],
                    "modes": [ "read", "delete" ],
                    "matches": { "when": "always" }
                  },
                  {
                    "roles": [ "central_monitor", "central_read" ],
                    "modes": [ "read" ],
                    "matches": { "when": "always" }
                  }
                ]
              },
              {
                "name": "performed",
                "label": "Was visit performed?",
                "type": "string",
                "enum": [ "Yes", "No" ],
                "required": {
                  "when": "conditionally",
                  "code": "['End-of-treatment (EoT) visit', 'End-of-study (EoS) visit'].indexOf(item.visit_type) >= 0"
                }
              },
              {
                "name": "not_performed_reason",
                "label": "Visit not performed: reason not performed",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.performed === 'No';"
                },
                "enum": [
                  "Patient refusal",
                  "Patient lost to follow-up",
                  "Patient deceased",
                  "Other (specify)"
                ]
              },
              {
                "name": "not_performed_reason_other",
                "label": "Visit not performed: reason not performed: specify",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.performed === 'No' && item.not_performed_reason === 'Other (specify)';"
                }
              },
              {
                "name": "eot_completed",
                "label": "Was the patient removed from treatment, and EoT evaluations completed?",
                "type": "string",
                "enum": [ "Yes", "No" ],
                "required": {
                  "when": "conditionally",
                  "code": [
                    "var required = false;",
                    "if(item.visit_type === 'Unscheduled visit'){",
                    "  required = false;",
                    "}else if(item.visit_type === 'Treatment period visit' && parent.Visits){",
                    "  required = true;",
                    "  var tpVisits = parent.Visits.filter(function(x){return x.visit_type === 'Treatment period visit'});",
                    "  var tpeotVisits = tpVisits.filter(function(x){return x.eot_completed === 'Yes' && x.id !== undefined && x.id !== item.id});",
                    "  if(JSON.stringify(tpVisits[0]) === JSON.stringify(item)){",
                    "    required = false;",
                    "  }else if(tpeotVisits.length > 0){",
                    "    required = false;",
                    "  }",
                    "}",
                    "if(parent.Visits && parent.Visits.filter(function(x){return x.visit_type === 'End-of-treatment (EoT) visit'}).length > 0){ required = false; };",
                    "required;"
                  ]
                }
              },
              {
                "name": "cycle_day_c",
                "label": "Cycle",
                "type": "string"
              },
              { "name": "cycle_day_d", "label": "Day", "type": "string" },
              {
                "name": "BaselineCovariates",
                "children": [
                  {
                    "name": "birth_date",
                    "label": "Date of birth",
                    "type": "string",
                    "required": { "when": "always" },
                    "validate": {
                      "name": "birthDateValid",
                      "message": "is not a valid date",
                      "code": "dateValid(value, 'YYYY-MM-DD');"
                    },
                    "permissions": [
                      {
                        "roles": [ "site1_read", "site1_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site1_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site2_read", "site2_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site2_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site3_read", "site3_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site3_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site4_read", "site4_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site4_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site5_read", "site5_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "site5_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "central_entry" ],
                        "modes": [ "read", "delete" ],
                        "matches": { "when": "always" }
                      },
                      {
                        "roles": [ "central_monitor", "central_read" ],
                        "modes": [ "read" ],
                        "matches": { "when": "always" }
                      }
                    ]
                  },
                  {
                    "name": "consent_date",
                    "label": "Date of consent",
                    "type": "string",
                    "required": { "when": "always" },
                    "validate": {
                      "name": "consentDateValid",
                      "message": "is not a valid date",
                      "code": "dateValid(value, 'YYYY-MM-DD')"
                    },
                    "permissions": [
                      {
                        "roles": [ "site1_read", "site1_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site1_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site2_read", "site2_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site2_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site3_read", "site3_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site3_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site4_read", "site4_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site4_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site5_read", "site5_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "site5_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "central_entry" ],
                        "modes": [ "read", "delete" ],
                        "matches": { "when": "always" }
                      },
                      {
                        "roles": [ "central_monitor", "central_read" ],
                        "modes": [ "read" ],
                        "matches": { "when": "always" }
                      }
                    ]
                  },
                  {
                    "name": "sex",
                    "label": "Sex",
                    "type": "string",
                    "required": { "when": "always" },
                    "enum": [ "Male", "Female" ]
                  },
                  {
                    "name": "race",
                    "label": "Race",
                    "type": "string",
                    "required": { "when": "always" },
                    "enum": [
                      "White",
                      "Black or African American",
                      "Native Hawaiian or other Pacific Islander",
                      "Asian",
                      "American Indian or Alaska Native",
                      "Unknown/not reported"
                    ]
                  },
                  {
                    "name": "ethnicity",
                    "label": "Ethnicity",
                    "type": "string",
                    "required": { "when": "always" },
                    "enum": [
                      "Hispanic or Latino",
                      "Not Hispanic or Latino",
                      "Unknown/not reported"
                    ]
                  },
                  {
                    "name": "zip_code",
                    "label": "Zip code",
                    "type": "string",
                    "required": { "when": "always" },
                    "validate": {
                      "name": "zipCodeFormat",
                      "message": "must be 5 digits",
                      "code": "/^[0-9]{5}$/.test(value);"
                    },
                    "permissions": [
                      {
                        "roles": [ "site1_read", "site1_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site1_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site2_read", "site2_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site2_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site3_read", "site3_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site3_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site4_read", "site4_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site4_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site5_read", "site5_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "site5_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "central_entry" ],
                        "modes": [ "read", "delete" ],
                        "matches": { "when": "always" }
                      },
                      {
                        "roles": [ "central_monitor", "central_read" ],
                        "modes": [ "read" ],
                        "matches": { "when": "always" }
                      }
                    ]
                  },
                  {
                    "name": "diagnosis",
                    "label": "Diagnosis",
                    "type": "string",
                    "required": { "when": "always" },
                    "enum": [
                      "Polycythemia vera (PCV)",
                      "Myelofibrosis (MF)",
                      "Myelodysplastic/myeloproliferative (MDS/MPN)"
                    ]
                  },
                  {
                    "name": "pcv_detail",
                    "label": "PCV: details",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.diagnosis === 'Polycythemia vera (PCV)';"
                    },
                    "enum": [ "Hydroxyurea-resistant", "Hydroxyurea-intolerant" ]
                  },
                  {
                    "name": "mf_detail",
                    "label": "MF: details",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.diagnosis === 'Myelofibrosis (MF)';"
                    },
                    "enum": [
                      "Post-polycythemia vera MF (PPV-MF)",
                      "Post-essential thrombocytopenia MF (PET-MF)",
                      "Primary myelofibrosis (PMF)"
                    ]
                  },
                  {
                    "name": "mds_mpn_detail",
                    "label": "MDS/MPN: details",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.diagnosis === 'Myelodysplastic/myeloproliferative (MDS/MPN)';"
                    },
                    "enum": [
                      "Chronic myelomonocytic leukemia (CMML)",
                      "Atypical chronic myeloid leukemia (aCML)",
                      "Refractory anemia with thrombocytosis (RARS-T)",
                      "MDS/MPN-unclassifiable (MDS/MPN-U)"
                    ]
                  },
                  {
                    "name": "ruxolitinib_any_dose_start_date",
                    "label": "Ruxolitinib history: start date of rux (any dose)",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "grandparent.Details.trial_stage === 'Escalation stage I'"
                    },
                    "validate": {
                      "name": "anyDoseStartDateValid",
                      "message": "is not a valid date",
                      "code": "dateValid(value, 'YYYY-99-99')"
                    },
                    "permissions": [
                      {
                        "roles": [ "site1_read", "site1_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site1_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site2_read", "site2_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site2_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site3_read", "site3_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site3_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site4_read", "site4_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site4_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site5_read", "site5_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "site5_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "central_entry" ],
                        "modes": [ "read", "delete" ],
                        "matches": { "when": "always" }
                      },
                      {
                        "roles": [ "central_monitor", "central_read" ],
                        "modes": [ "read" ],
                        "matches": { "when": "always" }
                      }
                    ]
                  },
                  {
                    "name": "ruxolitinib_baseline_start_date",
                    "label": "Ruxolitinib history: start date of rux (baseline dose at study enrollment)",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "grandparent.Details.trial_stage === 'Escalation stage I'"
                    },
                    "validate": {
                      "name": "baselineStartDateValid",
                      "message": "is not a valid date",
                      "code": "dateValid(value, 'YYYY-99-99')"
                    },
                    "permissions": [
                      {
                        "roles": [ "site1_read", "site1_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site1_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site2_read", "site2_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site2_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site3_read", "site3_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site3_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site4_read", "site4_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site4_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site5_read", "site5_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "site5_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "central_entry" ],
                        "modes": [ "read", "delete" ],
                        "matches": { "when": "always" }
                      },
                      {
                        "roles": [ "central_monitor", "central_read" ],
                        "modes": [ "read" ],
                        "matches": { "when": "always" }
                      }
                    ]
                  },
                  {
                    "name": "ruxolitinib_baseline_dose",
                    "label": "Ruxolitinib history: baseline dose level (at study enrollment) (mg)",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "grandparent.Details.trial_stage === 'Escalation stage I'"
                    },
                    "enum": [ "5", "10", "15", "20" ]
                  },
                  {
                    "name": "ruxolitinib_symptom_response",
                    "label": "Symptom response",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "grandparent.Details.trial_stage === 'Escalation stage I'"
                    },
                    "enum": [
                      "Complete response for this parameter",
                      "Less than complete response for this parameter"
                    ]
                  },
                  {
                    "name": "ruxolitinib_bone_marrow_response",
                    "label": "Bone marrow response",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "grandparent.Details.trial_stage === 'Escalation stage I'"
                    },
                    "enum": [
                      "Complete response for this parameter",
                      "Less than complete response for this parameter"
                    ]
                  },
                  {
                    "name": "ruxolitinib_spleen_response",
                    "label": "Spleen response",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "grandparent.Details.trial_stage === 'Escalation stage I'"
                    },
                    "enum": [
                      "Complete response for this parameter",
                      "Less than complete response for this parameter"
                    ]
                  },
                  {
                    "name": "ruxolitinib_blood_count_response",
                    "label": "Blood count response",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "grandparent.Details.trial_stage === 'Escalation stage I'"
                    },
                    "enum": [
                      "Complete response for this parameter",
                      "Less than complete response for this parameter"
                    ]
                  },
                  {
                    "name": "smoking_history",
                    "label": "Smoking history",
                    "type": "string",
                    "required": { "when": "always" },
                    "enum": [ "Current smoker", "Former smoker", "Never smoker" ]
                  },
                  {
                    "name": "alcohol_history",
                    "label": "Alcohol history",
                    "type": "string",
                    "required": { "when": "always" },
                    "enum": [ "Current drinker", "Former drinker", "Never drinker" ]
                  },
                  {
                    "name": "thrombotic_history",
                    "label": "Does patient have history of thrombotic events?",
                    "type": "string",
                    "required": { "when": "always" },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "thrombotic_venous",
                    "label": "Venous thrombosis (e.g., DVT or PE)",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.thrombotic_history === 'Yes';"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "thrombotic_peripheral_arterial",
                    "label": "Peripheral arterial thrombosis (e.g., femoral, hepatic, or retinal atery clot)",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.thrombotic_history === 'Yes';"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "thrombotic_cva_tia",
                    "label": "CVA or TIA",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.thrombotic_history === 'Yes';"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "thrombotic_myocardial_infarction",
                    "label": "Myocardial infarction",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.thrombotic_history === 'Yes';"
                    },
                    "enum": [ "Yes", "No" ]
                  }
                ],
                "warnings": [
                  {
                    "name": "consentDateWarning",
                    "field": "consent_date",
                    "message": "Informed consent date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                    "code": [
                      "if(item.consent_date){",
                      "  var screening = grandparent.Visits.filter(function(x){return x.visit_type === 'Screening visit'})[0];",
                      "  if(screening && screening.visit_date.match('99') === null && item.consent_date.match('99') === null){",
                      "    var lower = addDays(screening.visit_date, -28);",
                      "    var upper = addDays(screening.visit_date, 7);",
                      "    var consent = new Date(item.consent_date);",
                      "    consent.setHours(0,0,0,0);",
                      "    lower <= consent && consent <= upper;",
                      "  }",
                      "}"
                    ]
                  }
                ],
                "validations": [
                  {
                    "name": "birthDateBeforeScreening",
                    "field": "birth_date",
                    "message": "must be before screening date",
                    "code": "dateCompare(item.birth_date, '<', parent.visit_date)"
                  },
                  {
                    "name": "escalationStageDiagnosis",
                    "field": "diagnosis",
                    "message": "cannot be Myelodysplastic/myeloproliferative (MDS/MPN) when patient is in Escalation Stage I or II",
                    "code": "grandparent.Details.trial_stage === 'Expansion stage' || item.diagnosis !== 'Myelodysplastic/myeloproliferative (MDS/MPN)'"
                  },
                  {
                    "name": "baselineCovariatesValidation4",
                    "field": "ruxolitinib_any_dose_start_date",
                    "message": "must be greater than patient's date of birth",
                    "code": "grandparent.Details.trial_stage !== 'Escalation stage I' || dateCompare(item.ruxolitinib_any_dose_start_date, '>=', item.birth_date);"
                  },
                  {
                    "name": "baselineCovariatesValidation5",
                    "field": "ruxolitinib_any_dose_start_date",
                    "message": "must be less than or equal to date of consent",
                    "code": "grandparent.Details.trial_stage !== 'Escalation stage I' || dateCompare(item.ruxolitinib_any_dose_start_date, '<=', item.consent_date);"
                  },
                  {
                    "name": "baselineCovariatesValidation6",
                    "field": "ruxolitinib_any_dose_start_date",
                    "message": "must be less than or equal to baseline start date",
                    "code": "grandparent.Details.trial_stage !== 'Escalation stage I' || dateCompare(item.ruxolitinib_any_dose_start_date, '<=', item.ruxolitinib_baseline_start_date);"
                  },
                  {
                    "name": "baselineCovariatesValidation7",
                    "field": "response",
                    "message": "at least one response must be 'Less than complete'",
                    "code": "grandparent.Details.trial_stage !== 'Escalation stage I' || item.ruxolitinib_symptom_response === 'Less than complete response for this parameter' || item.ruxolitinib_bone_marrow_response === 'Less than complete response for this parameter' || item.ruxolitinib_spleen_response === 'Less than complete response for this parameter' || item.ruxolitinib_blood_count_response === 'Less than complete response for this parameter';"
                  },
                  {
                    "name": "baselineCovariatesValidation8",
                    "field": "thrombotic_history",
                    "message": "at least one thrombotic event must be 'Yes'",
                    "code": "item.thrombotic_history === 'No' || (item.thrombotic_venous === 'Yes' || item.thrombotic_peripheral_arterial === 'Yes' || item.thrombotic_cva_tia === 'Yes' || item.thrombotic_myocardial_infarction === 'Yes');"
                  }
                ],
                "hooks": [
                  {
                    "action": "afterComment",
                    "roles": [ "central_monitor" ],
                    "code": [
                      "if (item.isDirty()) {",
                      "  [{",
                      "    type: 'event',",
                      "    args: {",
                      "      event: 'email',",
                      "      eventName: 'sendCommentSubmittedEmail',",
                      "      data: {",
                      "        roles: [ 'site1_entry' ],",
                      "        notificationName: 'monitorCommented',",
                      "        from: 'noreply@vanderbilt.edu',",
                      "        bodyOpts: {",
                      "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/visits/'+parent.id.toString()+'/BaselineCovariates'",
                      "        }",
                      "      }",
                      "    }",
                      "  }]",
                      "}"
                    ]
                  },
                  {
                    "action": "afterComment",
                    "roles": [ "site1_entry" ],
                    "code": [
                      "if (item.isDirty()) {",
                      "  [{",
                      "    type: 'event',",
                      "    args: {",
                      "      event: 'email',",
                      "      eventName: 'sendCommentSubmittedEmail',",
                      "      data: {",
                      "        roles: [ 'central_monitor' ],",
                      "        notificationName: 'entryCommented',",
                      "        from: 'noreply@vanderbilt.edu',",
                      "        bodyOpts: {",
                      "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/visits/'+parent.id.toString()+'/BaselineCovariates'",
                      "        }",
                      "      }",
                      "    }",
                      "  }]",
                      "}"
                    ]
                  }
                ],
                "events": [
                  {
                    "name": "sendCommentSubmittedEmail",
                    "code": [
                      "var mailerOpts = {",
                      "  to: data.opts.to,",
                      "  from: data.opts.from,",
                      "  bodyOpts: data.opts.bodyOpts",
                      "};",
                      "data.mailer.set(mailerOpts);",
                      "data.mailer.send();"
                    ]
                  }
                ],
                "notifications": [
                  {
                    "type": "email",
                    "name": "monitorCommented",
                    "subject": "HEM1538 EDC Query submitted",
                    "body": "A query has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
                  },
                  {
                    "type": "email",
                    "name": "entryCommented",
                    "subject": "Site entry user comment submitted",
                    "body": "A query response has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
                  },
                  {
                    "type": "display",
                    "name": "create",
                    "body": "Baseline covariate was saved successfully"
                  },
                  {
                    "type": "display",
                    "name": "update",
                    "body": "Baseline covariate was saved successfully"
                  },
                  {
                    "type": "display",
                    "name": "delete",
                    "body": "Baseline covariate was deleted successfully"
                  }
                ],
                "draftable": true,
                "verifiable": { "type": "local" },
                "commentable": true
              },
              {
                "name": "ObservationsAndReviews",
                "children": [
                  {
                    "name": "med_hx_reviewed",
                    "label": "Was medical history reviewed and updated for this study visit?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "parent.visit_type === 'Screening visit' || parent.cycle_day_d === '1' || parent.visit_type === 'End-of-treatment (EoT) visit' || parent.eot_completed === 'Yes' || parent.visit_type === 'Unscheduled visit' || parent.visit_type === 'Dose adjustment by phone' "
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "not_reviewed_reason",
                    "label": "Medical history: reason not performed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.med_hx_reviewed === 'No' && parent.visit_type !== 'Unscheduled visit' && parent.visit_type !== 'Dose adjustment by phone' "
                    },
                    "enum": [
                      "Patient refusal",
                      "Physician judgment",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "not_reviewed_reason_other",
                    "label": "Medical history: reason not performed: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.not_reviewed_reason === 'Other (specify)'"
                    }
                  },
                  {
                    "name": "thr_hem_events",
                    "label": "Has patient experienced any thrombotic or homorrhagic events since last disease assessment?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "var x = parseInt(parent.cycle_day_c); item.med_hx_reviewed === 'Yes' && (((x !== 1 && x%2===1) && parent.cycle_day_d === '1') || parent.visit_type === 'End-of-treatment (EoT) visit' || parent.eot_completed === 'Yes')"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "PRBC_performed_priorC1D1",
                    "label": "Has patient had any transfusion of packed red blood cells (PRBC) in the 12 weeks prior to C1D1?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.med_hx_reviewed === 'Yes' && parent.cycle_day_c === '1' && parent.cycle_day_d === '1' && grandparent.Visits[0].BaselineCovariates.diagnosis === 'Myelofibrosis (MF)'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "PRBC_units_priorC1D1",
                    "label": "How many total units of PRBC have been transfused in the 12 weeks prior to C1D1?",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.PRBC_performed_priorC1D1 === 'Yes'"
                    }
                  },
                  {
                    "name": "PRBC_date_priorC1D1",
                    "label": "Date of patient's MOST RECENT transfusion of PRBC prior to C1D1",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.PRBC_performed_priorC1D1 === 'Yes'"
                    },
                    "validate": {
                      "name": "PRBC_date_priorC1D1Valid",
                      "code": "dateValid(value, 'YYYY-MM-DD')",
                      "message": "is not a valid date"
                    },
                    "permissions": [
                      {
                        "roles": [ "site1_read", "site1_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site1_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site2_read", "site2_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site2_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site3_read", "site3_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site3_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site4_read", "site4_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site4_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site5_read", "site5_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "site5_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "central_entry" ],
                        "modes": [ "read", "delete" ],
                        "matches": { "when": "always" }
                      },
                      {
                        "roles": [ "central_monitor", "central_read" ],
                        "modes": [ "read" ],
                        "matches": { "when": "always" }
                      }
                    ]
                  },
                  {
                    "name": "PRBC_performed_sinceC1D1",
                    "label": "Has patient had any transfusion of packed red blood cells (PRBC) since C1D1?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": [
                        "var result = false; ",
                        "if(item.med_hx_reviewed === 'Yes' && grandparent.Visits[0].BaselineCovariates.diagnosis === 'Myelofibrosis (MF)') {",
                        "  if(parent.cycle_day_c === '3' && parent.cycle_day_d === '1'){",
                        "    result = true;",
                        "  }else if (parent.visit_type === 'End-of-treatment (EoT) visit' || parent.eot_completed === 'Yes') {",
                        "    var tpv = grandparent.Visits.filter(function(x){return x.visit_type === 'Treatment period visit'});",
                        "    if(tpv.length > 0) {",
                        "      var upper = addDays(tpv[0].visit_date, 84);",
                        "      var vdate = new Date(parent.visit_date);",
                        "      vdate.setHours(0,0,0,0);",
                        "      result = vdate <= upper;",
                        "    }",
                        "  }",
                        "}",
                        "result"
                      ]
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "PRBC_performed_12week_priorVisit",
                    "label": "Has patient had any transfusion of packed red blood cells (PRBC) in the 12 weeks prior to this visit?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": [
                        "var result = false; ",
                        "if(item.med_hx_reviewed === 'Yes' && grandparent.Visits[0].BaselineCovariates.diagnosis === 'Myelofibrosis (MF)') {",
                        "  if(parent.cycle_day_c !== undefined) {",
                        "    var x = parseInt(parent.cycle_day_c);",
                        "    result = (x > 3 && x%2===1) && parent.cycle_day_d === '1';",
                        "  }",
                        "  if(!result && (parent.visit_type === 'End-of-treatment (EoT) visit' || parent.eot_completed === 'Yes')){ ",
                        "    var tpv = grandparent.Visits.filter(function(x){return x.visit_type === 'Treatment period visit'});",
                        "    if(tpv.length > 0) {",
                        "      var lower = addDays(tpv[0].visit_date, 84);",
                        "      var vdate = new Date(parent.visit_date);",
                        "      vdate.setHours(0,0,0,0);",
                        "      result = vdate > lower;",
                        "    }",
                        "  }",
                        "}",
                        "result"
                      ]
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "PRBC_performed_8week_priorVisit",
                    "label": "Has patient had any transfusion of packed red blood cells (PRBC) in the eight weeks prior to this visit?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "var x = parseInt(parent.cycle_day_c);item.med_hx_reviewed === 'Yes' && (((x%2===1) && parent.cycle_day_d === '1') || parent.visit_type === 'End-of-treatment (EoT) visit' || parent.eot_completed === 'Yes') && grandparent.Visits[0].BaselineCovariates.diagnosis === 'Myelodysplastic/myeloproliferative (MDS/MPN)'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "PRBC_performed_4week_priorVisit",
                    "label": "Has patient had any transfusion of platelets in the four weeks prior to this visit?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "var x = parseInt(parent.cycle_day_c);item.med_hx_reviewed === 'Yes' && (((x%2===1) && parent.cycle_day_d === '1') || parent.visit_type === 'End-of-treatment (EoT) visit' || parent.eot_completed === 'Yes') && grandparent.Visits[0].BaselineCovariates.diagnosis === 'Myelodysplastic/myeloproliferative (MDS/MPN)'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "Transfusion_PRBC",
                    "label": "Transfusion-dependency (PRBC)",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "var x = parseInt(parent.cycle_day_c);item.med_hx_reviewed === 'Yes' && (((x%2===1) && parent.cycle_day_d === '1') || parent.visit_type === 'End-of-treatment (EoT) visit' || parent.eot_completed === 'Yes') && grandparent.Visits[0].BaselineCovariates.diagnosis !== 'Polycythemia vera (PCV)'"
                    },
                    "enum": [
                      "Transfusion-dependent (PRBC)",
                      "Transfusion-independent (PRBC)"
                    ]
                  },
                  {
                    "name": "Transfusion_platelets",
                    "label": "Transfusion-dependency (platelets)",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "var x = parseInt(parent.cycle_day_c);item.med_hx_reviewed === 'Yes' && (((x%2===1) && parent.cycle_day_d === '1') || parent.visit_type === 'End-of-treatment (EoT) visit' || parent.eot_completed === 'Yes') && grandparent.Visits[0].BaselineCovariates.diagnosis === 'Myelodysplastic/myeloproliferative (MDS/MPN)'"
                    },
                    "enum": [
                      "Transfusion-dependent (platelets)",
                      "Transfusion-independent (platelets)"
                    ]
                  },
                  {
                    "name": "AE_reviewed",
                    "label": "Were adverse events reviewed and updated for this study visit?",
                    "type": "string",
                    "required": { "when": "always" },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "not_AEreviewed_reason",
                    "label": "Adverse events: reason not performed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.AE_reviewed === 'No'"
                    },
                    "enum": [
                      "Patient refusal",
                      "Physician judgment",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "not_AEreviewed_reason_other",
                    "label": "Adverse events: reason not performed: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.not_AEreviewed_reason === 'Other (specify)'"
                    }
                  },
                  {
                    "name": "CM_reviewed",
                    "label": "Were concomitant medications reviewed and updated for this study visit?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "parent.visit_type === 'Screening visit' || parent.cycle_day_d === '1' || parent.visit_type === 'End-of-treatment (EoT) visit' || parent.eot_completed === 'Yes' || parent.visit_type === 'Unscheduled visit'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "not_CMreviewed_reason",
                    "label": "Concomitant medications: reason not performed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.CM_reviewed === 'No' && parent.visit_type !== 'Unscheduled visit'"
                    },
                    "enum": [
                      "Patient refusal",
                      "Physician judgment",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "not_CMreviewed_reason_other",
                    "label": "Concomitant medications: reason not performed: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.not_CMreviewed_reason === 'Other (specify)'"
                    }
                  },
                  {
                    "name": "PCP_started",
                    "label": "Has patient started drug regimen for PCP prophylaxis?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.CM_reviewed === 'Yes' && parent.cycle_day_c === '2' && parent.cycle_day_d === '1' && parent.eot_completed !== 'Yes'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "PCP_changed",
                    "label": "Has patient changed PCP prophylaxis drug regimen since last review of concomitant medications?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": [
                        "var result = false; ",
                        "if(item.CM_reviewed === 'Yes') {",
                        "  if(parent.visit_type === 'Unscheduled visit') {",
                        "    result = true;",
                        "  }else if(parent.cycle_day_c !== undefined) {",
                        "    var x = parseInt(parent.cycle_day_c);",
                        "    result = x > 2 && parent.cycle_day_d === '1';",
                        "  }",
                        "  if(!result && (parent.visit_type === 'End-of-treatment (EoT) visit' || parent.eot_completed === 'Yes')){ ",
                        "    var tpv = grandparent.Visits.filter(function(x){return x.visit_type === 'Treatment period visit'});",
                        "    if(tpv.length > 0) {",
                        "      var lower = addDays(tpv[0].visit_date, 28);",
                        "      var vdate = new Date(parent.visit_date);",
                        "      vdate.setHours(0,0,0,0);",
                        "      result = vdate > lower;",
                        "    }",
                        "  }",
                        "}",
                        "result"
                      ]
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "PCP_prophy_drug",
                    "label": "PCP prophy: drug",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": [
                        "var result = false; ",
                        "if(item.PCP_started === 'Yes' || item.PCP_changed === 'Yes') {",
                        "  if(parent.visit_type === 'Unscheduled visit') {",
                        "    result = true;",
                        "  }else if(parent.cycle_day_c !== undefined) {",
                        "    var x = parseInt(parent.cycle_day_c);",
                        "    result = (x > 2 || (x === 2 && parent.eot_completed !== 'Yes')) && parent.cycle_day_d === '1';",
                        "  }",
                        "  if(!result && (parent.visit_type === 'End-of-treatment (EoT) visit' || parent.eot_completed === 'Yes')){ ",
                        "    if(parent.cycle_day_c !== '2' || parent.cycle_day_d !== '1') {",
                        "      var tpv = grandparent.Visits.filter(function(x){return x.visit_type === 'Treatment period visit'});",
                        "      if(tpv.length > 0) {",
                        "        var lower = addDays(tpv[0].visit_date, 28);",
                        "        var vdate = new Date(parent.visit_date);",
                        "        vdate.setHours(0,0,0,0);",
                        "        result = vdate > lower;",
                        "      }",
                        "    }",
                        "  }",
                        "}",
                        "result"
                      ]
                    },
                    "enum": [
                      "Atovaquone",
                      "Bactrim (trimethoprim-sulfamethoxazole)",
                      "Pentamidine",
                      "Other"
                    ]
                  },
                  {
                    "name": "PCP_prophy_drug_other",
                    "label": "If other PCP prophy drug: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.PCP_prophy_drug === 'Other'"
                    }
                  },
                  {
                    "name": "PCP_prophy_start_date",
                    "label": "PCP prophy drug: start date",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": [
                        "var x = parseInt(parent.cycle_day_c);",
                        "(item.PCP_started === 'Yes' || item.PCP_changed === 'Yes') && ",
                        "((parent.cycle_day_d === '1' && ((x === 2 && parent.eot_completed !== 'Yes') || x > 2)) || ",
                        "(parent.eot_completed === 'Yes' && (parent.cycle_day_c !== '2' || parent.cycle_day_d !== '1')) || ",
                        "parent.visit_type === 'End-of-treatment (EoT) visit' || parent.visit_type === 'Unscheduled visit'); "
                      ]
                    },
                    "permissions": [
                      {
                        "roles": [ "site1_read", "site1_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site1_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site2_read", "site2_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site2_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site3_read", "site3_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site3_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site4_read", "site4_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site4_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site5_read", "site5_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "site5_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "central_entry" ],
                        "modes": [ "read", "delete" ],
                        "matches": { "when": "always" }
                      },
                      {
                        "roles": [ "central_monitor", "central_read" ],
                        "modes": [ "read" ],
                        "matches": { "when": "always" }
                      }
                    ]
                  },
                  {
                    "name": "PCP_prophy_route",
                    "label": "PCP prophy drug: route of administration",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": [
                        "var x = parseInt(parent.cycle_day_c);",
                        "(item.PCP_started === 'Yes' || item.PCP_changed === 'Yes') && ",
                        "((parent.cycle_day_d === '1' && ((x === 2 && parent.eot_completed !== 'Yes') || x > 2)) || ",
                        "(parent.eot_completed === 'Yes' && (parent.cycle_day_c !== '2' || parent.cycle_day_d !== '1')) || ",
                        "parent.visit_type === 'End-of-treatment (EoT) visit' || parent.visit_type === 'Unscheduled visit'); "
                      ]
                    },
                    "enum": [ "Oral", "Inhaled" ]
                  },
                  {
                    "name": "PCP_prophy_dosage",
                    "label": "PCP prophy drug: dosage (mg)",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": [
                        "var x = parseInt(parent.cycle_day_c);",
                        "(item.PCP_started === 'Yes' || item.PCP_changed === 'Yes') && ",
                        "((parent.cycle_day_d === '1' && ((x === 2 && parent.eot_completed !== 'Yes') || x > 2)) || ",
                        "(parent.eot_completed === 'Yes' && (parent.cycle_day_c !== '2' || parent.cycle_day_d !== '1')) || ",
                        "parent.visit_type === 'End-of-treatment (EoT) visit' || parent.visit_type === 'Unscheduled visit'); "
                      ]
                    }
                  },
                  {
                    "name": "PCP_prophy_frequency",
                    "label": "PCP prophy drug: frequency",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": [
                        "var x = parseInt(parent.cycle_day_c);",
                        "(item.PCP_started === 'Yes' || item.PCP_changed === 'Yes') && ",
                        "((parent.cycle_day_d === '1' && ((x === 2 && parent.eot_completed !== 'Yes') || x > 2)) || ",
                        "(parent.eot_completed === 'Yes' && (parent.cycle_day_c !== '2' || parent.cycle_day_d !== '1')) || ",
                        "parent.visit_type === 'End-of-treatment (EoT) visit' || parent.visit_type === 'Unscheduled visit'); "
                      ]
                    },
                    "enum": [ "Once daily", "Twice daily", "Once monthly", "Other" ]
                  },
                  {
                    "name": "PCP_prophy_frequency_other",
                    "label": "If other PCP prophy drug frequency: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.PCP_prophy_frequency === 'Other'"
                    }
                  }
                ],
                "validations": [
                  {
                    "name": "PRBC_date_priorC1D1Valid",
                    "field": "PRBC_date_priorC1D1",
                    "message": "must be earlier than C1D1",
                    "code": "!item.PRBC_date_priorC1D1 || dateCompare(item.PRBC_date_priorC1D1, '<=', parent.visit_date)"
                  },
                  {
                    "name": "PCP_prophy_start_dateValid",
                    "field": "PCP_prophy_start_date",
                    "message": "is not a valid date",
                    "code": "!item.PCP_prophy_start_date || dateValid(item.PCP_prophy_start_date, 'YYYY-MM-DD')"
                  }
                ],
                "hooks": [
                  {
                    "action": "afterComment",
                    "roles": [ "central_monitor" ],
                    "code": [
                      "if (item.isDirty()) {",
                      "  [{",
                      "    type: 'event',",
                      "    args: {",
                      "      event: 'email',",
                      "      eventName: 'sendCommentSubmittedEmail',",
                      "      data: {",
                      "        roles: [ 'site1_entry' ],",
                      "        notificationName: 'monitorCommented',",
                      "        from: 'noreply@vanderbilt.edu',",
                      "        bodyOpts: {",
                      "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/visits/'+parent.id.toString()+'/ObservationsAndReviews'",
                      "        }",
                      "      }",
                      "    }",
                      "  }]",
                      "}"
                    ]
                  },
                  {
                    "action": "afterComment",
                    "roles": [ "site1_entry" ],
                    "code": [
                      "if (item.isDirty()) {",
                      "  [{",
                      "    type: 'event',",
                      "    args: {",
                      "      event: 'email',",
                      "      eventName: 'sendCommentSubmittedEmail',",
                      "      data: {",
                      "        roles: [ 'central_monitor' ],",
                      "        notificationName: 'entryCommented',",
                      "        from: 'noreply@vanderbilt.edu',",
                      "        bodyOpts: {",
                      "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/visits/'+parent.id.toString()+'/ObservationsAndReviews'",
                      "        }",
                      "      }",
                      "    }",
                      "  }]",
                      "}"
                    ]
                  }
                ],
                "events": [
                  {
                    "name": "sendCommentSubmittedEmail",
                    "code": [
                      "var mailerOpts = {",
                      "  to: data.opts.to,",
                      "  from: data.opts.from,",
                      "  bodyOpts: data.opts.bodyOpts",
                      "};",
                      "data.mailer.set(mailerOpts);",
                      "data.mailer.send();"
                    ]
                  }
                ],
                "notifications": [
                  {
                    "type": "email",
                    "name": "monitorCommented",
                    "subject": "HEM1538 EDC Query submitted",
                    "body": "A query has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
                  },
                  {
                    "type": "email",
                    "name": "entryCommented",
                    "subject": "Site entry user comment submitted",
                    "body": "A query response has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
                  },
                  {
                    "type": "display",
                    "name": "create",
                    "body": "Observation and review was saved successfully"
                  },
                  {
                    "type": "display",
                    "name": "update",
                    "body": "Observation and review was saved successfully"
                  },
                  {
                    "type": "display",
                    "name": "delete",
                    "body": "Observation and review was deleted successfully"
                  }
                ],
                "warnings": [
                  {
                    "name": "PCP_prophy_start_dateWarning",
                    "field": "PCP_prophy_start_date",
                    "message": "Drug start date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding",
                    "code": [
                      "var valid = true;",
                      "var c2d1 = grandparent.Visits.filter(function(x){ return x.cycle_day_c === '2' && x.cycle_day_d === '1'})[0];",
                      "if((item.PCP_started === 'Yes' || item.PCP_changed === 'Yes') && c2d1 && item.PCP_prophy_start_date < c2d1.visit_date){",
                      "  valid = false;",
                      "}",
                      "valid;"
                    ]
                  }
                ],
                "draftable": true,
                "verifiable": { "type": "local" },
                "commentable": true
              },
              {
                "name": "CTScanDiagnostics",
                "children": [
                  {
                    "name": "performed",
                    "label": "Was CT scan for disease assessment performed for this study visit?",
                    "type": "string",
                    "required": { "when": "always" },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "not_performed_reason",
                    "label": "CT scan: reason not performed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.performed === 'No' && parent.visit_type !== 'Screening visit'"
                    },
                    "enum": [
                      "Patient refusal",
                      "Physician judgment",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "not_performed_reason_other",
                    "label": "CT scan: reason not performed - specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.not_performed_reason === 'Other (specify)'"
                    }
                  },
                  {
                    "name": "date_performed",
                    "label": "CT scan: date performed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.performed === 'Yes'"
                    },
                    "validate": {
                      "name": "date_performedValid",
                      "message": "is not a valid date",
                      "code": "dateValid(value, 'YYYY-MM-DD')"
                    },
                    "permissions": [
                      {
                        "roles": [ "site1_read", "site1_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site1_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site2_read", "site2_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site2_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site3_read", "site3_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site3_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site4_read", "site4_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site4_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site5_read", "site5_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "site5_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "central_entry" ],
                        "modes": [ "read", "delete" ],
                        "matches": { "when": "always" }
                      },
                      {
                        "roles": [ "central_monitor", "central_read" ],
                        "modes": [ "read" ],
                        "matches": { "when": "always" }
                      }
                    ]
                  },
                  {
                    "name": "date_as_same_as_visit",
                    "label": "Same as date of clinical visit",
                    "type": "boolean"
                  },
                  {
                    "name": "spleen_volume",
                    "label": "Spleen volume (cm^3)",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.performed === 'Yes'"
                    }
                  },
                  {
                    "name": "liver_volume",
                    "label": "Liver volume (cm^3)",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.performed === 'Yes'"
                    }
                  }
                ],
                "warnings": [
                  {
                    "name": "screeningDatePerformedWarning",
                    "field": "date_performed",
                    "message": "Procedure date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                    "code": [
                      "if(item.date_performed && parent.visit_type === 'Screening visit'){",
                      "  var date = new Date(item.date_performed);",
                      "  date.setHours(0,0,0,0);",
                      "  addDays(parent.visit_date, -28) <= date && date <= addDays(parent.visit_date, 7)",
                      "}else{",
                      "  true",
                      "}"
                    ]
                  },
                  {
                    "name": "nonScreeningDatePerformedWarning",
                    "field": "date_performed",
                    "message": "Procedure date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                    "code": [
                      "if(item.date_performed && parent.visit_type !== 'Screening visit'){",
                      "  var date = new Date(item.date_performed);",
                      "  date.setHours(0,0,0,0);",
                      "  addDays(parent.visit_date, -3) <= date && date <= addDays(parent.visit_date, 3)",
                      "}else{",
                      "  true",
                      "}"
                    ]
                  }
                ],
                "hooks": [
                  {
                    "action": "afterSave",
                    "code": [
                      "if((item.isNew() || item.isDirty()) && item.performed === 'No'){",
                      "  [{",
                      "    type: 'event',",
                      "    args: {",
                      "      event: 'email',",
                      "      eventName: 'sendCTScanEmail',",
                      "      data: {",
                      "        notificationName: 'ctScanSaved',",
                      "        to: 'coordinating.center@vanderbilt.edu',",
                      "        from: 'noreply@vanderbilt.edu',",
                      "        subjectOpts: {",
                      "          action: (item.isNew() ? 'submitted' : 'updated'),",
                      "        },",
                      "        bodyOpts: {",
                      "          descriptor: (item.isNew() ? 'new' : ''),",
                      "          action: (item.isNew() ? 'submitted' : 'updated'),",
                      "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/visits/'+parent.id.toString()+'/CTScanDiagnostics'",
                      "        }",
                      "      }",
                      "    }",
                      "  }]",
                      "}"
                    ]
                  },
                  {
                    "action": "afterComment",
                    "roles": [ "central_monitor" ],
                    "code": [
                      "if (item.isDirty()) {",
                      "  [{",
                      "    type: 'event',",
                      "    args: {",
                      "      event: 'email',",
                      "      eventName: 'sendCommentSubmittedEmail',",
                      "      data: {",
                      "        roles: [ 'site1_entry' ],",
                      "        notificationName: 'monitorCommented',",
                      "        from: 'noreply@vanderbilt.edu',",
                      "        bodyOpts: {",
                      "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/visits/'+parent.id.toString()+'/CTScanDiagnostics'",
                      "        }",
                      "      }",
                      "    }",
                      "  }]",
                      "}"
                    ]
                  },
                  {
                    "action": "afterComment",
                    "roles": [ "site1_entry" ],
                    "code": [
                      "if (item.isDirty()) {",
                      "  [{",
                      "    type: 'event',",
                      "    args: {",
                      "      event: 'email',",
                      "      eventName: 'sendCommentSubmittedEmail',",
                      "      data: {",
                      "        roles: [ 'central_monitor' ],",
                      "        notificationName: 'entryCommented',",
                      "        from: 'noreply@vanderbilt.edu',",
                      "        bodyOpts: {",
                      "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/visits/'+parent.id.toString()+'/CTScanDiagnostics'",
                      "        }",
                      "      }",
                      "    }",
                      "  }]",
                      "}"
                    ]
                  }
                ],
                "events": [
                  {
                    "name": "sendCTScanEmail",
                    "code": [
                      "var bodyOpts = {};",
                      "for (var attr in data.opts.bodyOpts) {",
                      "  bodyOpts[attr] = data.opts.bodyOpts[attr];",
                      "}",
                      "var mailerOpts = {",
                      "  to: data.opts.to,",
                      "  from: data.opts.from,",
                      "  subjectOpts: data.opts.subjectOpts,",
                      "  bodyOpts: bodyOpts",
                      "};",
                      "data.mailer.set(mailerOpts);",
                      "data.mailer.send();"
                    ]
                  },
                  {
                    "name": "sendCommentSubmittedEmail",
                    "code": [
                      "var mailerOpts = {",
                      "  to: data.opts.to,",
                      "  from: data.opts.from,",
                      "  bodyOpts: data.opts.bodyOpts",
                      "};",
                      "data.mailer.set(mailerOpts);",
                      "data.mailer.send();"
                    ]
                  }
                ],
                "notifications": [
                  {
                    "type": "email",
                    "name": "monitorCommented",
                    "subject": "HEM1538 EDC Query submitted",
                    "body": "A query has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
                  },
                  {
                    "type": "email",
                    "name": "entryCommented",
                    "subject": "Site entry user comment submitted",
                    "body": "A query response has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
                  },
                  {
                    "type": "display",
                    "name": "create",
                    "body": "CT scan diagnostic was saved successfully"
                  },
                  {
                    "type": "display",
                    "name": "update",
                    "body": "CT scan diagnostic was saved successfully"
                  },
                  {
                    "type": "display",
                    "name": "delete",
                    "body": "CT scan diagnostic was deleted successfully"
                  },
                  {
                    "type": "email",
                    "name": "ctScanSaved",
                    "subject": "HEM1538: CT Scan {{action}}",
                    "body": "A patient without CT scan at screening has been recorded in the HEM1538 trial EDC. The patient has been marked as ineligible and further data entry blocked. Please review this patient at: {{ & link}}"
                  }
                ],
                "draftable": true,
                "verifiable": { "type": "local" },
                "commentable": true
              },
              {
                "name": "QuantitativeImmunoglobulins",
                "children": [
                  {
                    "name": "performed",
                    "label": "Were quantitative immunoglobulins assessed for this study visit?",
                    "type": "string",
                    "required": { "when": "always" },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "not_performed_reason",
                    "label": "Quantitative immunoglobulins: reason not assessed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.performed === 'No'"
                    },
                    "enum": [
                      "Patient refusal",
                      "Physician judgment",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "not_performed_reason_other",
                    "label": "Quantitative immunoglobulins: reason not assessed - specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.performed === 'No' && item.not_performed_reason === 'Other (specify)'"
                    }
                  },
                  {
                    "name": "date_of_blood_draw",
                    "label": "Date of blood draw for quantitative immunoglobulin assessment",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.performed === 'Yes'"
                    },
                    "validate": {
                      "name": "date_of_blood_drawValid",
                      "message": "is not a valid date",
                      "code": "dateValid(value, 'YYYY-MM-DD')"
                    },
                    "permissions": [
                      {
                        "roles": [ "site1_read", "site1_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site1_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site2_read", "site2_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site2_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site3_read", "site3_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site3_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site4_read", "site4_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site4_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site5_read", "site5_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "site5_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "central_entry" ],
                        "modes": [ "read", "delete" ],
                        "matches": { "when": "always" }
                      },
                      {
                        "roles": [ "central_monitor", "central_read" ],
                        "modes": [ "read" ],
                        "matches": { "when": "always" }
                      }
                    ]
                  },
                  {
                    "name": "date_as_same_as_visit",
                    "label": "Same as date of clinical visit",
                    "type": "boolean"
                  },
                  {
                    "name": "IgA",
                    "label": "IgA (mg/dL)",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.performed === 'Yes'"
                    }
                  },
                  { "name": "IgA_details", "component": "rangeDetails" },
                  {
                    "name": "IgG",
                    "label": "IgG (mg/dL)",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.performed === 'Yes'"
                    }
                  },
                  { "name": "IgG_details", "component": "rangeDetails" },
                  {
                    "name": "IgM",
                    "label": "IgM (mg/dL)",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.performed === 'Yes'"
                    }
                  },
                  { "name": "IgM_details", "component": "rangeDetails" },
                  { "name": "rangeId", "type": "string" },
                  { "name": "rangeVersion", "type": "number" }
                ],
                "warnings": [
                  {
                    "name": "screeningDateOfBloodDraw",
                    "field": "date_of_blood_draw",
                    "message": "Procedure date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                    "code": [
                      "if(item.date_of_blood_draw && parent.visit_type === 'Screening visit'){",
                      "  var date = new Date(item.date_of_blood_draw);",
                      "  date.setHours(0,0,0,0);",
                      "  addDays(parent.visit_date, -28) <= date && date <= addDays(parent.visit_date, 7)",
                      "}else{",
                      "  true;",
                      "}"
                    ]
                  },
                  {
                    "name": "nonScreeningDateOfBloodDraw",
                    "field": "date_of_blood_draw",
                    "message": "Procedure date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                    "code": [
                      "if(item.date_of_blood_draw && parent.visit_type !== 'Screening visit'){",
                      "  var date = new Date(item.date_of_blood_draw);",
                      "  date.setHours(0,0,0,0);",
                      "  addDays(parent.visit_date, -3) <= date && date <= addDays(parent.visit_date, 3)",
                      "}else{",
                      "  true;",
                      "}"
                    ]
                  }
                ],
                "hooks": [
                  {
                    "action": "afterComment",
                    "roles": [ "central_monitor" ],
                    "code": [
                      "if (item.isDirty()) {",
                      "  [{",
                      "    type: 'event',",
                      "    args: {",
                      "      event: 'email',",
                      "      eventName: 'sendCommentSubmittedEmail',",
                      "      data: {",
                      "        roles: [ 'site1_entry' ],",
                      "        notificationName: 'monitorCommented',",
                      "        from: 'noreply@vanderbilt.edu',",
                      "        bodyOpts: {",
                      "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/visits/'+parent.id.toString()+'/QuantitativeImmunoglobulins'",
                      "        }",
                      "      }",
                      "    }",
                      "  }]",
                      "}"
                    ]
                  },
                  {
                    "action": "afterComment",
                    "roles": [ "site1_entry" ],
                    "code": [
                      "if (item.isDirty()) {",
                      "  [{",
                      "    type: 'event',",
                      "    args: {",
                      "      event: 'email',",
                      "      eventName: 'sendCommentSubmittedEmail',",
                      "      data: {",
                      "        roles: [ 'central_monitor' ],",
                      "        notificationName: 'entryCommented',",
                      "        from: 'noreply@vanderbilt.edu',",
                      "        bodyOpts: {",
                      "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/visits/'+parent.id.toString()+'/QuantitativeImmunoglobulins'",
                      "        }",
                      "      }",
                      "    }",
                      "  }]",
                      "}"
                    ]
                  }
                ],
                "events": [
                  {
                    "name": "sendCommentSubmittedEmail",
                    "code": [
                      "var mailerOpts = {",
                      "  to: data.opts.to,",
                      "  from: data.opts.from,",
                      "  bodyOpts: data.opts.bodyOpts",
                      "};",
                      "data.mailer.set(mailerOpts);",
                      "data.mailer.send();"
                    ]
                  }
                ],
                "notifications": [
                  {
                    "type": "email",
                    "name": "monitorCommented",
                    "subject": "HEM1538 EDC Query submitted",
                    "body": "A query has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
                  },
                  {
                    "type": "email",
                    "name": "entryCommented",
                    "subject": "Site entry user comment submitted",
                    "body": "A query response has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
                  },
                  {
                    "type": "display",
                    "name": "create",
                    "body": "Quantitative immunoglobulin was saved successfully"
                  },
                  {
                    "type": "display",
                    "name": "update",
                    "body": "Quantitative immunoglobulin was saved successfully"
                  },
                  {
                    "type": "display",
                    "name": "delete",
                    "body": "Quantitative immunoglobulin was deleted successfully"
                  }
                ],
                "draftable": true,
                "verifiable": { "type": "local" },
                "commentable": true
              },
              {
                "name": "DiseaseAssessment",
                "children": [
                  {
                    "name": "disease_response",
                    "label": "Disease response",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "parent.visit_type !== 'Screening visit'"
                    },
                    "enum": [
                      "Complete response",
                      "Partial response",
                      "Clinical benefit",
                      "Stable disease",
                      "Progressive disease",
                      "Patient inevaluable"
                    ]
                  },
                  {
                    "name": "inevaluable_reason",
                    "label": "Patient inevaluable: reason",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.disease_response === 'Patient inevaluable'"
                    },
                    "enum": [
                      "Too early to evaluate",
                      "Incomplete disease assessment procedures",
                      "Patient refusal",
                      "Other"
                    ]
                  },
                  {
                    "name": "inevaluable_reason_other",
                    "label": "Patient inevaluable: reason: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.inevaluable_reason === 'Other'"
                    }
                  },
                  {
                    "name": "improved_in_Hepatosple",
                    "label": "Improvement in hepatosplenomegaly",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.disease_response === 'Clinical benefit'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "improved_in_MPN_SAF_TSS",
                    "label": "Improvement in MPN-SAF TSS",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.disease_response === 'Clinical benefit'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "improved_in_bloodcounts",
                    "label": "Improvement in blood counts",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.disease_response === 'Clinical benefit'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "improved_in_neutrophil",
                    "label": "Improvement in neutrophil counts",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.improved_in_bloodcounts === 'Yes'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "improved_in_hemoglobin",
                    "label": "Improvement in hemoglobin level",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.improved_in_bloodcounts === 'Yes'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "improved_in_platelet",
                    "label": "Improvement in platelet counts",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.improved_in_bloodcounts === 'Yes'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "DIPSS_PLUS_score",
                    "label": "DIPSS-PLUS score (MF patients only)",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.disease_response !== 'Patient inevaluable' && grandparent.Visits[0].BaselineCovariates.diagnosis === 'Myelofibrosis (MF)'"
                    },
                    "enum": [ "0", "1", "2-3", "4-6" ]
                  }
                ],
                "validations": [
                  {
                    "name": "clinicalBenefitValid",
                    "field": "improved_in_Hepatosple",
                    "message": "At least one of hepatosplenomegaly, MPN-SAF TSS and blood counts should be improved.",
                    "code": "item.disease_response !== 'Clinical benefit' || item.improved_in_Hepatosple === 'Yes' || item.improved_in_MPN_SAF_TSS === 'Yes' || item.improved_in_bloodcounts === 'Yes'"
                  },
                  {
                    "name": "bloodCountValid",
                    "field": "improved_in_neutrophil",
                    "message": "At least one of meitrophil counts, hemoglobin level and platelet count should be improved.",
                    "code": "item.improved_in_bloodcounts !== 'Yes' || item.improved_in_neutrophil === 'Yes' || item.improved_in_hemoglobin === 'Yes' || item.improved_in_platelet === 'Yes'"
                  }
                ],
                "hooks": [
                  {
                    "action": "afterComment",
                    "roles": [ "central_monitor" ],
                    "code": [
                      "if (item.isDirty()) {",
                      "  [{",
                      "    type: 'event',",
                      "    args: {",
                      "      event: 'email',",
                      "      eventName: 'sendCommentSubmittedEmail',",
                      "      data: {",
                      "        roles: [ 'site1_entry' ],",
                      "        notificationName: 'monitorCommented',",
                      "        from: 'noreply@vanderbilt.edu',",
                      "        bodyOpts: {",
                      "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/visits/'+parent.id.toString()+'/DiseaseAssessment'",
                      "        }",
                      "      }",
                      "    }",
                      "  }]",
                      "}"
                    ]
                  },
                  {
                    "action": "afterComment",
                    "roles": [ "site1_entry" ],
                    "code": [
                      "if (item.isDirty()) {",
                      "  [{",
                      "    type: 'event',",
                      "    args: {",
                      "      event: 'email',",
                      "      eventName: 'sendCommentSubmittedEmail',",
                      "      data: {",
                      "        roles: [ 'central_monitor' ],",
                      "        notificationName: 'entryCommented',",
                      "        from: 'noreply@vanderbilt.edu',",
                      "        bodyOpts: {",
                      "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/visits/'+parent.id.toString()+'/DiseaseAssessment'",
                      "        }",
                      "      }",
                      "    }",
                      "  }]",
                      "}"
                    ]
                  }
                ],
                "events": [
                  {
                    "name": "sendCommentSubmittedEmail",
                    "code": [
                      "var mailerOpts = {",
                      "  to: data.opts.to,",
                      "  from: data.opts.from,",
                      "  bodyOpts: data.opts.bodyOpts",
                      "};",
                      "data.mailer.set(mailerOpts);",
                      "data.mailer.send();"
                    ]
                  }
                ],
                "notifications": [
                  {
                    "type": "email",
                    "name": "monitorCommented",
                    "subject": "HEM1538 EDC Query submitted",
                    "body": "A query has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
                  },
                  {
                    "type": "email",
                    "name": "entryCommented",
                    "subject": "Site entry user comment submitted",
                    "body": "A query response has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
                  },
                  {
                    "type": "display",
                    "name": "create",
                    "body": "Disease assessment was saved successfully"
                  },
                  {
                    "type": "display",
                    "name": "update",
                    "body": "Disease assessment was saved successfully"
                  },
                  {
                    "type": "display",
                    "name": "delete",
                    "body": "Disease assessment was deleted successfully"
                  }
                ],
                "draftable": true,
                "verifiable": { "type": "local" },
                "commentable": true
              },
              {
                "name": "BiomarkerSpecimens",
                "children": [
                  {
                    "name": "pb_performed",
                    "label": "Was peripheral blood (PB) for biomarker correlative analysis collected for this study visit?",
                    "type": "string",
                    "required": { "when": "always" },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "pb_not_performed_reason",
                    "label": "PB collection: reason not performed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.pb_performed === 'No'"
                    },
                    "enum": [
                      "Patient refusal",
                      "Physician judgment",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "pb_not_performed_reason_other",
                    "label": "PB collection: reason not performed: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.pb_performed === 'No' && item.pb_not_performed_reason === 'Other (specify)'"
                    }
                  },
                  {
                    "name": "pb_date_performed",
                    "label": "PB collection: date performed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.pb_performed === 'Yes'"
                    },
                    "permissions": [
                      {
                        "roles": [ "site1_read", "site1_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site1_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site2_read", "site2_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site2_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site3_read", "site3_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site3_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site4_read", "site4_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site4_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site5_read", "site5_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "site5_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "central_entry" ],
                        "modes": [ "read", "delete" ],
                        "matches": { "when": "always" }
                      },
                      {
                        "roles": [ "central_monitor", "central_read" ],
                        "modes": [ "read" ],
                        "matches": { "when": "always" }
                      }
                    ]
                  },
                  {
                    "name": "pb_date_as_same_as_visit",
                    "label": "Same as date of clinical visit",
                    "type": "boolean"
                  },
                  {
                    "name": "bm_performed",
                    "label": "Was bone marrow for biomarker correlative analysis collected for this study visit?",
                    "type": "string",
                    "required": { "when": "always" },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "bm_not_performed_reason",
                    "label": "Bone marrow collection: reason not performed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.bm_performed === 'No'"
                    },
                    "enum": [
                      "Patient refusal",
                      "Physician judgment",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "bm_not_performed_reason_other",
                    "label": "Bone marrow collection: reason not performed: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.bm_performed === 'No' && item.bm_not_performed_reason === 'Other (specify)'"
                    }
                  },
                  {
                    "name": "bm_sample_type",
                    "label": "Bone marrow for biomarker analysis: sample type",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.bm_performed === 'Yes'"
                    },
                    "enum": [
                      "Archival FFPE",
                      "Bone marrow aspirate",
                      "Bone marrow biopsy"
                    ]
                  },
                  {
                    "name": "bm_date_performed",
                    "label": "Bone marrow for biomarker analysis: date of collection",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.bm_performed === 'Yes'"
                    },
                    "permissions": [
                      {
                        "roles": [ "site1_read", "site1_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site1_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site2_read", "site2_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site2_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site3_read", "site3_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site3_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site4_read", "site4_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site4_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site5_read", "site5_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "site5_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "central_entry" ],
                        "modes": [ "read", "delete" ],
                        "matches": { "when": "always" }
                      },
                      {
                        "roles": [ "central_monitor", "central_read" ],
                        "modes": [ "read" ],
                        "matches": { "when": "always" }
                      }
                    ]
                  },
                  {
                    "name": "bm_date_as_same_as_visit",
                    "label": "Same as date of clinical visit",
                    "type": "boolean"
                  }
                ],
                "warnings": [
                  {
                    "name": "screeningPBDatePerformed",
                    "field": "pb_date_performed",
                    "message": "Procedure date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                    "code": [
                      "if(item.pb_date_performed && parent.visit_type === 'Screening visit'){",
                      "  var date = new Date(item.pb_date_performed);",
                      "  date.setHours(0,0,0,0);",
                      "  addDays(parent.visit_date, -28) <= date && date <= addDays(parent.visit_date, 7)",
                      "}else{",
                      "  true;",
                      "}"
                    ]
                  },
                  {
                    "name": "nonScreeningPBDatePerformed",
                    "field": "pb_date_performed",
                    "message": "Procedure date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                    "code": [
                      "if(item.pb_date_performed && parent.visit_type !== 'Screening visit'){",
                      "  var date = new Date(item.pb_date_performed);",
                      "  date.setHours(0,0,0,0);",
                      "  addDays(parent.visit_date, -3) <= date && date <= addDays(parent.visit_date, 3)",
                      "}else{",
                      "  true;",
                      "}"
                    ]
                  },
                  {
                    "name": "nonScreeningBMDatePerformed",
                    "field": "bm_date_performed",
                    "message": "Procedure date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                    "code": [
                      "if(item.bm_date_performed && parent.visit_type !== 'Screening visit'){",
                      "  var date = new Date(item.bm_date_performed);",
                      "  date.setHours(0,0,0,0);",
                      "  addDays(parent.visit_date, -3) <= date && date <= addDays(parent.visit_date, 3)",
                      "}else{",
                      "  true;",
                      "}"
                    ]
                  },
                  {
                    "name": "screeningAspireBMDatePerformed",
                    "field": "bm_date_performed",
                    "message": "Procedure date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                    "code": [
                      "if(item.bm_date_performed && (item.bm_sample_type === 'Bone marrow aspirate' || item.bm_sample_type === 'Bone marrow biopsy') && parent.visit_type === 'Screening visit'){",
                      "  var date = new Date(item.bm_date_performed);",
                      "  date.setHours(0,0,0,0);",
                      "  addDays(parent.visit_date, -28) <= date && date <= addDays(parent.visit_date, 7)",
                      "}else{",
                      "  true;",
                      "}"
                    ]
                  },
                  {
                    "name": "screeningFFPEBMDatePerformed",
                    "field": "bm_date_performed",
                    "message": "Procedure date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                    "code": [
                      "if(item.bm_date_performed && item.bm_sample_type === 'Archival FFPE' && parent.visit_type === 'Screening visit'){",
                      "  var date = new Date(item.bm_date_performed);",
                      "  date.setHours(0,0,0,0);",
                      "  dateCompare(item.bm_date_performed, '<', parent.visit_date)",
                      "}else{",
                      "  true;",
                      "}"
                    ]
                  }
                ],
                "validations": [
                  {
                    "name": "pbDatePerformedValid",
                    "field": "pb_date_performed",
                    "message": "is not a valid date",
                    "code": "item.pb_performed !== 'Yes' || dateValid(item.pb_date_performed, 'YYYY-MM-DD')"
                  },
                  {
                    "name": "bmDatePerformedValid",
                    "field": "bm_date_performed",
                    "message": "is not a valid date",
                    "code": "item.bm_performed !== 'Yes' || dateValid(item.bm_date_performed, 'YYYY-MM-DD')"
                  }
                ],
                "hooks": [
                  {
                    "action": "afterComment",
                    "roles": [ "central_monitor" ],
                    "code": [
                      "if (item.isDirty()) {",
                      "  [{",
                      "    type: 'event',",
                      "    args: {",
                      "      event: 'email',",
                      "      eventName: 'sendCommentSubmittedEmail',",
                      "      data: {",
                      "        roles: [ 'site1_entry' ],",
                      "        notificationName: 'monitorCommented',",
                      "        from: 'noreply@vanderbilt.edu',",
                      "        bodyOpts: {",
                      "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/visits/'+parent.id.toString()+'/BiomarkerSpecimens'",
                      "        }",
                      "      }",
                      "    }",
                      "  }]",
                      "}"
                    ]
                  },
                  {
                    "action": "afterComment",
                    "roles": [ "site1_entry" ],
                    "code": [
                      "if (item.isDirty()) {",
                      "  [{",
                      "    type: 'event',",
                      "    args: {",
                      "      event: 'email',",
                      "      eventName: 'sendCommentSubmittedEmail',",
                      "      data: {",
                      "        roles: [ 'central_monitor' ],",
                      "        notificationName: 'entryCommented',",
                      "        from: 'noreply@vanderbilt.edu',",
                      "        bodyOpts: {",
                      "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/visits/'+parent.id.toString()+'/BiomarkerSpecimens'",
                      "        }",
                      "      }",
                      "    }",
                      "  }]",
                      "}"
                    ]
                  }
                ],
                "events": [
                  {
                    "name": "sendCommentSubmittedEmail",
                    "code": [
                      "var mailerOpts = {",
                      "  to: data.opts.to,",
                      "  from: data.opts.from,",
                      "  bodyOpts: data.opts.bodyOpts",
                      "};",
                      "data.mailer.set(mailerOpts);",
                      "data.mailer.send();"
                    ]
                  }
                ],
                "notifications": [
                  {
                    "type": "email",
                    "name": "monitorCommented",
                    "subject": "HEM1538 EDC Query submitted",
                    "body": "A query has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
                  },
                  {
                    "type": "email",
                    "name": "entryCommented",
                    "subject": "Site entry user comment submitted",
                    "body": "A query response has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
                  },
                  {
                    "type": "display",
                    "name": "create",
                    "body": "Biomarker specimen was saved successfully"
                  },
                  {
                    "type": "display",
                    "name": "update",
                    "body": "Biomarker specimen was saved successfully"
                  },
                  {
                    "type": "display",
                    "name": "delete",
                    "body": "Biomarker specimen was deleted successfully"
                  }
                ],
                "draftable": true,
                "verifiable": { "type": "local" },
                "commentable": true
              },
              {
                "name": "BoneMarrow",
                "children": [
                  {
                    "name": "marrow_collected",
                    "label": "Was a bone marrow core for disease assessment collected for this study visit?",
                    "type": "string",
                    "required": { "when": "always" },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "reason_not_performed",
                    "label": "Bone marrow core: reason not performed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.performed === 'No' && parent.visit_type !== 'Screening visit'"
                    },
                    "enum": [
                      "Patient refusal",
                      "Physician judgment",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "reason_not_performed_specify",
                    "label": "Bone marrow core: reason not performed: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.reason_not_performed === 'Other (specify)'"
                    }
                  },
                  {
                    "name": "marrow_date_collected",
                    "label": "Bone marrow core: date performed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.marrow_collected === 'Yes'"
                    },
                    "permissions": [
                      {
                        "roles": [ "site1_read", "site1_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site1_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site2_read", "site2_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site2_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site3_read", "site3_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site3_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site4_read", "site4_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site4_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site5_read", "site5_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "site5_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "central_entry" ],
                        "modes": [ "read", "delete" ],
                        "matches": { "when": "always" }
                      },
                      {
                        "roles": [ "central_monitor", "central_read" ],
                        "modes": [ "read" ],
                        "matches": { "when": "always" }
                      }
                    ]
                  },
                  {
                    "name": "marrow_date_as_same_as_visit",
                    "label": "Same as date of clinical visit",
                    "type": "boolean"
                  },
                  {
                    "name": "percent_blasts",
                    "label": "Percent blasts",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.marrow_collected === 'Yes'"
                    }
                  },
                  {
                    "name": "percent_cellular_area",
                    "label": "Percent cellular area",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.marrow_collected === 'Yes'"
                    }
                  },
                  {
                    "name": "fibrosis_grade",
                    "label": "Fibrosis grade",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.marrow_collected === 'Yes'"
                    },
                    "enum": [
                      "MF-0, Scattered linear reticulin with no intersections (cross-overs) corresponding to normal bone marrow",
                      "MF-1, Loose network of reticulin with many intersections, especially in perivascular areas",
                      "MF-2, Diffuse and dense increase in reticulin with extensive intersections, occassionally with only focal bundles of collagen and/or focal osteosclerosis",
                      "MF-3, Diffuse and dense increase in reticulin with extensive intersections with coarse bundles of collagen, often associated with significant osteosclerosis"
                    ]
                  },
                  {
                    "name": "cytogenetics_performed",
                    "label": "Was cytogenetics analysis performed on a bone marrow sample for this study visit?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "parent.visit_type !== 'Screening visit' || item.marrow_collected === 'Yes'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "cytogenetics_reason_not_performed",
                    "label": "Cytogenetics analysis: reason not performed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.cytogenetics_performed === 'No'"
                    },
                    "enum": [
                      "Patient refusal",
                      "Physician judgment",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "cytogenetics_reason_not_performed_specify",
                    "label": "Cytogenetic analysis: reason not performed: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.cytogenetics_reason_not_performed === 'Other (specify)'"
                    }
                  },
                  {
                    "name": "cytogenetics_sample_type",
                    "label": "Cytogenetics analysis: sample type used",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.cytogenetics_performed === 'Yes'"
                    },
                    "enum": [
                      "Archival FFPE",
                      "Bone marrow aspirate",
                      "Bone marrow biopsy core (RPMI-incubated)"
                    ]
                  },
                  {
                    "name": "cytogenetics_sample_date",
                    "label": "Cytogenetic analysis: date of sample collection",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.cytogenetics_performed === 'Yes'"
                    },
                    "permissions": [
                      {
                        "roles": [ "site1_read", "site1_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site1_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site2_read", "site2_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site2_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site3_read", "site3_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site3_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site4_read", "site4_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site4_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site5_read", "site5_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "site5_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "central_entry" ],
                        "modes": [ "read", "delete" ],
                        "matches": { "when": "always" }
                      },
                      {
                        "roles": [ "central_monitor", "central_read" ],
                        "modes": [ "read" ],
                        "matches": { "when": "always" }
                      }
                    ]
                  },
                  {
                    "name": "cytogenetics_date_as_same_as_visit",
                    "label": "Same as date of clinical visit",
                    "type": "boolean"
                  },
                  {
                    "name": "karyotyping_performed",
                    "label": "Was classic karyotyping performed?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.cytogenetics_performed === 'Yes'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "karyotype",
                    "label": "Karyotype",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.karyotyping_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "number_of_cells_in_metaphase",
                    "label": "Number of cells in metaphase",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.karyotyping_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "number_of_cells_examined",
                    "label": "Number of cells examined",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.karyotyping_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "chras_karyotyping_8",
                    "label": "Karyotyping +8",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.karyotyping_performed === 'Yes'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "chras_karyotyping_77q",
                    "label": "Karyotyping -7/7q-",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.karyotyping_performed === 'Yes'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "chras_karyotyping_i17q",
                    "label": "Karyotyping i17q",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.karyotyping_performed === 'Yes'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "chras_karyotyping_55q",
                    "label": "Karyotyping -5/5q-",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.karyotyping_performed === 'Yes'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "chras_karyotyping_12p",
                    "label": "Karyotyping 12p-",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.karyotyping_performed === 'Yes'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "chras_karyotyping_inv3",
                    "label": "Karyotyping (inv)3",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.karyotyping_performed === 'Yes'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "chras_karyotyping_11q23",
                    "label": "Karyotyping 11q23",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.karyotyping_performed === 'Yes'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "fish_performed",
                    "label": "Was FISH performed?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.cytogenetics_performed === 'Yes'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "chras_fish_8",
                    "label": "FISH +8",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.fish_performed === 'Yes'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "chras_fish_77q",
                    "label": "FISH -7/7q-",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.fish_performed === 'Yes'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "chras_fish_i17q",
                    "label": "FISH i17q",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.fish_performed === 'Yes'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "chras_fish_55q",
                    "label": "FISH -5/5q-",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.fish_performed === 'Yes'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "chras_fish_12p",
                    "label": "FISH 12p-",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.fish_performed === 'Yes'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "chras_fish_inv3",
                    "label": "FISH (inv)3",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.fish_performed === 'Yes'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "chras_fish_11q23",
                    "label": "FISH 11q23",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.fish_performed === 'Yes'"
                    },
                    "enum": [ "Yes", "No" ]
                  }
                ],
                "validations": [
                  {
                    "name": "marrowDateCollectedValid",
                    "field": "marrow_date_collected",
                    "message": "is not a valid date",
                    "code": "item.marrow_collected !== 'Yes' || dateValid(item.marrow_date_collected, 'YYYY-MM-DD')"
                  },
                  {
                    "name": "cytogeneticsSampleDateValid",
                    "field": "cytogenetics_sample_date",
                    "message": "is not a valid date",
                    "code": "item.cytogenetics_performed !== 'Yes' || dateValid(item.cytogenetics_sample_date, 'YYYY-MM-DD')"
                  }
                ],
                "warnings": [
                  {
                    "name": "nonScreeningCSDatePerformed",
                    "field": "cytogenetics_sample_date",
                    "message": "Procedure date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                    "code": [
                      "if(item.cytogenetics_sample_date && parent.visit_type !== 'Screening visit'){",
                      "  var date = new Date(item.cytogenetics_sample_date);",
                      "  date.setHours(0,0,0,0);",
                      "  addDays(parent.visit_date, -3) <= date && date <= addDays(parent.visit_date, 3)",
                      "}else{",
                      "  true;",
                      "}"
                    ]
                  },
                  {
                    "name": "screeningAspireCSDatePerformed",
                    "field": "cytogenetics_sample_date",
                    "message": "Procedure date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                    "code": [
                      "if(item.cytogenetics_sample_date && (item.cytogenetics_sample_type === 'Bone marrow aspirate' || item.cytogenetics_sample_type === 'Bone marrow biopsy core (RPMI-incubated)') && parent.visit_type === 'Screening visit'){",
                      "  var date = new Date(item.cytogenetics_sample_date);",
                      "  date.setHours(0,0,0,0);",
                      "  addDays(parent.visit_date, -28) <= date && date <= addDays(parent.visit_date, 7)",
                      "}else{",
                      "  true;",
                      "}"
                    ]
                  },
                  {
                    "name": "screeningFFPECSDatePerformed",
                    "field": "cytogenetics_sample_date",
                    "message": "Procedure date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                    "code": [
                      "if(item.cytogenetics_sample_date && item.cytogenetics_sample_type === 'Archival FFPE' && parent.visit_type === 'Screening visit'){",
                      "  dateCompare(item.cytogenetics_sample_date, '<', parent.visit_date)",
                      "}else{",
                      "  true;",
                      "}"
                    ]
                  },
                  {
                    "name": "screeningMarrowDateCollected",
                    "field": "marrow_date_collected",
                    "message": "Procedure date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                    "code": [
                      "if(item.marrow_date_collected && parent.visit_type === 'Screening visit'){",
                      "  var date = new Date(item.marrow_date_collected);",
                      "  date.setHours(0,0,0,0);",
                      "  addDays(parent.visit_date, -28) <= date && date <= addDays(parent.visit_date, 7)",
                      "}else{",
                      "  true;",
                      "}"
                    ]
                  },
                  {
                    "name": "nonScreeningMarrowDateCollected",
                    "field": "marrow_date_collected",
                    "message": "Procedure date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                    "code": [
                      "if(item.marrow_date_collected && parent.visit_type !== 'Screening visit'){",
                      "  var date = new Date(item.marrow_date_collected);",
                      "  date.setHours(0,0,0,0);",
                      "  addDays(parent.visit_date, -3) <= date && date <= addDays(parent.visit_date, 3)",
                      "}else{",
                      "  true;",
                      "}"
                    ]
                  }
                ],
                "hooks": [
                  {
                    "action": "afterSave",
                    "code": [
                      "if((item.isNew() || item.isDirty()) && item.marrow_collected === 'No'){",
                      "  [{",
                      "    type: 'event',",
                      "    args: {",
                      "      event: 'email',",
                      "      eventName: 'sendBoneMarrowEmail',",
                      "      data: {",
                      "        notificationName: 'boneMarrowSaved',",
                      "        to: 'coordinating.center@vanderbilt.edu',",
                      "        from: 'noreply@vanderbilt.edu',",
                      "    subjectOpts: {",
                      "      action: (item.isNew() ? 'submitted' : 'updated'),",
                      "    },",
                      "    bodyOpts: {",
                      "      descriptor: (item.isNew() ? 'new' : ''),",
                      "      action: (item.isNew() ? 'submitted' : 'updated'),",
                      "      link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/visits/'+parent.id.toString()+'/BoneMarrow'",
                      "    }",
                      "      }",
                      "    }",
                      "  }]",
                      "}"
                    ]
                  },
                  {
                    "action": "afterComment",
                    "roles": [ "central_monitor" ],
                    "code": [
                      "if (item.isDirty()) {",
                      "  [{",
                      "    type: 'event',",
                      "    args: {",
                      "      event: 'email',",
                      "      eventName: 'sendCommentSubmittedEmail',",
                      "      data: {",
                      "        roles: [ 'site1_entry' ],",
                      "        notificationName: 'monitorCommented',",
                      "        from: 'noreply@vanderbilt.edu',",
                      "        bodyOpts: {",
                      "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/visits/'+parent.id.toString()+'/BoneMarrow'",
                      "        }",
                      "      }",
                      "    }",
                      "  }]",
                      "}"
                    ]
                  },
                  {
                    "action": "afterComment",
                    "roles": [ "site1_entry" ],
                    "code": [
                      "if (item.isDirty()) {",
                      "  [{",
                      "    type: 'event',",
                      "    args: {",
                      "      event: 'email',",
                      "      eventName: 'sendCommentSubmittedEmail',",
                      "      data: {",
                      "        roles: [ 'central_monitor' ],",
                      "        notificationName: 'entryCommented',",
                      "        from: 'noreply@vanderbilt.edu',",
                      "        bodyOpts: {",
                      "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/visits/'+parent.id.toString()+'/BoneMarrow'",
                      "        }",
                      "      }",
                      "    }",
                      "  }]",
                      "}"
                    ]
                  }
                ],
                "events": [
                  {
                    "name": "sendBoneMarrowEmail",
                    "code": [
                      "var bodyOpts = {};",
                      "for (var attr in data.opts.bodyOpts) {",
                      "  bodyOpts[attr] = data.opts.bodyOpts[attr];",
                      "}",
                      "var mailerOpts = {",
                      "  to: data.opts.to,",
                      "  from: data.opts.from,",
                      "  subjectOpts: data.opts.subjectOpts,",
                      "  bodyOpts: bodyOpts",
                      "};",
                      "data.mailer.set(mailerOpts);",
                      "data.mailer.send();"
                    ]
                  },
                  {
                    "name": "sendCommentSubmittedEmail",
                    "code": [
                      "var mailerOpts = {",
                      "  to: data.opts.to,",
                      "  from: data.opts.from,",
                      "  bodyOpts: data.opts.bodyOpts",
                      "};",
                      "data.mailer.set(mailerOpts);",
                      "data.mailer.send();"
                    ]
                  }
                ],
                "notifications": [
                  {
                    "type": "email",
                    "name": "monitorCommented",
                    "subject": "HEM1538 EDC Query submitted",
                    "body": "A query has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
                  },
                  {
                    "type": "email",
                    "name": "entryCommented",
                    "subject": "Site entry user comment submitted",
                    "body": "A query response has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
                  },
                  {
                    "type": "display",
                    "name": "create",
                    "body": "Bone marrow diagnostic was saved successfully"
                  },
                  {
                    "type": "display",
                    "name": "update",
                    "body": "Bone marrow diagnostic was saved successfully"
                  },
                  {
                    "type": "display",
                    "name": "delete",
                    "body": "Bone marrow diagnostic was deleted successfully"
                  },
                  {
                    "type": "email",
                    "name": "boneMarrowSaved",
                    "subject": "HEM1538: Bone Marrow {{action}}",
                    "body": "A patient without bone marrow assessment at screening has been recorded in the HEM1538 trial EDC. The patient has been marked as ineligible and further data entry blocked. Please review this patient at: {{& link}}"
                  }
                ],
                "draftable": true,
                "verifiable": { "type": "local" },
                "commentable": true
              },
              {
                "name": "Labs",
                "children": [
                  {
                    "name": "ekg_performed",
                    "label": "Was EKG performed for this study visit?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "parent.visit_type === 'Screening visit' || parent.visit_type === 'Unscheduled visit' || (parent.eot_completed !== 'Yes' && parent.cycle_day_c === '1' && (parent.cycle_day_d === '1' || parent.cycle_day_d === '22'))"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "ekg_reason_not_performed",
                    "label": "EKG: reason not performed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_performed === 'No' && parent.visit_type !== 'Unscheduled visit'"
                    },
                    "enum": [
                      "Patient refusal",
                      "Physician judgment",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "ekg_reason_not_performed_specify",
                    "label": "EKG: reason not performed: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_reason_not_performed === 'Other (specify)'"
                    }
                  },
                  {
                    "name": "ekg_date_performed",
                    "label": "EKG: date performed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_performed === 'Yes'"
                    },
                    "validate": {
                      "name": "ekg_date_performedValid",
                      "code": "dateValid(value, 'YYYY-MM-DD')",
                      "message": "is not a valid date"
                    },
                    "permissions": [
                      {
                        "roles": [ "site1_read", "site1_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site1_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site2_read", "site2_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site2_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site3_read", "site3_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site3_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site4_read", "site4_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site4_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site5_read", "site5_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "site5_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "central_entry" ],
                        "modes": [ "read", "delete" ],
                        "matches": { "when": "always" }
                      },
                      {
                        "roles": [ "central_monitor", "central_read" ],
                        "modes": [ "read" ],
                        "matches": { "when": "always" }
                      }
                    ]
                  },
                  {
                    "name": "ekg_date_as_same_as_visit",
                    "label": "Same as date of clinical visit",
                    "type": "boolean"
                  },
                  {
                    "name": "ekg_QRS",
                    "label": "EKG QRS duration",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_performed === 'Yes' && (parent.visit_type === 'Screening visit' || parent.visit_type === 'Unscheduled visit')"
                    }
                  },
                  {
                    "name": "ekg_RR",
                    "label": "EKG RR interval",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_performed === 'Yes' && (parent.visit_type === 'Screening visit' || parent.visit_type === 'Unscheduled visit')"
                    }
                  },
                  {
                    "name": "ekg_PR",
                    "label": "EKG PR interval",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_performed === 'Yes' && (parent.visit_type === 'Screening visit' || parent.visit_type === 'Unscheduled visit')"
                    }
                  },
                  {
                    "name": "ekg_QT",
                    "label": "EKG QT interval",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_performed === 'Yes' && (parent.visit_type === 'Screening visit' || parent.visit_type === 'Unscheduled visit')"
                    }
                  },
                  {
                    "name": "ekg_comments",
                    "label": "Additional comments on EKG findings (optional)",
                    "type": "string"
                  },
                  {
                    "name": "ekg_significance",
                    "label": "Overall interpretation of EKG clinical significance",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_performed === 'Yes' && (parent.visit_type === 'Screening visit' || parent.visit_type === 'Unscheduled visit')"
                    },
                    "enum": [ "Clinically significant", "Not clinically significant" ]
                  },
                  {
                    "name": "ekg_predose1_performed",
                    "label": "Was EKG predose 1 performed for this study visit?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_performed === 'Yes' && parent.eot_completed !== 'Yes' && parent.cycle_day_c === '1' && (parent.cycle_day_d === '1' || parent.cycle_day_d === '22')"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "ekg_predose1_reason_not_performed",
                    "label": "EKG predose 1: reason not performed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_predose1_performed === 'No'"
                    },
                    "enum": [
                      "Patient refusal",
                      "Physician judgment",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "ekg_predose1_reason_not_performed_specify",
                    "label": "EKG predose 1: reason not performed: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_predose1_reason_not_performed === 'Other (specify)'"
                    }
                  },
                  {
                    "name": "ekg_predose1_time",
                    "label": "EKG predose 1: time performed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_predose1_performed === 'Yes'"
                    },
                    "validate": {
                      "name": "ekg_predose1_validTime",
                      "message": "is not a valid time",
                      "code": "validTime(value)"
                    }
                  },
                  {
                    "name": "ekg_predose1_QRS",
                    "label": "EKG predose 1 QRS duration",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_predose1_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "ekg_predose1_RR",
                    "label": "EKG predose 1 RR interval",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_predose1_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "ekg_predose1_PR",
                    "label": "EKG predose 1 PR interval",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_predose1_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "ekg_predose1_QT",
                    "label": "EKG predose 1 QT interval",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_predose1_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "ekg_predose1_comments",
                    "label": "Additional comments on EKG predose 1 findings (optional)",
                    "type": "string"
                  },
                  {
                    "name": "ekg_predose1_significance",
                    "label": "Overall interpretation of EKG predose 1 clinical significance",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_predose1_performed === 'Yes'"
                    },
                    "enum": [ "Clinically significant", "Not clinically significant" ]
                  },
                  {
                    "name": "ekg_predose2_performed",
                    "label": "Was EKG predose 2 performed for this study visit?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_performed === 'Yes' && parent.eot_completed !== 'Yes' && parent.cycle_day_c === '1' && (parent.cycle_day_d === '1' || parent.cycle_day_d === '22')"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "ekg_predose2_reason_not_performed",
                    "label": "EKG predose 2: reason not performed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_predose2_performed === 'No'"
                    },
                    "enum": [
                      "Patient refusal",
                      "Physician judgment",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "ekg_predose2_reason_not_performed_specify",
                    "label": "EKG predose 2: reason not performed: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_predose2_reason_not_performed === 'Other (specify)'"
                    }
                  },
                  {
                    "name": "ekg_predose2_time",
                    "label": "EKG predose 2: time performed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_predose2_performed === 'Yes'"
                    },
                    "validate": {
                      "name": "ekg_predose2_validTime",
                      "message": "is not a valid time",
                      "code": "validTime(value)"
                    }
                  },
                  {
                    "name": "ekg_predose2_QRS",
                    "label": "EKG predose 2 QRS duration",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_predose2_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "ekg_predose2_RR",
                    "label": "EKG predose 2 RR interval",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_predose2_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "ekg_predose2_PR",
                    "label": "EKG predose 2 PR interval",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_predose2_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "ekg_predose2_QT",
                    "label": "EKG predose 2 QT interval",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_predose2_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "ekg_predose2_comments",
                    "label": "Additional comments on EKG predose 2 findings (optional)",
                    "type": "string"
                  },
                  {
                    "name": "ekg_predose2_significance",
                    "label": "Overall interpretation of EKG predose 2 clinical significance",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_predose2_performed === 'Yes'"
                    },
                    "enum": [ "Clinically significant", "Not clinically significant" ]
                  },
                  {
                    "name": "ekg_predose3_performed",
                    "label": "Was EKG predose 3 performed for this study visit?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_performed === 'Yes' && parent.eot_completed !== 'Yes' && parent.cycle_day_c === '1' && (parent.cycle_day_d === '1' || parent.cycle_day_d === '22')"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "ekg_predose3_reason_not_performed",
                    "label": "EKG predose 3: reason not performed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_predose3_performed === 'No'"
                    },
                    "enum": [
                      "Patient refusal",
                      "Physician judgment",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "ekg_predose3_reason_not_performed_specify",
                    "label": "EKG predose 3: reason not performed: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_predose3_reason_not_performed === 'Other (specify)'"
                    }
                  },
                  {
                    "name": "ekg_predose3_time",
                    "label": "EKG predose 3: time performed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_predose3_performed === 'Yes'"
                    },
                    "validate": {
                      "name": "ekg_predose3_validTime",
                      "message": "is not a valid time",
                      "code": "validTime(value)"
                    }
                  },
                  {
                    "name": "ekg_predose3_QRS",
                    "label": "EKG predose 3 QRS duration",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_predose3_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "ekg_predose3_RR",
                    "label": "EKG predose 3 RR interval",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_predose3_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "ekg_predose3_PR",
                    "label": "EKG predose 3 PR interval",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_predose3_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "ekg_predose3_QT",
                    "label": "EKG predose 3 QT interval",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_predose3_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "ekg_predose3_comments",
                    "label": "Additional comments on EKG predose 3 findings (optional)",
                    "type": "string"
                  },
                  {
                    "name": "ekg_predose3_significance",
                    "label": "Overall interpretation of EKG predose 3 clinical significance",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_predose3_performed === 'Yes'"
                    },
                    "enum": [ "Clinically significant", "Not clinically significant" ]
                  },
                  {
                    "name": "ekg_postdose1_performed",
                    "label": "Was EKG predose 1 performed for this study visit?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_performed === 'Yes' && parent.eot_completed !== 'Yes' && parent.cycle_day_c === '1' && (parent.cycle_day_d === '1' || parent.cycle_day_d === '22')"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "ekg_postdose1_reason_not_performed",
                    "label": "EKG postdose 1: reason not performed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_postdose1_performed === 'No'"
                    },
                    "enum": [
                      "Patient refusal",
                      "Physician judgment",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "ekg_postdose1_reason_not_performed_specify",
                    "label": "EKG postdose 1: reason not performed: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_postdose1_reason_not_performed === 'Other (specify)'"
                    }
                  },
                  {
                    "name": "ekg_postdose1_time",
                    "label": "EKG postdose 1: time performed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_postdose1_performed === 'Yes'"
                    },
                    "validate": {
                      "name": "ekg_postdose1_validTime",
                      "message": "is not a valid time",
                      "code": "validTime(value)"
                    }
                  },
                  {
                    "name": "ekg_postdose1_QRS",
                    "label": "EKG postdose 1 QRS duration",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_postdose1_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "ekg_postdose1_RR",
                    "label": "EKG postdose 1 RR interval",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_postdose1_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "ekg_postdose1_PR",
                    "label": "EKG postdose 1 PR interval",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_postdose1_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "ekg_postdose1_QT",
                    "label": "EKG postdose 1 QT interval",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_postdose1_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "ekg_postdose1_comments",
                    "label": "Additional comments on EKG postdose 1 findings (optional)",
                    "type": "string"
                  },
                  {
                    "name": "ekg_postdose1_significance",
                    "label": "Overall interpretation of EKG postdose 1 clinical significance",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_postdose1_performed === 'Yes'"
                    },
                    "enum": [ "Clinically significant", "Not clinically significant" ]
                  },
                  {
                    "name": "ekg_postdose2_performed",
                    "label": "Was EKG postdose 2 performed for this study visit?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_performed === 'Yes' && parent.eot_completed !== 'Yes' && parent.cycle_day_c === '1' && (parent.cycle_day_d === '1' || parent.cycle_day_d === '22')"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "ekg_postdose2_reason_not_performed",
                    "label": "EKG postdose 2: reason not performed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_postdose2_performed === 'No'"
                    },
                    "enum": [
                      "Patient refusal",
                      "Physician judgment",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "ekg_postdose2_reason_not_performed_specify",
                    "label": "EKG postdose 2: reason not performed: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_postdose2_reason_not_performed === 'Other (specify)'"
                    }
                  },
                  {
                    "name": "ekg_postdose2_time",
                    "label": "EKG postdose 2: time performed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_postdose2_performed === 'Yes'"
                    },
                    "validate": {
                      "name": "ekg_postdose2_validTime",
                      "message": "is not a valid time",
                      "code": "validTime(value)"
                    }
                  },
                  {
                    "name": "ekg_postdose2_QRS",
                    "label": "EKG postdose 2 QRS duration",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_postdose2_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "ekg_postdose2_RR",
                    "label": "EKG postdose 2 RR interval",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_postdose2_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "ekg_postdose2_PR",
                    "label": "EKG postdose 2 PR interval",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_postdose2_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "ekg_postdose2_QT",
                    "label": "EKG postdose 2 QT interval",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_postdose2_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "ekg_postdose2_comments",
                    "label": "Additional comments on EKG postdose 2 findings (optional)",
                    "type": "string"
                  },
                  {
                    "name": "ekg_postdose2_significance",
                    "label": "Overall interpretation of EKG postdose 2 clinical significance",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_postdose2_performed === 'Yes'"
                    },
                    "enum": [ "Clinically significant", "Not clinically significant" ]
                  },
                  {
                    "name": "ekg_postdose3_performed",
                    "label": "Was EKG postdose 3 performed for this study visit?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_performed === 'Yes' && parent.eot_completed !== 'Yes' && parent.cycle_day_c === '1' && (parent.cycle_day_d === '1' || parent.cycle_day_d === '22')"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "ekg_postdose3_reason_not_performed",
                    "label": "EKG postdose 3: reason not performed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_postdose3_performed === 'No'"
                    },
                    "enum": [
                      "Patient refusal",
                      "Physician judgment",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "ekg_postdose3_reason_not_performed_specify",
                    "label": "EKG postdose 3: reason not performed: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_postdose3_reason_not_performed === 'Other (specify)'"
                    }
                  },
                  {
                    "name": "ekg_postdose3_time",
                    "label": "EKG postdose 3: time performed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_postdose3_performed === 'Yes'"
                    },
                    "validate": {
                      "name": "ekg_postdose3_validTime",
                      "message": "is not a valid time",
                      "code": "validTime(value)"
                    }
                  },
                  {
                    "name": "ekg_postdose3_QRS",
                    "label": "EKG postdose 3 QRS duration",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_postdose3_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "ekg_postdose3_RR",
                    "label": "EKG postdose 3 RR interval",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_postdose3_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "ekg_postdose3_PR",
                    "label": "EKG postdose 3 PR interval",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_postdose3_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "ekg_postdose3_QT",
                    "label": "EKG postdose 3 QT interval",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_postdose3_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "ekg_postdose3_comments",
                    "label": "Additional comments on EKG postdose 3 findings (optional)",
                    "type": "string"
                  },
                  {
                    "name": "ekg_postdose3_significance",
                    "label": "Overall interpretation of EKG postdose 3 clinical significance",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ekg_postdose3_performed === 'Yes'"
                    },
                    "enum": [ "Clinically significant", "Not clinically significant" ]
                  },
                  {
                    "name": "hematology_performed",
                    "label": "Were hematology labs performed for this study visit?",
                    "type": "string",
                    "required": { "when": "always" },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "hematology_reason_not_performed",
                    "label": "Hematology labs: reason not performed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.hematology_performed === 'No' && (parent.visit_type !== 'Unscheduled visit')"
                    },
                    "enum": [
                      "Patient refusal",
                      "Physician judgment",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "hematology_reason_not_performed_specify",
                    "label": "Hematology labs: reason not performed: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.hematology_reason_not_performed === 'Other (specify)'"
                    }
                  },
                  {
                    "name": "hematology_date_performed",
                    "label": "Date of blood draw for hematology labs",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.hematology_performed === 'Yes'"
                    },
                    "validate": {
                      "name": "hematology_date_performedValid",
                      "code": "dateValid(value, 'YYYY-MM-DD')",
                      "message": "is not a valid date"
                    },
                    "permissions": [
                      {
                        "roles": [ "site1_read", "site1_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site1_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site2_read", "site2_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site2_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site3_read", "site3_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site3_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site4_read", "site4_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site4_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site5_read", "site5_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "site5_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "central_entry" ],
                        "modes": [ "read", "delete" ],
                        "matches": { "when": "always" }
                      },
                      {
                        "roles": [ "central_monitor", "central_read" ],
                        "modes": [ "read" ],
                        "matches": { "when": "always" }
                      }
                    ]
                  },
                  {
                    "name": "hematology_date_as_same_as_visit",
                    "label": "Same as date of clinical visit",
                    "type": "boolean"
                  },
                  {
                    "name": "hematology_WBC",
                    "label": "WBC",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.hematology_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "hematology_WBC_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "hematology_RBC",
                    "label": "RBC",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.hematology_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "hematology_RBC_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "hematology_hemoglobin",
                    "label": "Hemoglobin",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.hematology_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "hematology_hemoglobin_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "hematology_hematocrit",
                    "label": "Hematocrit",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.hematology_performed === 'Yes'"
                    },
                    "validate": {
                      "name": "hematology_hematocritValid",
                      "message": "must be greater than or equal to 0 and less than or equal to 100",
                      "code": "((value <= 100) && (value >= 0)) || value === 999"
                    }
                  },
                  {
                    "name": "hematology_hematocrit_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "hematology_platelet",
                    "label": "Platelet count",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.hematology_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "hematology_platelet_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "hematology_neutrophil",
                    "label": "WBC (differential): Neutrophil",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.hematology_performed === 'Yes'"
                    },
                    "validate": {
                      "name": "hematology_neutrophilValid",
                      "message": "must be greater than or equal to 0 and less than or equal to 100",
                      "code": "((value <= 100) && (value >= 0)) || value === 999"
                    }
                  },
                  {
                    "name": "hematology_neutrophil_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "hematology_eosinophil",
                    "label": "WBC (differential): Eosinophil",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.hematology_performed === 'Yes'"
                    },
                    "validate": {
                      "name": "hematology_eosinophilValid",
                      "message": "must be greater than or equal to 0 and less than or equal to 100",
                      "code": "((value <= 100) && (value >= 0)) || value === 999"
                    }
                  },
                  {
                    "name": "hematology_eosinophil_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "hematology_basophil",
                    "label": "WBC (differential): Basophil",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.hematology_performed === 'Yes'"
                    },
                    "validate": {
                      "name": "hematology_basophilValid",
                      "message": "must be greater than or equal to 0 and less than or equal to 100",
                      "code": "((value <= 100) && (value >= 0)) || value === 999"
                    }
                  },
                  {
                    "name": "hematology_basophil_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "hematology_lymphocyte",
                    "label": "WBC (differential): Lymphocyte",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.hematology_performed === 'Yes'"
                    },
                    "validate": {
                      "name": "hematology_lymphocyteValid",
                      "message": "must be greater than or equal to 0 and less than or equal to 100",
                      "code": "((value <= 100) && (value >= 0)) || value === 999"
                    }
                  },
                  {
                    "name": "hematology_lymphocyte_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "hematology_monocyte",
                    "label": "WBC (differential): Monocyte",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.hematology_performed === 'Yes'"
                    },
                    "validate": {
                      "name": "hematology_monocyteValid",
                      "message": "must be greater than or equal to 0 and less than or equal to 100",
                      "code": "((value <= 100) && (value >= 0)) || value === 999"
                    }
                  },
                  {
                    "name": "hematology_monocyte_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "hematology_blasts",
                    "label": "WBC (differential): Blasts",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.hematology_performed === 'Yes'"
                    },
                    "validate": {
                      "name": "hematology_blastsValid",
                      "message": "must be greater than or equal to 0 and less than or equal to 100",
                      "code": "((value <= 100) && (value >= 0)) || value === 999"
                    }
                  },
                  {
                    "name": "hematology_blasts_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "hematology_promyelocytes",
                    "label": "WBC (differential): Promyelocytes",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.hematology_performed === 'Yes'"
                    },
                    "validate": {
                      "name": "hematology_promyelocytesValid",
                      "message": "must be greater than or equal to 0 and less than or equal to 100",
                      "code": "((value <= 100) && (value >= 0)) || value === 999"
                    }
                  },
                  {
                    "name": "hematology_promyelocytes_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "hematology_myelocytes",
                    "label": "WBC (differential): Myelocytes",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.hematology_performed === 'Yes'"
                    },
                    "validate": {
                      "name": "hematology_myelocytesValid",
                      "message": "must be greater than or equal to 0 and less than or equal to 100",
                      "code": "((value <= 100) && (value >= 0)) || value === 999"
                    }
                  },
                  {
                    "name": "hematology_myelocytes_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "hematology_metamyelocytes",
                    "label": "WBC (differential): Metamyelocytes",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.hematology_performed === 'Yes'"
                    },
                    "validate": {
                      "name": "hematology_metamyelocytesValid",
                      "message": "must be greater than or equal to 0 and less than or equal to 100",
                      "code": "((value <= 100) && (value >= 0)) || value === 999"
                    }
                  },
                  {
                    "name": "hematology_metamyelocytes_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "hematology_bands",
                    "label": "WBC (differential): Bands",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.hematology_performed === 'Yes'"
                    },
                    "validate": {
                      "name": "hematology_bandsValid",
                      "message": "must be greater than or equal to 0 and less than or equal to 100",
                      "code": "((value <= 100) && (value >= 0)) || value === 999"
                    }
                  },
                  {
                    "name": "hematology_bands_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "coagulation_performed",
                    "label": "Were blood coagulation labs performed for this study visit?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "parent.visit_type === 'Screening visit' || parent.visit_type === 'End-of-treatment (EoT) visit' || parent.visit_type === 'Unscheduled visit' || parent.eot_completed === 'Yes' || (parent.cycle_day_d === '1' && (parent.cycle_day_c === '1' || parent.cycle_day_c === '2' || parent.cycle_day_c === '3'|| parent.cycle_day_c === '4')) || (parent.cycle_day_c === '1' && parent.cycle_day_d === '15')"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "coagulation_reason_not_performed",
                    "label": "Coagulation labs: reason not performed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.coagulation_performed === 'No' && parent.visit_type !== 'Unscheduled visit'"
                    },
                    "enum": [
                      "Patient refusal",
                      "Physician judgment",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "coagulation_reason_not_performed_specify",
                    "label": "Coagulation labs: reason not performed: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.coagulation_reason_not_performed === 'Other (specify)'"
                    }
                  },
                  {
                    "name": "coagulation_date_performed",
                    "label": "Date of blood draw for coagulation labs",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.coagulation_performed === 'Yes'"
                    },
                    "validate": {
                      "name": "coagulation_date_performedValid",
                      "code": "dateValid(value, 'YYYY-MM-DD')",
                      "message": "is not a valid date"
                    },
                    "permissions": [
                      {
                        "roles": [ "site1_read", "site1_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site1_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site2_read", "site2_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site2_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site3_read", "site3_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site3_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site4_read", "site4_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site4_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site5_read", "site5_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "site5_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "central_entry" ],
                        "modes": [ "read", "delete" ],
                        "matches": { "when": "always" }
                      },
                      {
                        "roles": [ "central_monitor", "central_read" ],
                        "modes": [ "read" ],
                        "matches": { "when": "always" }
                      }
                    ]
                  },
                  {
                    "name": "coagulation_date_as_same_as_visit",
                    "label": "Same as date of clinical visit",
                    "type": "boolean"
                  },
                  {
                    "name": "coagulation_INR",
                    "label": "INR",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.coagulation_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "coagulation_INR_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "coagulation_aPTT",
                    "label": "aPTT",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.coagulation_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "coagulation_aPTT_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "chemistry_performed",
                    "label": "Were blood chemistry labs performed for this study visit?",
                    "type": "string",
                    "required": { "when": "always" },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "chemistry_reason_not_performed",
                    "label": "Blood chemistry labs: reason not performed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.chemistry_performed === 'No' && (parent.visit_type !== 'Unscheduled visit')"
                    },
                    "enum": [
                      "Patient refusal",
                      "Physician judgment",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "chemistry_reason_not_performed_specify",
                    "label": "Blood chemistry labs: reason not performed: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.chemistry_reason_not_performed === 'Other (specify)'"
                    }
                  },
                  {
                    "name": "chemistry_date_performed",
                    "label": "Date of blood draw for blood chemistry labs",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.chemistry_performed === 'Yes'"
                    },
                    "validate": {
                      "name": "chemistry_date_performedValid",
                      "code": "dateValid(value, 'YYYY-MM-DD')",
                      "message": "is not a valid date"
                    },
                    "permissions": [
                      {
                        "roles": [ "site1_read", "site1_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site1_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site2_read", "site2_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site2_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site3_read", "site3_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site3_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site4_read", "site4_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site4_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site5_read", "site5_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "site5_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "central_entry" ],
                        "modes": [ "read", "delete" ],
                        "matches": { "when": "always" }
                      },
                      {
                        "roles": [ "central_monitor", "central_read" ],
                        "modes": [ "read" ],
                        "matches": { "when": "always" }
                      }
                    ]
                  },
                  {
                    "name": "chemistry_date_as_same_as_visit",
                    "label": "Same as date of clinical visit",
                    "type": "boolean"
                  },
                  {
                    "name": "chemistry_potassium",
                    "label": "Potassium",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.chemistry_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "chemistry_potassium_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "chemistry_serum",
                    "label": "Serum creatinine",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.chemistry_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "chemistry_serum_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "chemistry_calcium",
                    "label": "Calcium",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.chemistry_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "chemistry_calcium_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "chemistry_bilirubin",
                    "label": "Total bilirubin",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.chemistry_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "chemistry_bilirubin_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "chemistry_protein",
                    "label": "Total protein",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.chemistry_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "chemistry_protein_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "chemistry_albumin",
                    "label": "Albumin",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.chemistry_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "chemistry_albumin_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "chemistry_ALT",
                    "label": "ALT (SGOT)",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.chemistry_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "chemistry_ALT_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "chemistry_AST",
                    "label": "AST (SGPT)",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.chemistry_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "chemistry_AST_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "chemistry_alkaline",
                    "label": "Alkaline phosphatase",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.chemistry_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "chemistry_alkaline_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "chemistry_LDH",
                    "label": "Lactate dehydrogenase (LDH)",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.chemistry_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "chemistry_LDH_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "chemistry_glucose",
                    "label": "Glucose",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.chemistry_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "chemistry_glucose_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "chemistry_BUN",
                    "label": "Blood urea nitrogen (BUN)",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.chemistry_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "chemistry_BUN_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "chemistry_sodium",
                    "label": "Sodium",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.chemistry_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "chemistry_sodium_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "chemistry_chloride",
                    "label": "Chloride",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.chemistry_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "chemistry_chloride_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "chemistry_CO2",
                    "label": "Carbon dioxide (CO2)",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.chemistry_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "chemistry_CO2_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "chemistry_magnesium",
                    "label": "Magnesium",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.chemistry_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "chemistry_magnesium_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "chemistry_phosphorus",
                    "label": "Phosphorus",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.chemistry_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "chemistry_phosphorus_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "chemistry_uric",
                    "label": "Uric acid",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.chemistry_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "chemistry_uric_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "chemistry_amylase",
                    "label": "Amylase",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.chemistry_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "chemistry_amylase_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "chemistry_lipase",
                    "label": "Lipase",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.chemistry_performed === 'Yes'"
                    }
                  },
                  {
                    "name": "chemistry_lipase_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "HbA1c_performed",
                    "label": "Was HbA1c testing performed for this study visit?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "parent.visit_type === 'Screening visit' || parent.visit_type === 'Unscheduled visit'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "HbA1c_reason_not_performed",
                    "label": "HbA1c: reason not performed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.HbA1c_performed === 'No' && (parent.visit_type !== 'Unscheduled visit')"
                    },
                    "enum": [
                      "Patient refusal",
                      "Physician judgment",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "HbA1c_reason_not_performed_specify",
                    "label": "HbA1c: reason not performed: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.HbA1c_reason_not_performed === 'Other (specify)'"
                    }
                  },
                  {
                    "name": "HbA1c_date_performed",
                    "label": "Date of blood draw for HbA1c",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.HbA1c_performed === 'Yes'"
                    },
                    "validate": {
                      "name": "HbA1c_date_performedValid",
                      "code": "dateValid(value, 'YYYY-MM-DD')",
                      "message": "is not a valid date"
                    },
                    "permissions": [
                      {
                        "roles": [ "site1_read", "site1_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site1_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site2_read", "site2_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site2_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site3_read", "site3_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site3_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site4_read", "site4_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site4_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site5_read", "site5_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "site5_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "central_entry" ],
                        "modes": [ "read", "delete" ],
                        "matches": { "when": "always" }
                      },
                      {
                        "roles": [ "central_monitor", "central_read" ],
                        "modes": [ "read" ],
                        "matches": { "when": "always" }
                      }
                    ]
                  },
                  {
                    "name": "HbA1c_date_as_same_as_visit",
                    "label": "Same as date of clinical visit",
                    "type": "boolean"
                  },
                  {
                    "name": "HbA1c_DCCT",
                    "label": "HbA1c (DCCT %)",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.HbA1c_performed === 'Yes'"
                    },
                    "validate": {
                      "name": "HbA1c_DCCTValid",
                      "message": "must be greater than or equal to 0 and less than or equal to 100",
                      "code": "((value <= 100) && (value >= 0)) || value === 999"
                    }
                  },
                  {
                    "name": "HbA1c_DCCT_details",
                    "component": "rangeDetails"
                  },
                  {
                    "name": "pregnancy_performed",
                    "label": "Was serum pregnancy test performed for this study visit?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "(parent.visit_type === 'Screening visit' || parent.visit_type === 'Unscheduled visit') && (grandparent.Visits[0].BaselineCovariates.sex === 'Female')"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "pregnancy_reason_not_performed",
                    "label": "Pregnancy test: reason not performed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.pregnancy_performed === 'No' && (parent.visit_type !== 'Unscheduled visit')"
                    },
                    "enum": [
                      "Patient refusal",
                      "Physician judgment",
                      "Not applicable",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "pregnancy_reason_not_performed_specify",
                    "label": "Pregnancy test: reason not performed: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.pregnancy_reason_not_performed === 'Other (specify)'"
                    }
                  },
                  {
                    "name": "pregnancy_date_performed",
                    "label": "Date of blood draw for pregnancy test",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.pregnancy_performed === 'Yes'"
                    },
                    "validate": {
                      "name": "pregnancy_date_performedValid",
                      "code": "dateValid(value, 'YYYY-MM-DD')",
                      "message": "is not a valid date"
                    },
                    "permissions": [
                      {
                        "roles": [ "site1_read", "site1_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site1_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site2_read", "site2_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site2_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site3_read", "site3_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site3_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site4_read", "site4_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site4_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site5_read", "site5_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "site5_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "central_entry" ],
                        "modes": [ "read", "delete" ],
                        "matches": { "when": "always" }
                      },
                      {
                        "roles": [ "central_monitor", "central_read" ],
                        "modes": [ "read" ],
                        "matches": { "when": "always" }
                      }
                    ]
                  },
                  {
                    "name": "pregnancy_date_as_same_as_visit",
                    "label": "Same as date of clinical visit",
                    "type": "boolean"
                  },
                  {
                    "name": "pregnancy_result",
                    "label": "Pregnancy test results",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.pregnancy_performed === 'Yes'"
                    },
                    "enum": [ "Positive", "Negative" ]
                  },
                  { "name": "hematologyRangeId", "type": "string" },
                  { "name": "hematologyRangeVersion", "type": "number" },
                  { "name": "coagulationRangeId", "type": "string" },
                  { "name": "coagulationRangeVersion", "type": "number" },
                  { "name": "chemistryRangeId", "type": "string" },
                  { "name": "chemistryRangeVersion", "type": "number" },
                  { "name": "HbA1cRangeId", "type": "string" },
                  { "name": "HbA1cRangeVersion", "type": "number" }
                ],
                "hooks": [
                  {
                    "action": "afterComment",
                    "roles": [ "central_monitor" ],
                    "code": [
                      "if (item.isDirty()) {",
                      "  [{",
                      "    type: 'event',",
                      "    args: {",
                      "      event: 'email',",
                      "      eventName: 'sendCommentSubmittedEmail',",
                      "      data: {",
                      "        roles: [ 'site1_entry' ],",
                      "        notificationName: 'monitorCommented',",
                      "        from: 'noreply@vanderbilt.edu',",
                      "        bodyOpts: {",
                      "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/visits/'+parent.id.toString()+'/Labs'",
                      "        }",
                      "      }",
                      "    }",
                      "  }]",
                      "}"
                    ]
                  },
                  {
                    "action": "afterComment",
                    "roles": [ "site1_entry" ],
                    "code": [
                      "if (item.isDirty()) {",
                      "  [{",
                      "    type: 'event',",
                      "    args: {",
                      "      event: 'email',",
                      "      eventName: 'sendCommentSubmittedEmail',",
                      "      data: {",
                      "        roles: [ 'central_monitor' ],",
                      "        notificationName: 'entryCommented',",
                      "        from: 'noreply@vanderbilt.edu',",
                      "        bodyOpts: {",
                      "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/visits/'+parent.id.toString()+'/Labs'",
                      "        }",
                      "      }",
                      "    }",
                      "  }]",
                      "}"
                    ]
                  }
                ],
                "events": [
                  {
                    "name": "sendCommentSubmittedEmail",
                    "code": [
                      "var mailerOpts = {",
                      "  to: data.opts.to,",
                      "  from: data.opts.from,",
                      "  bodyOpts: data.opts.bodyOpts",
                      "};",
                      "data.mailer.set(mailerOpts);",
                      "data.mailer.send();"
                    ]
                  }
                ],
                "notifications": [
                  {
                    "type": "email",
                    "name": "monitorCommented",
                    "subject": "HEM1538 EDC Query submitted",
                    "body": "A query has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
                  },
                  {
                    "type": "email",
                    "name": "entryCommented",
                    "subject": "Site entry user comment submitted",
                    "body": "A query response has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
                  },
                  {
                    "type": "display",
                    "name": "create",
                    "body": "Lab was saved successfully"
                  },
                  {
                    "type": "display",
                    "name": "update",
                    "body": "Lab was saved successfully"
                  },
                  {
                    "type": "display",
                    "name": "delete",
                    "body": "Lab was deleted successfully"
                  }
                ],
                "warnings": [
                  {
                    "name": "ekg_date_performedWarning",
                    "field": "ekg_date_performed",
                    "message": "Procedure date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                    "code": [
                      "if(item.ekg_date_performed){",
                      "  var date = new Date(item.ekg_date_performed);",
                      "  date.setHours(0,0,0,0);",
                      "  if(parent.visit_type === 'Screening visit'){",
                      "    addDays(parent.visit_date, -7) <= date && date <= addDays(parent.visit_date, 7)",
                      "  }else{",
                      "    addDays(parent.visit_date, -3) <= date && date <= addDays(parent.visit_date, 3)",
                      "  }",
                      "}else{",
                      "  true;",
                      "}"
                    ]
                  },
                  {
                    "name": "hematology_date_performedWarning",
                    "field": "hematology_date_performed",
                    "message": "Procedure date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                    "code": [
                      "if(item.hematology_date_performed){",
                      "  var date = new Date(item.hematology_date_performed);",
                      "  date.setHours(0,0,0,0);",
                      "  if(parent.visit_type === 'Screening visit'){",
                      "    addDays(parent.visit_date, -7) <= date && date <= addDays(parent.visit_date, 7)",
                      "  }else{",
                      "    addDays(parent.visit_date, -3) <= date && date <= addDays(parent.visit_date, 3)",
                      "  }",
                      "}else{",
                      "  true;",
                      "}"
                    ]
                  },
                  {
                    "name": "coagulation_date_performedWarning",
                    "field": "coagulation_date_performed",
                    "message": "Procedure date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                    "code": [
                      "if(item.coagulation_date_performed){",
                      "  var date = new Date(item.coagulation_date_performed);",
                      "  date.setHours(0,0,0,0);",
                      "  if(parent.visit_type === 'Screening visit'){",
                      "    addDays(parent.visit_date, -7) <= date && date <= addDays(parent.visit_date, 7)",
                      "  }else{",
                      "    addDays(parent.visit_date, -3) <= date && date <= addDays(parent.visit_date, 3)",
                      "  }",
                      "}else{",
                      "  true;",
                      "}"
                    ]
                  },
                  {
                    "name": "chemistry_date_performedWarning",
                    "field": "chemistry_date_performed",
                    "message": "Procedure date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                    "code": [
                      "if(item.chemistry_date_performed){",
                      "  var date = new Date(item.chemistry_date_performed);",
                      "  date.setHours(0,0,0,0);",
                      "  if(parent.visit_type === 'Screening visit'){",
                      "    addDays(parent.visit_date, -7) <= date && date <= addDays(parent.visit_date, 7)",
                      "  }else{",
                      "    addDays(parent.visit_date, -3) <= date && date <= addDays(parent.visit_date, 3)",
                      "  }",
                      "}else{",
                      "  true;",
                      "}"
                    ]
                  },
                  {
                    "name": "HbA1c_date_performedWarning",
                    "field": "HbA1c_date_performed",
                    "message": "Procedure date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                    "code": [
                      "if(item.HbA1c_date_performed){",
                      "  var date = new Date(item.HbA1c_date_performed);",
                      "  date.setHours(0,0,0,0);",
                      "  if(parent.visit_type === 'Screening visit'){",
                      "    addDays(parent.visit_date, -7) <= date && date <= addDays(parent.visit_date, 7)",
                      "  }else{",
                      "    addDays(parent.visit_date, -3) <= date && date <= addDays(parent.visit_date, 3)",
                      "  }",
                      "}else{",
                      "  true;",
                      "}"
                    ]
                  },
                  {
                    "name": "pregnancy_date_performedWarning",
                    "field": "pregnancy_date_performed",
                    "message": "Procedure date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                    "code": [
                      "if(item.pregnancy_date_performed){",
                      "  var date = new Date(item.pregnancy_date_performed);",
                      "  date.setHours(0,0,0,0);",
                      "  if(parent.visit_type === 'Screening visit'){",
                      "    addDays(parent.visit_date, -7) <= date && date <= addDays(parent.visit_date, 7)",
                      "  }else{",
                      "    addDays(parent.visit_date, -3) <= date && date <= addDays(parent.visit_date, 3)",
                      "  }",
                      "}else{",
                      "  true;",
                      "}"
                    ]
                  }
                ],
                "draftable": true,
                "verifiable": { "type": "local" },
                "commentable": true
              },
              {
                "name": "PKSpecimens",
                "children": [
                  {
                    "name": "collected",
                    "label": "Were specimens for PK analysis collected for this study visit?",
                    "type": "string",
                    "required": { "when": "always" },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "not_collected_reason",
                    "label": "PK specimen collection: reason not performed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.collected === 'No'"
                    },
                    "enum": [
                      "Patient refusal",
                      "Physician judgment",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "not_collected_reason_other",
                    "label": "PK specimen collection: reason not performed: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.not_collected_reason === 'Other (specify)'"
                    }
                  },
                  {
                    "name": "date_collected",
                    "label": "Date of PK specimen (pre-dose) collection",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.collected === 'Yes' && (parent.cycle_day_c !== '1' || parent.cycle_day_d !== '1')"
                    },
                    "validate": {
                      "name": "date_collectedValid",
                      "message": "is not a valid date",
                      "code": "dateValid(value, 'YYYY-MM-DD')"
                    },
                    "permissions": [
                      {
                        "roles": [ "site1_read", "site1_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site1_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site2_read", "site2_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site2_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site3_read", "site3_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site3_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site4_read", "site4_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site4_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site5_read", "site5_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "site5_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "central_entry" ],
                        "modes": [ "read", "delete" ],
                        "matches": { "when": "always" }
                      },
                      {
                        "roles": [ "central_monitor", "central_read" ],
                        "modes": [ "read" ],
                        "matches": { "when": "always" }
                      }
                    ]
                  },
                  {
                    "name": "date_as_same_as_visit",
                    "label": "Same as date of clinical visit",
                    "type": "boolean"
                  },
                  {
                    "name": "time_collected",
                    "label": "Time of PK specimen (pre-dose) collection",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.collected === 'Yes' && (parent.cycle_day_c !== '1' || parent.cycle_day_d !== '1')"
                    },
                    "validate": {
                      "name": "time_collectedValid",
                      "message": "is not a valid time",
                      "code": "validTime(value)"
                    }
                  },
                  {
                    "name": "y1_collected",
                    "label": "Was PK specimen 1 (pre-dose) collected?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "(parent.cycle_day_c === '1' && parent.cycle_day_d === '1') && item.collected === 'Yes'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "y1_not_collected_reason",
                    "label": "PK specimen 1 (pre-dose) collection: reason not performed ",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.y1_collected === 'No'"
                    },
                    "enum": [
                      "Patient refusal",
                      "Physician judgment",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "y1_not_collected_reason_other",
                    "label": "PK specimen 1 (pre-dose) collection: reason not performed: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.y1_not_collected_reason === 'Other (specify)'"
                    }
                  },
                  {
                    "name": "date_of_y1",
                    "label": "Date of PK specimen 1 (pre-dose) collection",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.y1_collected === 'Yes'"
                    },
                    "validate": {
                      "name": "date_of_y1Valid",
                      "message": "is not a valid date",
                      "code": "dateValid(value, 'YYYY-MM-DD')"
                    },
                    "permissions": [
                      {
                        "roles": [ "site1_read", "site1_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site1_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site2_read", "site2_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site2_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site3_read", "site3_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site3_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site4_read", "site4_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site4_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site5_read", "site5_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "site5_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "central_entry" ],
                        "modes": [ "read", "delete" ],
                        "matches": { "when": "always" }
                      },
                      {
                        "roles": [ "central_monitor", "central_read" ],
                        "modes": [ "read" ],
                        "matches": { "when": "always" }
                      }
                    ]
                  },
                  {
                    "name": "y1_date_as_same_as_visit",
                    "label": "Same as date of clinical visit",
                    "type": "boolean"
                  },
                  {
                    "name": "time_of_y1",
                    "label": "Time of PK specimen 1 (pre-dose) collection",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.y1_collected === 'Yes'"
                    },
                    "validate": {
                      "name": "time_of_y1Valid",
                      "message": "is not a valid time",
                      "code": "validTime(value)"
                    }
                  },
                  {
                    "name": "y2_collected",
                    "label": "Was PK specimen 2 (0.5h post-dose) collected?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "(parent.cycle_day_c === '1' && parent.cycle_day_d === '1') && item.collected === 'Yes'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "y2_not_collected_reason",
                    "label": "PK specimen 2 (0.5h post-dose) collection: reason not performed ",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.y2_collected === 'No'"
                    },
                    "enum": [
                      "Patient refusal",
                      "Physician judgment",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "y2_not_collected_reason_other",
                    "label": "PK specimen 2 (0.5h post-dose) collection: reason not performed: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.y2_collected === 'No' && item.y2_not_collected_reason === 'Other (specify)'"
                    }
                  },
                  {
                    "name": "date_of_y2",
                    "label": "Date of PK specimen 2 (0.5h post-dose) collection",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.y2_collected === 'Yes'"
                    },
                    "validate": {
                      "name": "date_of_y2Valid",
                      "message": "is not a valid date",
                      "code": "dateValid(value, 'YYYY-MM-DD')"
                    },
                    "permissions": [
                      {
                        "roles": [ "site1_read", "site1_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site1_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site2_read", "site2_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site2_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site3_read", "site3_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site3_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site4_read", "site4_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site4_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site5_read", "site5_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "site5_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "central_entry" ],
                        "modes": [ "read", "delete" ],
                        "matches": { "when": "always" }
                      },
                      {
                        "roles": [ "central_monitor", "central_read" ],
                        "modes": [ "read" ],
                        "matches": { "when": "always" }
                      }
                    ]
                  },
                  {
                    "name": "y2_date_as_same_as_visit",
                    "label": "Same as date of clinical visit",
                    "type": "boolean"
                  },
                  {
                    "name": "time_of_y2",
                    "label": "Time of PK specimen 2 (0.5h post-dose) collection",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.y2_collected === 'Yes'"
                    },
                    "validate": {
                      "name": "time_of_y2Valid",
                      "message": "is not a valid time",
                      "code": "validTime(value)"
                    }
                  },
                  {
                    "name": "y3_collected",
                    "label": "Was PK specimen 3 (1h post-dose) collected?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "(parent.cycle_day_c === '1' && parent.cycle_day_d === '1') && item.collected === 'Yes'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "y3_not_collected_reason",
                    "label": "PK specimen 3 (1h post-dose) collection: reason not performed ",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.y3_collected === 'No'"
                    },
                    "enum": [
                      "Patient refusal",
                      "Physician judgment",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "y3_not_collected_reason_other",
                    "label": "PK specimen 3 (1h post-dose) collection: reason not performed: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.y3_collected === 'No' && item.y3_not_collected_reason === 'Other (specify)'"
                    }
                  },
                  {
                    "name": "date_of_y3",
                    "label": "Date of PK specimen 3 (1h post-dose) collection",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.y3_collected === 'Yes'"
                    },
                    "validate": {
                      "name": "date_of_y3Valid",
                      "message": "is not a valid date",
                      "code": "dateValid(value, 'YYYY-MM-DD')"
                    },
                    "permissions": [
                      {
                        "roles": [ "site1_read", "site1_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site1_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site2_read", "site2_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site2_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site3_read", "site3_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site3_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site4_read", "site4_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site4_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site5_read", "site5_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "site5_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "central_entry" ],
                        "modes": [ "read", "delete" ],
                        "matches": { "when": "always" }
                      },
                      {
                        "roles": [ "central_monitor", "central_read" ],
                        "modes": [ "read" ],
                        "matches": { "when": "always" }
                      }
                    ]
                  },
                  {
                    "name": "y3_date_as_same_as_visit",
                    "label": "Same as date of clinical visit",
                    "type": "boolean"
                  },
                  {
                    "name": "time_of_y3",
                    "label": "Time of PK specimen 3 (1h post-dose) collection",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.y3_collected === 'Yes'"
                    },
                    "validate": {
                      "name": "time_of_y3Valid",
                      "message": "is not a valid time",
                      "code": "validTime(value)"
                    }
                  },
                  {
                    "name": "y4_collected",
                    "label": "Was PK specimen 4 (2h post-dose) collected?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "(parent.cycle_day_c === '1' && parent.cycle_day_d === '1') && item.collected === 'Yes'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "y4_not_collected_reason",
                    "label": "PK specimen 4 (2h post-dose) collection: reason not performed ",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.y4_collected === 'No'"
                    },
                    "enum": [
                      "Patient refusal",
                      "Physician judgment",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "y4_not_collected_reason_other",
                    "label": "PK specimen 4 (2h post-dose) collection: reason not performed: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.y4_collected === 'No' && item.y4_not_collected_reason === 'Other (specify)'"
                    }
                  },
                  {
                    "name": "date_of_y4",
                    "label": "Date of PK specimen 4 (2h post-dose) collection",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.y4_collected === 'Yes'"
                    },
                    "validate": {
                      "name": "date_of_y4Valid",
                      "message": "is not a valid date",
                      "code": "dateValid(value, 'YYYY-MM-DD')"
                    },
                    "permissions": [
                      {
                        "roles": [ "site1_read", "site1_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site1_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site2_read", "site2_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site2_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site3_read", "site3_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site3_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site4_read", "site4_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site4_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site5_read", "site5_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "site5_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "central_entry" ],
                        "modes": [ "read", "delete" ],
                        "matches": { "when": "always" }
                      },
                      {
                        "roles": [ "central_monitor", "central_read" ],
                        "modes": [ "read" ],
                        "matches": { "when": "always" }
                      }
                    ]
                  },
                  {
                    "name": "y4_date_as_same_as_visit",
                    "label": "Same as date of clinical visit",
                    "type": "boolean"
                  },
                  {
                    "name": "time_of_y4",
                    "label": "Time of PK specimen 4 (2h post-dose) collection",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.y4_collected === 'Yes'"
                    },
                    "validate": {
                      "name": "time_of_y4Valid",
                      "message": "is not a valid time",
                      "code": "validTime(value)"
                    }
                  },
                  {
                    "name": "y5_collected",
                    "label": "Was PK specimen 5 (4h post-dose) collected?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "(parent.cycle_day_c === '1' && parent.cycle_day_d === '1') && item.collected === 'Yes'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "y5_not_collected_reason",
                    "label": "PK specimen 5 (4h post-dose) collection: reason not performed ",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.y5_collected === 'No'"
                    },
                    "enum": [
                      "Patient refusal",
                      "Physician judgment",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "y5_not_collected_reason_other",
                    "label": "PK specimen 5 (4h post-dose) collection: reason not performed: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.y5_collected === 'No' && item.y5_not_collected_reason === 'Other (specify)'"
                    }
                  },
                  {
                    "name": "date_of_y5",
                    "label": "Date of PK specimen 5 (4h post-dose) collection",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.y5_collected === 'Yes'"
                    },
                    "validate": {
                      "name": "date_of_y5Valid",
                      "message": "is not a valid date",
                      "code": "dateValid(value, 'YYYY-MM-DD')"
                    },
                    "permissions": [
                      {
                        "roles": [ "site1_read", "site1_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site1_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site2_read", "site2_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site2_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site3_read", "site3_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site3_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site4_read", "site4_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site4_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site5_read", "site5_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "site5_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "central_entry" ],
                        "modes": [ "read", "delete" ],
                        "matches": { "when": "always" }
                      },
                      {
                        "roles": [ "central_monitor", "central_read" ],
                        "modes": [ "read" ],
                        "matches": { "when": "always" }
                      }
                    ]
                  },
                  {
                    "name": "y5_date_as_same_as_visit",
                    "label": "Same as date of clinical visit",
                    "type": "boolean"
                  },
                  {
                    "name": "time_of_y5",
                    "label": "Time of PK specimen 5 (4h post-dose) collection",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.y5_collected === 'Yes'"
                    },
                    "validate": {
                      "name": "time_of_y5Valid",
                      "message": "is not a valid time",
                      "code": "validTime(value)"
                    }
                  },
                  {
                    "name": "y6_collected",
                    "label": "Was PK specimen 6 (6h post-dose) collected?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "(parent.cycle_day_c === '1' && parent.cycle_day_d === '1') && item.collected === 'Yes'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "y6_not_collected_reason",
                    "label": "PK specimen 6 (6h post-dose) collection: reason not performed ",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.y6_collected === 'No'"
                    },
                    "enum": [
                      "Patient refusal",
                      "Physician judgment",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "y6_not_collected_reason_other",
                    "label": "PK specimen 6 (6h post-dose) collection: reason not performed: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.y6_collected === 'No' && item.y6_not_collected_reason === 'Other (specify)'"
                    }
                  },
                  {
                    "name": "date_of_y6",
                    "label": "Date of PK specimen 6 (6h post-dose) collection",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.y6_collected === 'Yes'"
                    },
                    "validate": {
                      "name": "date_of_y6Valid",
                      "message": "is not a valid date",
                      "code": "dateValid(value, 'YYYY-MM-DD')"
                    },
                    "permissions": [
                      {
                        "roles": [ "site1_read", "site1_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site1_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site2_read", "site2_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site2_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site3_read", "site3_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site3_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site4_read", "site4_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site4_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site5_read", "site5_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "site5_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "central_entry" ],
                        "modes": [ "read", "delete" ],
                        "matches": { "when": "always" }
                      },
                      {
                        "roles": [ "central_monitor", "central_read" ],
                        "modes": [ "read" ],
                        "matches": { "when": "always" }
                      }
                    ]
                  },
                  {
                    "name": "y6_date_as_same_as_visit",
                    "label": "Same as date of clinical visit",
                    "type": "boolean"
                  },
                  {
                    "name": "time_of_y6",
                    "label": "Time of PK specimen 6 (6h post-dose) collection",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.y6_collected === 'Yes'"
                    },
                    "validate": {
                      "name": "time_of_y6Valid",
                      "message": "is not a valid time",
                      "code": "validTime(value)"
                    }
                  },
                  {
                    "name": "y7_collected",
                    "label": "Was PK specimen 7 (8h post-dose) collected?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "(parent.cycle_day_c === '1' && parent.cycle_day_d === '1') && item.collected === 'Yes'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "y7_not_collected_reason",
                    "label": "PK specimen 7 (8h post-dose) collection: reason not performed ",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.y7_collected === 'No'"
                    },
                    "enum": [
                      "Patient refusal",
                      "Physician judgment",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "y7_not_collected_reason_other",
                    "label": "PK specimen 7 (8h post-dose) collection: reason not performed: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.y7_collected === 'No' && item.y7_not_collected_reason === 'Other (specify)'"
                    }
                  },
                  {
                    "name": "date_of_y7",
                    "label": "Date of PK specimen 7 (8h post-dose) collection",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.y7_collected === 'Yes'"
                    },
                    "validate": {
                      "name": "date_of_y7Valid",
                      "message": "is not a valid date",
                      "code": "dateValid(value, 'YYYY-MM-DD')"
                    },
                    "permissions": [
                      {
                        "roles": [ "site1_read", "site1_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site1_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site2_read", "site2_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site2_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site3_read", "site3_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site3_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site4_read", "site4_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site4_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site5_read", "site5_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "site5_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "central_entry" ],
                        "modes": [ "read", "delete" ],
                        "matches": { "when": "always" }
                      },
                      {
                        "roles": [ "central_monitor", "central_read" ],
                        "modes": [ "read" ],
                        "matches": { "when": "always" }
                      }
                    ]
                  },
                  {
                    "name": "y7_date_as_same_as_visit",
                    "label": "Same as date of clinical visit",
                    "type": "boolean"
                  },
                  {
                    "name": "time_of_y7",
                    "label": "Time of PK specimen 7 (8h post-dose) collection",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.y7_collected === 'Yes'"
                    },
                    "validate": {
                      "name": "time_of_y7Valid",
                      "message": "is not a valid time",
                      "code": "validTime(value)"
                    }
                  },
                  {
                    "name": "y8_collected",
                    "label": "Was PK specimen 8 (24h post-dose) collected?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "(parent.cycle_day_c === '1' && parent.cycle_day_d === '1') && item.collected === 'Yes'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "y8_not_collected_reason",
                    "label": "PK specimen 8 (24h post-dose) collection: reason not performed ",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.y8_collected === 'No'"
                    },
                    "enum": [
                      "Patient refusal",
                      "Physician judgment",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "y8_not_collected_reason_other",
                    "label": "PK specimen 8 (24h post-dose) collection: reason not performed: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.y8_collected === 'No' && item.y8_not_collected_reason === 'Other (specify)'"
                    }
                  },
                  {
                    "name": "date_of_y8",
                    "label": "Date of PK specimen 8 (24h post-dose) collection",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.y8_collected === 'Yes'"
                    },
                    "validate": {
                      "name": "date_of_y8Valid",
                      "message": "is not a valid date",
                      "code": "dateValid(value, 'YYYY-MM-DD')"
                    },
                    "permissions": [
                      {
                        "roles": [ "site1_read", "site1_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site1_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site2_read", "site2_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site2_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site3_read", "site3_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site3_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site4_read", "site4_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site4_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site5_read", "site5_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "site5_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "central_entry" ],
                        "modes": [ "read", "delete" ],
                        "matches": { "when": "always" }
                      },
                      {
                        "roles": [ "central_monitor", "central_read" ],
                        "modes": [ "read" ],
                        "matches": { "when": "always" }
                      }
                    ]
                  },
                  {
                    "name": "y8_date_as_same_as_visit",
                    "label": "Same as date of clinical visit",
                    "type": "boolean"
                  },
                  {
                    "name": "time_of_y8",
                    "label": "Time of PK specimen 8 (24h post-dose) collection",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.y8_collected === 'Yes'"
                    },
                    "validate": {
                      "name": "time_of_y8Valid",
                      "message": "is not a valid time",
                      "code": "validTime(value)"
                    }
                  }
                ],
                "warnings": [
                  {
                    "name": "dateOfY1Warning",
                    "field": "date_of_y1",
                    "message": "Procedure date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                    "code": [
                      "if(item.y1_collected === 'Yes' && item.date_of_y1){",
                      "  dateCompare(item.date_of_y1, '===', parent.visit_date)",
                      "}else{",
                      "  true;",
                      "}"
                    ]
                  },
                  {
                    "name": "dateOfY2Warning",
                    "field": "date_of_y2",
                    "message": "Procedure date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                    "code": [
                      "if(item.y2_collected === 'Yes' && item.date_of_y2){",
                      "  dateCompare(item.date_of_y2, '===', parent.visit_date)",
                      "}else{",
                      "  true;",
                      "}"
                    ]
                  },
                  {
                    "name": "dateOfY3Warning",
                    "field": "date_of_y3",
                    "message": "Procedure date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                    "code": [
                      "if(item.y3_collected === 'Yes' && item.date_of_y3){",
                      "  dateCompare(item.date_of_y3, '===', parent.visit_date)",
                      "}else{",
                      "  true;",
                      "}"
                    ]
                  },
                  {
                    "name": "dateOfY4Warning",
                    "field": "date_of_y4",
                    "message": "Procedure date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                    "code": [
                      "if(item.y4_collected === 'Yes' && item.date_of_y4){",
                      "  dateCompare(item.date_of_y4, '===', parent.visit_date)",
                      "}else{",
                      "  true;",
                      "}"
                    ]
                  },
                  {
                    "name": "dateOfY5Warning",
                    "field": "date_of_y5",
                    "message": "Procedure date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                    "code": [
                      "if(item.y5_collected === 'Yes' && item.date_of_y5){",
                      "  dateCompare(item.date_of_y5, '===', parent.visit_date)",
                      "}else{",
                      "  true;",
                      "}"
                    ]
                  },
                  {
                    "name": "dateOfY6Warning",
                    "field": "date_of_y6",
                    "message": "Procedure date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                    "code": [
                      "if(item.y6_collected === 'Yes' && item.date_of_y6){",
                      "  dateCompare(item.date_of_y6, '===', parent.visit_date)",
                      "}else{",
                      "  true;",
                      "}"
                    ]
                  },
                  {
                    "name": "dateOfY7Warning",
                    "field": "date_of_y7",
                    "message": "Procedure date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                    "code": [
                      "if(item.y7_collected === 'Yes' && item.date_of_y7){",
                      "  dateCompare(item.date_of_y7, '===', parent.visit_date)",
                      "}else{",
                      "  true;",
                      "}"
                    ]
                  },
                  {
                    "name": "dateOfY8Warning",
                    "field": "date_of_y8",
                    "message": "Procedure date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                    "code": [
                      "if(item.y8_collected === 'Yes' && item.date_of_y8){",
                      "  var visitDate = new Date(parent.visit_date);",
                      "  visitDate.setHours(0,0,0,0);",
                      "  var y8Date = new Date(item.date_of_y8);",
                      "  y8Date.setHours(0,0,0,0);",
                      "  visitDate < y8Date && y8Date < addDays(parent.visit_date, 2);",
                      "}else{",
                      "  true;",
                      "}"
                    ]
                  }
                ],
                "hooks": [
                  {
                    "action": "afterComment",
                    "roles": [ "central_monitor" ],
                    "code": [
                      "if (item.isDirty()) {",
                      "  [{",
                      "    type: 'event',",
                      "    args: {",
                      "      event: 'email',",
                      "      eventName: 'sendCommentSubmittedEmail',",
                      "      data: {",
                      "        roles: [ 'site1_entry' ],",
                      "        notificationName: 'monitorCommented',",
                      "        from: 'noreply@vanderbilt.edu',",
                      "        bodyOpts: {",
                      "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/visits/'+parent.id.toString()+'/PKSpecimens'",
                      "        }",
                      "      }",
                      "    }",
                      "  }]",
                      "}"
                    ]
                  },
                  {
                    "action": "afterComment",
                    "roles": [ "site1_entry" ],
                    "code": [
                      "if (item.isDirty()) {",
                      "  [{",
                      "    type: 'event',",
                      "    args: {",
                      "      event: 'email',",
                      "      eventName: 'sendCommentSubmittedEmail',",
                      "      data: {",
                      "        roles: [ 'central_monitor' ],",
                      "        notificationName: 'entryCommented',",
                      "        from: 'noreply@vanderbilt.edu',",
                      "        bodyOpts: {",
                      "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/visits/'+parent.id.toString()+'/PKSpecimens'",
                      "        }",
                      "      }",
                      "    }",
                      "  }]",
                      "}"
                    ]
                  }
                ],
                "events": [
                  {
                    "name": "sendCommentSubmittedEmail",
                    "code": [
                      "var mailerOpts = {",
                      "  to: data.opts.to,",
                      "  from: data.opts.from,",
                      "  bodyOpts: data.opts.bodyOpts",
                      "};",
                      "data.mailer.set(mailerOpts);",
                      "data.mailer.send();"
                    ]
                  }
                ],
                "notifications": [
                  {
                    "type": "email",
                    "name": "monitorCommented",
                    "subject": "HEM1538 EDC Query submitted",
                    "body": "A query has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
                  },
                  {
                    "type": "email",
                    "name": "entryCommented",
                    "subject": "Site entry user comment submitted",
                    "body": "A query response has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
                  },
                  {
                    "type": "display",
                    "name": "create",
                    "body": "PK specimen was saved successfully"
                  },
                  {
                    "type": "display",
                    "name": "update",
                    "body": "PK specimen was saved successfully"
                  },
                  {
                    "type": "display",
                    "name": "delete",
                    "body": "PK specimen was deleted successfully"
                  }
                ],
                "draftable": true,
                "verifiable": { "type": "local" },
                "commentable": true
              },
              {
                "name": "OffTreatmentDetails",
                "children": [
                  {
                    "name": "off_treatment_date",
                    "label": "Off-treatment date",
                    "type": "string",
                    "required": { "when": "always" },
                    "validate": {
                      "name": "off_treatment_date_valid1",
                      "code": "dateValid(value, 'YYYY-MM-DD')",
                      "message": "is not a valid date"
                    },
                    "permissions": [
                      {
                        "roles": [ "site1_read", "site1_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site1_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site2_read", "site2_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site2_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site3_read", "site3_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site3_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site4_read", "site4_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site4_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site5_read", "site5_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "site5_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "central_entry" ],
                        "modes": [ "read", "delete" ],
                        "matches": { "when": "always" }
                      },
                      {
                        "roles": [ "central_monitor", "central_read" ],
                        "modes": [ "read" ],
                        "matches": { "when": "always" }
                      }
                    ]
                  },
                  {
                    "name": "off_treatment_reason",
                    "label": "Off-treatment reason",
                    "type": "string",
                    "required": { "when": "always" },
                    "enum": [
                      "Disease progression",
                      "Toxicity",
                      "Patient withdrawal from study",
                      "Physician removal of patient",
                      "Completion of treatment",
                      "Other"
                    ]
                  },
                  {
                    "name": "off_treatment_reason_other",
                    "label": "Off-treatment reason: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": [ "item.off_treatment_reason === 'Other'" ]
                    }
                  },
                  {
                    "name": "date_lastdose_tgr1202",
                    "label": "Date of last dose of TGR-1202",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "(parent.visit_type !== 'End-of-treatment (EoT) visit' || parent.performed !== 'No')"
                    },
                    "validate": {
                      "name": "date_lastdose_tgr1202_valid1",
                      "code": "dateValid(value, 'YYYY-MM-DD')",
                      "message": "is not a valid date"
                    },
                    "permissions": [
                      {
                        "roles": [ "site1_read", "site1_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site1_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site2_read", "site2_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site2_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site3_read", "site3_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site3_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site4_read", "site4_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site4_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site5_read", "site5_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "site5_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "central_entry" ],
                        "modes": [ "read", "delete" ],
                        "matches": { "when": "always" }
                      },
                      {
                        "roles": [ "central_monitor", "central_read" ],
                        "modes": [ "read" ],
                        "matches": { "when": "always" }
                      }
                    ]
                  },
                  {
                    "name": "date_lastdose_ruxolitinib",
                    "label": "Date of last dose of ruxolitinib",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "(parent.visit_type !== 'End-of-treatment (EoT) visit' || parent.performed !== 'No')"
                    },
                    "validate": {
                      "name": "date_lastdose_ruxolitinib_valid1",
                      "code": "dateValid(value, 'YYYY-MM-DD')",
                      "message": "is not a valid date"
                    },
                    "permissions": [
                      {
                        "roles": [ "site1_read", "site1_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site1_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site2_read", "site2_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site2_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site3_read", "site3_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site3_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site4_read", "site4_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site4_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site5_read", "site5_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "site5_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "central_entry" ],
                        "modes": [ "read", "delete" ],
                        "matches": { "when": "always" }
                      },
                      {
                        "roles": [ "central_monitor", "central_read" ],
                        "modes": [ "read" ],
                        "matches": { "when": "always" }
                      }
                    ]
                  },
                  {
                    "name": "did_patient_miss_study",
                    "label": "Did patient miss any study drug doses between last study visit and off-treatment date?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "(parent.visit_type !== 'End-of-treatment (EoT) visit' || parent.performed !== 'No')"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "number_missed_tgr1202",
                    "label": "TGR-1202: number of missed doses",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.did_patient_miss_study === 'Yes' && (parent.visit_type !== 'End-of-treatment (EoT) visit' || parent.performed !== 'No')"
                    }
                  },
                  {
                    "name": "number_missed_Ruxolitinib",
                    "label": "Ruxolitinib: number of missed doses",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.did_patient_miss_study === 'Yes' && (parent.visit_type !== 'End-of-treatment (EoT) visit' || parent.performed !== 'No')"
                    }
                  },
                  {
                    "name": "missed_does_reason",
                    "label": "Missed doses: reason",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.did_patient_miss_study === 'Yes' && (parent.visit_type !== 'End-of-treatment (EoT) visit' || parent.performed !== 'No')"
                    },
                    "enum": [
                      "Intentional omission",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "missed_does_reason_specify",
                    "label": "Missed doses: reason: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.missed_does_reason === 'Other (specify)' && item.did_patient_miss_study === 'Yes' && (parent.visit_type !== 'End-of-treatment (EoT) visit' || parent.performed !== 'No')"
                    }
                  }
                ],
                "warnings": [
                  {
                    "name": "off_treatment_date_warning",
                    "field": "off_treatment_date",
                    "message": "Off-treatment date appears to be inconsistent with other date entries. Please check your entry and correct if needed before proceeding.",
                    "code": [
                      "var tpVisits = grandparent.Visits.filter(function(x){return x.visit_type === 'Treatment period visit'});",
                      "if(tpVisits.length > 0){",
                      "  var lasttp = tpVisits[tpVisits.length-1];",
                      "  if(lasttp.eot_completed === 'Yes'){",
                      "    dateCompare(item.off_treatment_date, '===', parent.visit_date);",
                      "  }else{",
                      "    dateCompare(lasttp.visit_date, '<=', item.off_treatment_date) && dateCompare(item.off_treatment_date, '<=', parent.visit_date);",
                      "  }",
                      "}else{",
                      "  dateCompare(item.off_treatment_date, '<=', parent.visit_date);",
                      "}"
                    ]
                  }
                ],
                "validations": [
                  {
                    "name": "date_lastdose_tgr1202_valid2",
                    "field": "date_lastdose_tgr1202",
                    "message": "must be before off treatment date",
                    "code": "!item.date_lastdose_tgr1202 || dateCompare(item.date_lastdose_tgr1202, '<=', item.off_treatment_date)"
                  },
                  {
                    "name": "date_lastdose_ruxolitinib_valid2",
                    "field": "date_lastdose_ruxolitinib",
                    "message": "must be earlier than off treatment date",
                    "code": "!item.date_lastdose_ruxolitinib || dateCompare(item.date_lastdose_ruxolitinib, '<=', item.off_treatment_date)"
                  },
                  {
                    "name": "number_missed_tgr1202Valid",
                    "field": "number_missed_tgr1202",
                    "message": "must be a whole number",
                    "code": "!item.number_missed_tgr1202 || item.number_missed_tgr1202.toString().match(/^[0-9]*$/) !== null"
                  },
                  {
                    "name": "number_missed_RuxolitinibValid",
                    "field": "number_missed_Ruxolitinib",
                    "message": "must be a whole number",
                    "code": "!item.number_missed_Ruxolitinib || item.number_missed_Ruxolitinib.toString().match(/^[0-9]*$/) !== null"
                  }
                ],
                "hooks": [
                  {
                    "action": "afterComment",
                    "roles": [ "central_monitor" ],
                    "code": [
                      "if (item.isDirty()) {",
                      "  [{",
                      "    type: 'event',",
                      "    args: {",
                      "      event: 'email',",
                      "      eventName: 'sendCommentSubmittedEmail',",
                      "      data: {",
                      "        roles: [ 'site1_entry' ],",
                      "        notificationName: 'monitorCommented',",
                      "        from: 'noreply@vanderbilt.edu',",
                      "        bodyOpts: {",
                      "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/visits/'+parent.id.toString()+'/OffTreatmentDetails'",
                      "        }",
                      "      }",
                      "    }",
                      "  }]",
                      "}"
                    ]
                  },
                  {
                    "action": "afterComment",
                    "roles": [ "site1_entry" ],
                    "code": [
                      "if (item.isDirty()) {",
                      "  [{",
                      "    type: 'event',",
                      "    args: {",
                      "      event: 'email',",
                      "      eventName: 'sendCommentSubmittedEmail',",
                      "      data: {",
                      "        roles: [ 'central_monitor' ],",
                      "        notificationName: 'entryCommented',",
                      "        from: 'noreply@vanderbilt.edu',",
                      "        bodyOpts: {",
                      "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/visits/'+parent.id.toString()+'/OffTreatmentDetails'",
                      "        }",
                      "      }",
                      "    }",
                      "  }]",
                      "}"
                    ]
                  }
                ],
                "events": [
                  {
                    "name": "sendCommentSubmittedEmail",
                    "code": [
                      "var mailerOpts = {",
                      "  to: data.opts.to,",
                      "  from: data.opts.from,",
                      "  bodyOpts: data.opts.bodyOpts",
                      "};",
                      "data.mailer.set(mailerOpts);",
                      "data.mailer.send();"
                    ]
                  }
                ],
                "notifications": [
                  {
                    "type": "email",
                    "name": "monitorCommented",
                    "subject": "HEM1538 EDC Query submitted",
                    "body": "A query has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
                  },
                  {
                    "type": "email",
                    "name": "entryCommented",
                    "subject": "Site entry user comment submitted",
                    "body": "A query response has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
                  },
                  {
                    "type": "display",
                    "name": "create",
                    "body": "Off treatment details was saved successfully"
                  },
                  {
                    "type": "display",
                    "name": "update",
                    "body": "Off treatment details was saved successfully"
                  },
                  {
                    "type": "display",
                    "name": "delete",
                    "body": "Off treatment details was deleted successfully"
                  }
                ],
                "draftable": true,
                "verifiable": { "type": "local" },
                "commentable": true
              },
              {
                "name": "DrugAdministration",
                "children": [
                  {
                    "name": "dose_adjustment",
                    "label": "Were any dose adjustments made at this visit?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "parent.cycle_day_c !== '1' || parent.cycle_day_d !== '1' "
                    },
                    "enum": [
                      "Yes, patient dose was adjusted.",
                      "No, patient continued at same dose level as previous visit."
                    ]
                  },
                  {
                    "name": "indicate_adjustment_tgr1202",
                    "label": "Please indicate which drug(s) was(were) dose-adjusted: ",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.dose_adjustment === 'Yes, patient dose was adjusted.'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "indicate_adjustment_Ruxolitinib",
                    "label": "Ruxolitinib",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.dose_adjustment === 'Yes, patient dose was adjusted.'"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "dose_adjustment_reason",
                    "label": "Reason for dose adjustment",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.dose_adjustment === 'Yes, patient dose was adjusted.'"
                    },
                    "enum": [
                      "Adverse event",
                      "Intercurrent illness",
                      "Patient refusal of current dose",
                      "Patient sub-optimal response to current dose",
                      "Resolution of toxicity after previous dose delay"
                    ]
                  },
                  {
                    "name": "specify_adverse_event",
                    "label": "Specify adverse event:",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.dose_adjustment_reason === 'Adverse event' && item.dose_adjustment === 'Yes, patient dose was adjusted.'"
                    }
                  },
                  {
                    "name": "dose_adjustment_type",
                    "label": "Dose adjustment type",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.dose_adjustment === 'Yes, patient dose was adjusted.'"
                    },
                    "enum": [
                      "Dose reduction",
                      "Dose delay",
                      "Patient removal/withdrawal from study treatment",
                      "Intrapatient escalation to next cleared dose",
                      "Resumption of dosing after previous dose delay"
                    ]
                  },
                  {
                    "name": "tgr1202_dose",
                    "label": "TGR-1202 dose (mg) ordered/dispensed at this visit",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": [
                        "(parent.cycle_day_c === '1' && parent.cycle_day_d === '1') ||",
                        "(item.dose_adjustment === 'No, patient continued at same dose level as previous visit.' && parent.cycle_day_c !== undefined) ||",
                        "(item.dose_adjustment === 'Yes, patient dose was adjusted.' && item.dose_adjustment_type !== undefined && item.dose_adjustment_type !== 'Patient removal/withdrawal from study treatment')"
                      ]
                    },
                    "enum": [ "0", "200", "400", "800", "1200" ]
                  },
                  {
                    "name": "Ruxolitinib_dose",
                    "label": "Ruxolitinib dose (mg) ordered/dispensed at this visit",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": [
                        "(parent.cycle_day_c === '1' && parent.cycle_day_d === '1') ||",
                        "(item.dose_adjustment === 'No, patient continued at same dose level as previous visit.' && parent.cycle_day_c !== undefined) ||",
                        "(item.dose_adjustment === 'Yes, patient dose was adjusted.' && item.dose_adjustment_type !== undefined && item.dose_adjustment_type !== 'Patient removal/withdrawal from study treatment')"
                      ]
                    },
                    "enum": [ "0", "5", "10", "15", "20" ]
                  },
                  {
                    "name": "drug_administered",
                    "label": "Was study drug administered during this visit?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": [
                        "((parent.cycle_day_c === '1' && (parent.cycle_day_d === '1' || parent.cycle_day_d === '8' || parent.cycle_day_d === '15' || parent.cycle_day_d === '22' )) || ",
                        " (parent.cycle_day_c === '2' && parent.cycle_day_d === '1') || ",
                        " (parent.cycle_day_c === '3' && parent.cycle_day_d === '1'))",
                        "&& ",
                        "((item.tgr1202_dose && parseInt(item.tgr1202_dose) > 0) || (item.Ruxolitinib_dose && parseInt(item.Ruxolitinib_dose) > 0))"
                      ]
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "reason_not_performed",
                    "label": "Drug administration during visit: reason not performed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.drug_administered === 'No'"
                    },
                    "enum": [
                      "Patient refusal",
                      "Physician judgment",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "reason_not_performed_specify",
                    "label": "Drug administration during visit: reason not performed: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.reason_not_performed === 'Other (specify)'"
                    }
                  },
                  {
                    "name": "drug_date_administered",
                    "label": "Date of drug administration",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.drug_administered === 'Yes'"
                    },
                    "validate": {
                      "name": "drugDateValid",
                      "message": "is not a valid date",
                      "code": "dateValid(value, 'YYYY-MM-DD')"
                    },
                    "permissions": [
                      {
                        "roles": [ "site1_read", "site1_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site1_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site2_read", "site2_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site2_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site3_read", "site3_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site3_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site4_read", "site4_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site4_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site5_read", "site5_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "site5_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "central_entry" ],
                        "modes": [ "read", "delete" ],
                        "matches": { "when": "always" }
                      },
                      {
                        "roles": [ "central_monitor", "central_read" ],
                        "modes": [ "read" ],
                        "matches": { "when": "always" }
                      }
                    ]
                  },
                  {
                    "name": "drug_date_as_same_as_visit",
                    "label": "Same as date of clinical visit",
                    "type": "boolean"
                  },
                  {
                    "name": "time_drug_administered",
                    "label": "Time of drug administration",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.drug_administered === 'Yes'"
                    },
                    "validate": {
                      "name": "time_drug_administeredValid",
                      "message": "is not a valid time",
                      "code": "validTime(value)"
                    }
                  },
                  {
                    "name": "patient_dose_missed",
                    "label": "Did patient miss any doses of study drug since last visit?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "(parent.cycle_day_c !== undefined && parent.eot_completed !== 'Yes') && (parent.cycle_day_c !== '1' || parent.cycle_day_d !== '1')"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "tgr1202_number_missed",
                    "label": "HEM-1538: number of missed doses",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.patient_dose_missed === 'Yes'"
                    }
                  },
                  {
                    "name": "Ruxolitinib_number_missed",
                    "label": "Ruxolitinib: number of missed doses",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.patient_dose_missed === 'Yes'"
                    }
                  },
                  {
                    "name": "missed_dose_reason",
                    "label": "Missed doses: reason",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.patient_dose_missed === 'Yes'"
                    },
                    "enum": [
                      "Intentional omission",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "missed_dose_reason_specify",
                    "label": "Missed doses: other reason: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.missed_dose_reason === 'Other (specify)' "
                    }
                  },
                  {
                    "name": "pill_diary_collected",
                    "label": "Was patient pill diary for cycle 1 collected?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "(parent.cycle_day_c === '2' && parent.cycle_day_d === '1')"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "pill_not_collected_reason",
                    "label": "Pill diary: reason not collected",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.pill_diary_collected === 'No'"
                    },
                    "enum": [
                      "Patient refusal",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "pill_not_collected_reason_specify",
                    "label": "Pill diary: other reason not collected",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.pill_not_collected_reason === 'Other (specify)'"
                    }
                  }
                ],
                "validations": [
                  {
                    "name": "indicateValid",
                    "field": "indicate_adjustment_tgr1202",
                    "message": "Either TGR-1202 or Ruxolitinib must be adjusted",
                    "code": "item.dose_adjustment !== 'Yes, patient dose was adjusted.' || (item.indicate_adjustment_tgr1202 === 'Yes' || item.indicate_adjustment_Ruxolitinib === 'Yes')"
                  },
                  {
                    "name": "tgrMissedDoseInt",
                    "field": "tgr1202_number_missed",
                    "message": "must be reported as whole numbers",
                    "code": "item.patient_dose_missed !== 'Yes' || item.tgr1202_number_missed.match(/^[0-9]*$/) !== null"
                  },
                  {
                    "name": "ruxMissedDoseInt",
                    "field": "Ruxolitinib_number_missed",
                    "message": "must be reported as whole numbers",
                    "code": "item.patient_dose_missed !== 'Yes' || item.Ruxolitinib_number_missed.match(/^[0-9]*$/) !== null"
                  }
                ],
                "warnings": [
                  {
                    "name": "drugDateAdminWarning",
                    "field": "drug_date_administered",
                    "message": "Drug administration date appears to deviate from study calendar. Please check your entry and correct if needed.",
                    "code": [
                      "if(item.drug_date_administered){",
                      "  var date = new Date(item.drug_date_administered);",
                      "  date.setHours(0,0,0,0);",
                      "  addDays(parent.visit_date, -3) <= date && date <= addDays(parent.visit_date, 3)",
                      "}else{",
                      "  true;",
                      "}"
                    ]
                  }
                ],
                "hooks": [
                  {
                    "action": "afterComment",
                    "roles": [ "central_monitor" ],
                    "code": [
                      "if (item.isDirty()) {",
                      "  [{",
                      "    type: 'event',",
                      "    args: {",
                      "      event: 'email',",
                      "      eventName: 'sendCommentSubmittedEmail',",
                      "      data: {",
                      "        roles: [ 'site1_entry' ],",
                      "        notificationName: 'monitorCommented',",
                      "        from: 'noreply@vanderbilt.edu',",
                      "        bodyOpts: {",
                      "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/visits/'+parent.id.toString()+'/DrugAdministration'",
                      "        }",
                      "      }",
                      "    }",
                      "  }]",
                      "}"
                    ]
                  },
                  {
                    "action": "afterComment",
                    "roles": [ "site1_entry" ],
                    "code": [
                      "if (item.isDirty()) {",
                      "  [{",
                      "    type: 'event',",
                      "    args: {",
                      "      event: 'email',",
                      "      eventName: 'sendCommentSubmittedEmail',",
                      "      data: {",
                      "        roles: [ 'central_monitor' ],",
                      "        notificationName: 'entryCommented',",
                      "        from: 'noreply@vanderbilt.edu',",
                      "        bodyOpts: {",
                      "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/visits/'+parent.id.toString()+'/DrugAdministration'",
                      "        }",
                      "      }",
                      "    }",
                      "  }]",
                      "}"
                    ]
                  }
                ],
                "events": [
                  {
                    "name": "sendCommentSubmittedEmail",
                    "code": [
                      "var mailerOpts = {",
                      "  to: data.opts.to,",
                      "  from: data.opts.from,",
                      "  bodyOpts: data.opts.bodyOpts",
                      "};",
                      "data.mailer.set(mailerOpts);",
                      "data.mailer.send();"
                    ]
                  }
                ],
                "notifications": [
                  {
                    "type": "email",
                    "name": "monitorCommented",
                    "subject": "HEM1538 EDC Query submitted",
                    "body": "A query has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
                  },
                  {
                    "type": "email",
                    "name": "entryCommented",
                    "subject": "Site entry user comment submitted",
                    "body": "A query response has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
                  },
                  {
                    "type": "display",
                    "name": "create",
                    "body": "Drug administration was saved successfully"
                  },
                  {
                    "type": "display",
                    "name": "update",
                    "body": "Drug administration was saved successfully"
                  },
                  {
                    "type": "display",
                    "name": "delete",
                    "body": "Drug administration was deleted successfully"
                  }
                ],
                "draftable": true,
                "verifiable": { "type": "local" },
                "commentable": true
              },
              {
                "name": "ClinicalExam",
                "children": [
                  {
                    "name": "physical_exam_performed",
                    "label": "Was physical exam performed for this study visit?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "parent.visit_type === 'Screening visit' || parent.visit_type === 'End-of-treatment (EoT) visit' || parent.eot_completed === 'Yes' || parent.visit_type === 'Unscheduled visit' || parent.cycle_day_d === '1' || ((parent.cycle_day_c === '1' || parent.cycle_day_c === '2') && parent.cycle_day_d === '15')"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "physical_exam_not_performed_reason",
                    "label": "Physical exam: reason not performed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.physical_exam_performed === 'No' && parent.visit_type !== 'Unscheduled visit'"
                    },
                    "enum": [
                      "Patient refusal",
                      "Physician judgment",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "physical_exam_not_performed_reason_other",
                    "label": "Physical exam: reason not performed: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.physical_exam_not_performed_reason === 'Other (specify)' "
                    }
                  },
                  {
                    "name": "patient_height",
                    "label": "Patient height (cm)",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.physical_exam_performed === 'Yes' && parent.visit_type === 'Screening visit' "
                    }
                  },
                  {
                    "name": "patient_weight",
                    "label": "Patient weight (kg)",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.physical_exam_performed === 'Yes' "
                    }
                  },
                  {
                    "name": "splenomegaly_assessment",
                    "label": "Splenomegaly assessment",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.physical_exam_performed === 'Yes' "
                    },
                    "enum": [
                      "Not palpable",
                      "Palpable at <5 cm below the lower costal margin (LCM)",
                      "Palpable at 5-10 cm below the lower costal margin (LCM)",
                      "Palpable at > 10cm below the lower costal margin (LCM)",
                      "Not assessed"
                    ]
                  },
                  {
                    "name": "evidence_of_other_extramedullary_hematopoiesis",
                    "label": "Evidence of other (non-speen) extramedullary hematopoiesis (EMH)",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.physical_exam_performed === 'Yes' "
                    },
                    "enum": [ "Yes", "No", "Not assessed" ]
                  },
                  {
                    "name": "specify_non_spleen_site_of_EMH",
                    "label": "Specify non-spleen site of EMH",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.evidence_of_other_extramedullary_hematopoiesis === 'Yes' "
                    },
                    "enum": [ "Liver", "Other (specify)" ]
                  },
                  {
                    "name": "specify_other_site",
                    "label": "Specify other site",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.specify_non_spleen_site_of_EMH === 'Other (specify)' "
                    }
                  },
                  {
                    "name": "vital_signs_performed",
                    "label": "Were vital signs assessed for this study visit?",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "parent.visit_type === 'Screening visit' || parent.visit_type === 'End-of-treatment (EoT) visit' || parent.eot_completed === 'Yes' || parent.visit_type === 'Unscheduled visit' || parent.cycle_day_d === '1' || ((parent.cycle_day_c === '1' || parent.cycle_day_c === '2') && parent.cycle_day_d === '15')"
                    },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "vital_signs_not_performed_reason",
                    "label": "Vital signs: reason not assessed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.vital_signs_performed === 'No' && parent.visit_type !== 'Unscheduled visit' "
                    },
                    "enum": [
                      "Patient refusal",
                      "Physician judgment",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "vital_signs_not_performed_reason_other",
                    "label": "Vital signs: reason not assessed: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.vital_signs_not_performed_reason === 'Other (specify)' "
                    }
                  },
                  {
                    "name": "pulse_rate",
                    "label": "Pulse rate",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.vital_signs_performed === 'Yes' "
                    }
                  },
                  {
                    "name": "respiratory_rate",
                    "label": "Respiratory rate",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.vital_signs_performed === 'Yes' "
                    }
                  },
                  {
                    "name": "bp_systolic",
                    "label": "BP systolic",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.vital_signs_performed === 'Yes' "
                    }
                  },
                  {
                    "name": "bp_diastolic",
                    "label": "BP diastolic",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.vital_signs_performed === 'Yes' "
                    }
                  },
                  {
                    "name": "temperature",
                    "label": "Temperature",
                    "type": "number",
                    "required": {
                      "when": "conditionally",
                      "code": "item.vital_signs_performed === 'Yes' "
                    }
                  },
                  {
                    "name": "temperature_unit",
                    "label": "Temperature unit",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.vital_signs_performed === 'Yes' "
                    },
                    "enum": [ "F", "C" ]
                  },
                  {
                    "name": "ecog_performance_status_performed",
                    "label": "Was ECOG performance status assessed for this study visit?",
                    "type": "string",
                    "required": { "when": "always" },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "ecog_performance_status_not_performed_reason",
                    "label": "ECOG PS: reason not assessed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ecog_performance_status_performed === 'No' && parent.visit_type !== 'Unscheduled visit' "
                    },
                    "enum": [
                      "Patient refusal",
                      "Physician judgment",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "ecog_performance_status_not_performed_reason_other",
                    "label": "ECOG PS: reason not assessed: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ecog_performance_status_not_performed_reason === 'Other (specify)' "
                    }
                  },
                  {
                    "name": "ecog_performance_status",
                    "label": "ECOG performance status",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.ecog_performance_status_performed === 'Yes' "
                    },
                    "enum": [ "0", "1", "2", "3", "4", "5" ]
                  }
                ],
                "hooks": [
                  {
                    "action": "afterComment",
                    "roles": [ "central_monitor" ],
                    "code": [
                      "if (item.isDirty()) {",
                      "  [{",
                      "    type: 'event',",
                      "    args: {",
                      "      event: 'email',",
                      "      eventName: 'sendCommentSubmittedEmail',",
                      "      data: {",
                      "        roles: [ 'site1_entry' ],",
                      "        notificationName: 'monitorCommented',",
                      "        from: 'noreply@vanderbilt.edu',",
                      "        bodyOpts: {",
                      "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/visits/'+parent.id.toString()+'/ClinicalExam'",
                      "        }",
                      "      }",
                      "    }",
                      "  }]",
                      "}"
                    ]
                  },
                  {
                    "action": "afterComment",
                    "roles": [ "site1_entry" ],
                    "code": [
                      "if (item.isDirty()) {",
                      "  [{",
                      "    type: 'event',",
                      "    args: {",
                      "      event: 'email',",
                      "      eventName: 'sendCommentSubmittedEmail',",
                      "      data: {",
                      "        roles: [ 'central_monitor' ],",
                      "        notificationName: 'entryCommented',",
                      "        from: 'noreply@vanderbilt.edu',",
                      "        bodyOpts: {",
                      "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/visits/'+parent.id.toString()+'/ClinicalExam'",
                      "        }",
                      "      }",
                      "    }",
                      "  }]",
                      "}"
                    ]
                  }
                ],
                "events": [
                  {
                    "name": "sendCommentSubmittedEmail",
                    "code": [
                      "var mailerOpts = {",
                      "  to: data.opts.to,",
                      "  from: data.opts.from,",
                      "  bodyOpts: data.opts.bodyOpts",
                      "};",
                      "data.mailer.set(mailerOpts);",
                      "data.mailer.send();"
                    ]
                  }
                ],
                "notifications": [
                  {
                    "type": "email",
                    "name": "monitorCommented",
                    "subject": "HEM1538 EDC Query submitted",
                    "body": "A query has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
                  },
                  {
                    "type": "email",
                    "name": "entryCommented",
                    "subject": "Site entry user comment submitted",
                    "body": "A query response has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
                  },
                  {
                    "type": "display",
                    "name": "create",
                    "body": "Clinical exam was saved successfully"
                  },
                  {
                    "type": "display",
                    "name": "update",
                    "body": "Clinical exam was saved successfully"
                  },
                  {
                    "type": "display",
                    "name": "delete",
                    "body": "Clinical exam was deleted successfully"
                  }
                ],
                "draftable": true,
                "verifiable": { "type": "local" },
                "commentable": true
              },
              {
                "name": "MPNSAFTSS",
                "children": [
                  {
                    "name": "performed",
                    "label": "Were patient-reported symptoms by MPN-SAF TSS assessed for this timepoint?",
                    "type": "string",
                    "required": { "when": "always" },
                    "enum": [ "Yes", "No" ]
                  },
                  {
                    "name": "not_performed_reason",
                    "label": "MPN-SAF TSS: reason not performed",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.performed === 'No'"
                    },
                    "enum": [
                      "Patient refusal",
                      "Physician judgment",
                      "Unintentional omission",
                      "Other (specify)"
                    ]
                  },
                  {
                    "name": "not_performed_reason_other",
                    "label": "MPN-SAF TSS: reason not performed: specify",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.not_performed_reason === 'Other (specify)' "
                    }
                  },
                  {
                    "name": "date_of_completion",
                    "label": "Date of completion of MPN-SAF TSS",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.performed === 'Yes' "
                    },
                    "permissions": [
                      {
                        "roles": [ "site1_read", "site1_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site1_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Vanderbilt'"
                        }
                      },
                      {
                        "roles": [ "site2_read", "site2_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site2_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 2'"
                        }
                      },
                      {
                        "roles": [ "site3_read", "site3_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site3_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 3'"
                        }
                      },
                      {
                        "roles": [ "site4_read", "site4_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site4_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 4'"
                        }
                      },
                      {
                        "roles": [ "site5_read", "site5_pi" ],
                        "modes": [ "read" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "site5_entry" ],
                        "modes": [ "read", "update" ],
                        "matches": {
                          "when": "conditionally",
                          "code": "top.site_name === 'Site 5'"
                        }
                      },
                      {
                        "roles": [ "central_entry" ],
                        "modes": [ "read", "delete" ],
                        "matches": { "when": "always" }
                      },
                      {
                        "roles": [ "central_monitor", "central_read" ],
                        "modes": [ "read" ],
                        "matches": { "when": "always" }
                      }
                    ]
                  },
                  {
                    "name": "date_as_same_as_visit",
                    "label": "Same as date of clinical visit",
                    "type": "boolean"
                  },
                  {
                    "name": "fatigue_rate",
                    "label": "Please rate your fatigue (weariness, tiredness), by selecting the one number that best describes your WORST level of fatigue during past 24 hours",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.performed === 'Yes' "
                    },
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "6",
                      "7",
                      "8",
                      "9",
                      "10 (Worst imaginable)",
                      "Patient did not respond."
                    ]
                  },
                  {
                    "name": "eat_quickly",
                    "label": "Please select the one number that describes how, during the past week how much difficulty you have had with each of the following symptoms",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.performed === 'Yes' "
                    },
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "6",
                      "7",
                      "8",
                      "9",
                      "10 (Worst imaginable)",
                      "Patient did not respond."
                    ]
                  },
                  {
                    "name": "abdominal_discomfort",
                    "label": "Abdominal discomfort",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.performed === 'Yes' "
                    },
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "6",
                      "7",
                      "8",
                      "9",
                      "10 (Worst imaginable)",
                      "Patient did not respond."
                    ]
                  },
                  {
                    "name": "inactivity",
                    "label": "Inactivity",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.performed === 'Yes' "
                    },
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "6",
                      "7",
                      "8",
                      "9",
                      "10 (Worst imaginable)",
                      "Patient did not respond."
                    ]
                  },
                  {
                    "name": "problems_with_concentration",
                    "label": "Problems with concentration - compared to prior to my MPD",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.performed === 'Yes' "
                    },
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "6",
                      "7",
                      "8",
                      "9",
                      "10 (Worst imaginable)",
                      "Patient did not respond."
                    ]
                  },
                  {
                    "name": "numbness_tingling",
                    "label": "Numbness / tingling (in my hands and feet)",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.performed === 'Yes' "
                    },
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "6",
                      "7",
                      "8",
                      "9",
                      "10 (Worst imaginable)",
                      "Patient did not respond."
                    ]
                  },
                  {
                    "name": "night_sweats",
                    "label": "Night sweats",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.performed === 'Yes' "
                    },
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "6",
                      "7",
                      "8",
                      "9",
                      "10 (Worst imaginable)",
                      "Patient did not respond."
                    ]
                  },
                  {
                    "name": "itching",
                    "label": "Itching (pruritus)",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.performed === 'Yes' "
                    },
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "6",
                      "7",
                      "8",
                      "9",
                      "10 (Worst imaginable)",
                      "Patient did not respond."
                    ]
                  },
                  {
                    "name": "bone_pain",
                    "label": "Bone pain (diffuse, not joint pain or arthritis)",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.performed === 'Yes' "
                    },
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "6",
                      "7",
                      "8",
                      "9",
                      "10 (Worst imaginable)",
                      "Patient did not respond."
                    ]
                  },
                  {
                    "name": "fever",
                    "label": "Fever (&gt;100F)",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.performed === 'Yes' "
                    },
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "6",
                      "7",
                      "8",
                      "9",
                      "10 (Worst imaginable)",
                      "Patient did not respond."
                    ]
                  },
                  {
                    "name": "weight_loss",
                    "label": "Unintentional weight loss in last 6 months",
                    "type": "string",
                    "required": {
                      "when": "conditionally",
                      "code": "item.performed === 'Yes' "
                    },
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "6",
                      "7",
                      "8",
                      "9",
                      "10 (Worst imaginable)",
                      "Patient did not respond."
                    ]
                  }
                ],
                "warnings": [
                  {
                    "name": "screeningDateOfCompletion",
                    "field": "date_of_completion",
                    "message": "Procedure date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                    "code": [
                      "if(item.date_of_completion && parent.visit_type === 'Screening visit'){",
                      "  var date = new Date(item.date_of_completion);",
                      "  date.setHours(0,0,0,0);",
                      "  addDays(parent.visit_date, -7) <= date && date <= addDays(parent.visit_date, 7)",
                      "}else{",
                      "  true;",
                      "}"
                    ]
                  },
                  {
                    "name": "nonScreeningDateOfCompletion",
                    "field": "date_of_completion",
                    "message": "Procedure date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                    "code": [
                      "if(item.date_of_completion && parent.visit_type !== 'Screening visit'){",
                      "  var date = new Date(item.date_of_completion);",
                      "  date.setHours(0,0,0,0);",
                      "  addDays(parent.visit_date, -3) <= date && date <= addDays(parent.visit_date, 3)",
                      "}else{",
                      "  true;",
                      "}"
                    ]
                  }
                ],
                "validations": [
                  {
                    "name": "dateOfCompletionValid",
                    "field": "date_of_completion",
                    "message": "is not a valid date",
                    "code": "item.performed !== 'Yes' || dateValid(item.date_of_completion, 'YYYY-MM-DD')"
                  }
                ],
                "hooks": [
                  {
                    "action": "afterComment",
                    "roles": [ "central_monitor" ],
                    "code": [
                      "if (item.isDirty()) {",
                      "  [{",
                      "    type: 'event',",
                      "    args: {",
                      "      event: 'email',",
                      "      eventName: 'sendCommentSubmittedEmail',",
                      "      data: {",
                      "        roles: [ 'site1_entry' ],",
                      "        notificationName: 'monitorCommented',",
                      "        from: 'noreply@vanderbilt.edu',",
                      "        bodyOpts: {",
                      "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/visits/'+parent.id.toString()+'/MPNSAFTSS'",
                      "        }",
                      "      }",
                      "    }",
                      "  }]",
                      "}"
                    ]
                  },
                  {
                    "action": "afterComment",
                    "roles": [ "site1_entry" ],
                    "code": [
                      "if (item.isDirty()) {",
                      "  [{",
                      "    type: 'event',",
                      "    args: {",
                      "      event: 'email',",
                      "      eventName: 'sendCommentSubmittedEmail',",
                      "      data: {",
                      "        roles: [ 'central_monitor' ],",
                      "        notificationName: 'entryCommented',",
                      "        from: 'noreply@vanderbilt.edu',",
                      "        bodyOpts: {",
                      "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/visits/'+parent.id.toString()+'/MPNSAFTSS'",
                      "        }",
                      "      }",
                      "    }",
                      "  }]",
                      "}"
                    ]
                  }
                ],
                "events": [
                  {
                    "name": "sendCommentSubmittedEmail",
                    "code": [
                      "var mailerOpts = {",
                      "  to: data.opts.to,",
                      "  from: data.opts.from,",
                      "  bodyOpts: data.opts.bodyOpts",
                      "};",
                      "data.mailer.set(mailerOpts);",
                      "data.mailer.send();"
                    ]
                  }
                ],
                "notifications": [
                  {
                    "type": "email",
                    "name": "monitorCommented",
                    "subject": "HEM1538 EDC Query submitted",
                    "body": "A query has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
                  },
                  {
                    "type": "email",
                    "name": "entryCommented",
                    "subject": "Site entry user comment submitted",
                    "body": "A query response has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
                  },
                  {
                    "type": "display",
                    "name": "create",
                    "body": "MPN-SAF TSS was saved successfully"
                  },
                  {
                    "type": "display",
                    "name": "update",
                    "body": "MPN-SAF TSS was saved successfully"
                  },
                  {
                    "type": "display",
                    "name": "delete",
                    "body": "MPN-SAF TSS was deleted successfully"
                  }
                ],
                "draftable": true,
                "verifiable": { "type": "local" },
                "commentable": true
              }
            ],
            "validations": [  ],
            "warnings": [
              {
                "name": "CxD1VisitDateWarning",
                "field": "visit_date",
                "message": "Visit date appears to deviate from study calendar. Cyle start is out of bounds.",
                "code": [
                  "var cycleDay = getCycleDay(item, parent);",
                  "var dIndex = cycleDay.indexOf('D');",
                  "var c = cycleDay.substr(1, dIndex-1);",
                  "var d = cycleDay.slice(dIndex+1);",
                  "if(parent && parent.Visits && d === '1' && c !== '1'){",
                  "  var previous = parent.Visits.filter(function(x){ return x.cycle_day_d === '1' && x.cycle_day_c === ((c - 1)+'')})[0];",
                  "  var date = new Date(item.visit_date);",
                  "  date.setHours(0,0,0,0);",
                  "  addDays(previous.visit_date, 25) <= date && date <= addDays(previous.visit_date, 59)",
                  "}else{",
                  "  true;",
                  "}"
                ]
              },
              {
                "name": "C1D1VisitDateConsentDate",
                "field": "visit_date",
                "message": "Visit date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                "code": [
                  "var tpVisits = [];",
                  "if(parent.Visits){",
                  "  tpVisits = parent.Visits.filter(function(x){ return x.visit_type === 'Treatment period visit'});",
                  "}",
                  "if(item.visit_date && tpVisits.indexOf(item) === 0){",
                  "  var consent = parent.Visits.filter(function(x){ return x.BaselineCovariates && x.BaselineCovariates.consent_date });",
                  "  if(consent.length > 0){",
                  "    var consent_date = consent[0].BaselineCovariates.consent_date;",
                  "    var dateZero = new Date(consent_date);",
                  "    dateZero.setHours(0,0,0,0);",
                  "    var date = new Date(item.visit_date);",
                  "    date.setHours(0,0,0,0);",
                  "    dateZero <= date && date < addDays(consent_date, 30);",
                  "  }else{",
                  "    true;",
                  "  }",
                  "}else{",
                  "  true;",
                  "}"
                ]
              },
              {
                "name": "unscheduledAndDoseGTEConsent",
                "field": "visit_date",
                "message": "Visit date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                "code": [
                  "var tpVisits = [];",
                  "if(parent.Visits){",
                  "  tpVisits = parent.Visits.filter(function(x){ return x.visit_type === 'Treatment period visit'; });",
                  "}",
                  "if(item.visit_date && ['Unscheduled visit', 'Dose adjustment by phone'].indexOf(item.visit_type) >= 0 && tpVisits.length > 0){",
                  "  var c1d1 = tpVisits[0].visit_date;",
                  "  dateCompare(c1d1, '<=', item.visit_date);",
                  "}else{",
                  "  true;",
                  "}"
                ]
              },
              {
                "name": "EOTGTElastTPVisit",
                "field": "visit_date",
                "message": "Visit date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                "code": [
                  "var tpVisits = [];",
                  "if(parent.Visits){",
                  "  tpVisits = parent.Visits.filter(function(x){ return x.visit_type === 'Treatment period visit'});",
                  "}",
                  "if(item.visit_date && item.visit_type === 'End-of-treatment (EoT) visit' && tpVisits.length > 0){",
                  "  var lastTP = tpVisits[tpVisits.length -1].visit_date;",
                  "  dateCompare(lastTP, '<=', item.visit_date);",
                  "}else{",
                  "  true;",
                  "}"
                ]
              },
              {
                "name": "EOSGTEOT",
                "field": "visit_date",
                "message": "Visit date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                "code": [
                  "var eotVisits = [];",
                  "if(parent.Visits){",
                  "  eotVisits = parent.Visits.filter(function(x){ return x.visit_type === 'End-of-treatment (EoT) visit'});",
                  "}",
                  "if(item.visit_date && item.visit_type === 'End-of-study (EoS) visit' && eotVisits.length > 0){",
                  "  var lastTP = eotVisits[0].visit_date;",
                  "  dateCompare(lastTP, '<', item.visit_date);",
                  "}else{",
                  "  true;",
                  "}"
                ]
              },
              {
                "name": "CxDyWarnings",
                "field": "visit_date",
                "message": "Visit date appears to deviate from study calendar. Please check your entry and correct if needed before proceeding.",
                "code": [
                  "var cycleDay = getCycleDay(item, parent);",
                  "var dIndex = cycleDay.indexOf('D');",
                  "if(cycleDay[cycleDay.length - 1] === '1'){",
                  "  true;",
                  "}else{",
                  "  var limit = { ",
                  "    '8':{'lower': 4, 'upper': 10},",
                  "    '15':{'lower': 11, 'upper': 17},",
                  "    '22':{'lower': 18, 'upper': 24},",
                  "  };",
                  "  var date = new Date(item.visit_date);",
                  "  date.setHours(0,0,0,0);",
                  "  var c = cycleDay.substr(1, dIndex-1);",
                  "  var d = cycleDay.slice(dIndex+1);",
                  "  var cxd1 = parent.Visits.filter(function(x){ return x.cycle_day_c === c && x.cycle_day_d === '1'})[0];",
                  "  if(cxd1){",
                  "    addDays(cxd1.visit_date, limit[d].lower) <= date && date <= addDays(cxd1.visit_date, limit[d].upper);",
                  "  }",
                  "}"
                ]
              }
            ],
            "hooks": [
              {
                "action": "afterComment",
                "roles": [ "central_monitor" ],
                "code": [
                  "if (item.isDirty()) {",
                  "  [{",
                  "    type: 'event',",
                  "    args: {",
                  "      event: 'email',",
                  "      eventName: 'sendCommentSubmittedEmail',",
                  "      data: {",
                  "        roles: [ 'site1_entry' ],",
                  "        notificationName: 'monitorCommented',",
                  "        from: 'noreply@vanderbilt.edu',",
                  "        bodyOpts: {",
                  "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/visits/'+item.id.toString()",
                  "        }",
                  "      }",
                  "    }",
                  "  }]",
                  "}"
                ]
              },
              {
                "action": "afterComment",
                "roles": [ "site1_entry" ],
                "code": [
                  "if (item.isDirty()) {",
                  "  [{",
                  "    type: 'event',",
                  "    args: {",
                  "      event: 'email',",
                  "      eventName: 'sendCommentSubmittedEmail',",
                  "      data: {",
                  "        roles: [ 'central_monitor' ],",
                  "        notificationName: 'entryCommented',",
                  "        from: 'noreply@vanderbilt.edu',",
                  "        bodyOpts: {",
                  "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/visits/'+item.id.toString()",
                  "        }",
                  "      }",
                  "    }",
                  "  }]",
                  "}"
                ]
              }
            ],
            "events": [
              {
                "name": "sendCommentSubmittedEmail",
                "code": [
                  "var mailerOpts = {",
                  "  to: data.opts.to,",
                  "  from: data.opts.from,",
                  "  bodyOpts: data.opts.bodyOpts",
                  "};",
                  "data.mailer.set(mailerOpts);",
                  "data.mailer.send();"
                ]
              }
            ],
            "notifications": [
              {
                "type": "email",
                "name": "monitorCommented",
                "subject": "HEM1538 EDC Query submitted",
                "body": "A query has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
              },
              {
                "type": "email",
                "name": "entryCommented",
                "subject": "Site entry user comment submitted",
                "body": "A query response has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
              },
              {
                "type": "display",
                "name": "create",
                "body": "Visit was saved successfully"
              },
              {
                "type": "display",
                "name": "update",
                "body": "Visit was saved successfully"
              },
              {
                "type": "display",
                "name": "delete",
                "body": "Visit was deleted successfully"
              }
            ],
            "permissions": [
              {
                "roles": [ "site1_read", "site1_pi", "site1_restricted" ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Vanderbilt'"
                }
              },
              {
                "roles": [ "site2_read", "site2_pi", "site2_restricted" ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 2'"
                }
              },
              {
                "roles": [ "site3_read", "site3_pi", "site3_restricted" ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 3'"
                }
              },
              {
                "roles": [ "site4_read", "site4_pi", "site4_restricted" ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 4'"
                }
              },
              {
                "roles": [ "site5_read", "site5_pi", "site5_restricted" ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 5'"
                }
              },
              {
                "roles": [ "site1_entry" ],
                "modes": [ "read", "update", "delete", "comment" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Vanderbilt'"
                }
              },
              {
                "roles": [ "site2_entry" ],
                "modes": [ "read", "update", "delete", "comment" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 2'"
                }
              },
              {
                "roles": [ "site3_entry" ],
                "modes": [ "read", "update", "delete", "comment" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 3'"
                }
              },
              {
                "roles": [ "site4_entry" ],
                "modes": [ "read", "update", "delete", "comment" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 4'"
                }
              },
              {
                "roles": [ "site5_entry" ],
                "modes": [ "read", "update", "delete", "comment" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 5'"
                }
              },
              {
                "roles": [
                  "central_entry",
                  "central_monitor",
                  "central_read",
                  "central_pi",
                  "central_restricted"
                ],
                "modes": [ "read" ],
                "matches": { "when": "always" }
              },
              {
                "roles": [ "central_monitor" ],
                "modes": [ "verify", "comment" ],
                "matches": { "when": "always" }
              }
            ],
            "repeatable": true,
            "verifiable": { "type": "local" },
            "commentable": true
          },
          {
            "name": "MedicalHistories",
            "children": [
              {
                "name": "description",
                "label": "Narrative description of condition",
                "type": "string",
                "required": { "when": "always" }
              },
              {
                "name": "ongoing",
                "label": "Is this an ongoing condition/occurrence?",
                "type": "string",
                "required": { "when": "always" },
                "enum": [ "Yes", "No" ]
              },
              {
                "name": "start_date",
                "label": "Start date of condition/occurrence",
                "type": "string",
                "required": { "when": "always" },
                "validate": {
                  "name": "medHisStartDateValid",
                  "message": "is not a valid date",
                  "code": "dateValid(value, '9999-99-99')"
                },
                "permissions": [
                  {
                    "roles": [ "site1_read", "site1_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Vanderbilt'"
                    }
                  },
                  {
                    "roles": [ "site1_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Vanderbilt'"
                    }
                  },
                  {
                    "roles": [ "site2_read", "site2_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 2'"
                    }
                  },
                  {
                    "roles": [ "site2_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 2'"
                    }
                  },
                  {
                    "roles": [ "site3_read", "site3_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 3'"
                    }
                  },
                  {
                    "roles": [ "site3_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 3'"
                    }
                  },
                  {
                    "roles": [ "site4_read", "site4_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 4'"
                    }
                  },
                  {
                    "roles": [ "site4_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 4'"
                    }
                  },
                  {
                    "roles": [ "site5_read", "site5_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 5'"
                    }
                  },
                  {
                    "roles": [ "site5_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 5'"
                    }
                  },
                  {
                    "roles": [ "central_entry" ],
                    "modes": [ "read", "delete" ],
                    "matches": { "when": "always" }
                  },
                  {
                    "roles": [ "central_monitor", "central_read" ],
                    "modes": [ "read" ],
                    "matches": { "when": "always" }
                  }
                ]
              },
              {
                "name": "end_date",
                "label": "End date of condition/occurrence",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.ongoing === 'No';"
                },
                "validate": {
                  "name": "medHisEndDateValid",
                  "message": "is not a valid date",
                  "code": "dateValid(value, '9999-99-99')"
                },
                "permissions": [
                  {
                    "roles": [ "site1_read", "site1_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Vanderbilt'"
                    }
                  },
                  {
                    "roles": [ "site1_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Vanderbilt'"
                    }
                  },
                  {
                    "roles": [ "site2_read", "site2_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 2'"
                    }
                  },
                  {
                    "roles": [ "site2_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 2'"
                    }
                  },
                  {
                    "roles": [ "site3_read", "site3_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 3'"
                    }
                  },
                  {
                    "roles": [ "site3_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 3'"
                    }
                  },
                  {
                    "roles": [ "site4_read", "site4_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 4'"
                    }
                  },
                  {
                    "roles": [ "site4_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 4'"
                    }
                  },
                  {
                    "roles": [ "site5_read", "site5_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 5'"
                    }
                  },
                  {
                    "roles": [ "site5_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 5'"
                    }
                  },
                  {
                    "roles": [ "central_entry" ],
                    "modes": [ "read", "delete" ],
                    "matches": { "when": "always" }
                  },
                  {
                    "roles": [ "central_monitor", "central_read" ],
                    "modes": [ "read" ],
                    "matches": { "when": "always" }
                  }
                ]
              }
            ],
            "validations": [
              {
                "name": "startDateGTEBirth",
                "field": "start_date",
                "message": "must be after patient's date of birth",
                "code": [
                  "var screening = parent.Visits.filter(function(x){ return x.visit_type === 'Screening visit' });",
                  "if(screening.length > 0 && screening[0].BaselineCovariates && screening[0].BaselineCovariates.birth_date){",
                  "  dateCompare(screening[0].BaselineCovariates.birth_date, '<=', item.start_date)",
                  "}"
                ]
              },
              {
                "name": "endGTEStart",
                "field": "end_date",
                "message": "must be after start date",
                "code": "item.ongoing !== 'No' || dateCompare(item.end_date, '>=', item.start_date)"
              }
            ],
            "hooks": [
              {
                "action": "afterComment",
                "roles": [ "central_monitor" ],
                "code": [
                  "if (item.isDirty()) {",
                  "  [{",
                  "    type: 'event',",
                  "    args: {",
                  "      event: 'email',",
                  "      eventName: 'sendCommentSubmittedEmail',",
                  "      data: {",
                  "        roles: [ 'site1_entry' ],",
                  "        notificationName: 'monitorCommented',",
                  "        from: 'noreply@vanderbilt.edu',",
                  "        bodyOpts: {",
                  "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/medicalhistories/'+item.id.toString()",
                  "        }",
                  "      }",
                  "    }",
                  "  }]",
                  "}"
                ]
              },
              {
                "action": "afterComment",
                "roles": [ "site1_entry" ],
                "code": [
                  "if (item.isDirty()) {",
                  "  [{",
                  "    type: 'event',",
                  "    args: {",
                  "      event: 'email',",
                  "      eventName: 'sendCommentSubmittedEmail',",
                  "      data: {",
                  "        roles: [ 'central_monitor' ],",
                  "        notificationName: 'entryCommented',",
                  "        from: 'noreply@vanderbilt.edu',",
                  "        bodyOpts: {",
                  "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/medicalhistories/'+item.id.toString()",
                  "        }",
                  "      }",
                  "    }",
                  "  }]",
                  "}"
                ]
              }
            ],
            "events": [
              {
                "name": "sendCommentSubmittedEmail",
                "code": [
                  "var mailerOpts = {",
                  "  to: data.opts.to,",
                  "  from: data.opts.from,",
                  "  bodyOpts: data.opts.bodyOpts",
                  "};",
                  "data.mailer.set(mailerOpts);",
                  "data.mailer.send();"
                ]
              }
            ],
            "notifications": [
              {
                "type": "email",
                "name": "monitorCommented",
                "subject": "HEM1538 EDC Query submitted",
                "body": "A query has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
              },
              {
                "type": "email",
                "name": "entryCommented",
                "subject": "Site entry user comment submitted",
                "body": "A query response has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
              },
              {
                "type": "display",
                "name": "create",
                "body": "Medical history was saved successfully"
              },
              {
                "type": "display",
                "name": "update",
                "body": "Medical history was saved successfully"
              },
              {
                "type": "display",
                "name": "delete",
                "body": "Medical history was deleted successfully"
              }
            ],
            "permissions": [
              {
                "roles": [ "site1_read", "site1_pi", "site1_restricted" ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Vanderbilt'"
                }
              },
              {
                "roles": [ "site2_read", "site2_pi", "site2_restricted" ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 2'"
                }
              },
              {
                "roles": [ "site3_read", "site3_pi", "site3_restricted" ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 3'"
                }
              },
              {
                "roles": [ "site4_read", "site4_pi", "site4_restricted" ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 4'"
                }
              },
              {
                "roles": [ "site5_read", "site5_pi", "site5_restricted" ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 5'"
                }
              },
              {
                "roles": [ "site1_entry" ],
                "modes": [ "read", "update", "delete", "comment" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Vanderbilt'"
                }
              },
              {
                "roles": [ "site2_entry" ],
                "modes": [ "read", "update", "delete", "comment" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 2'"
                }
              },
              {
                "roles": [ "site3_entry" ],
                "modes": [ "read", "update", "delete", "comment" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 3'"
                }
              },
              {
                "roles": [ "site4_entry" ],
                "modes": [ "read", "update", "delete", "comment" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 4'"
                }
              },
              {
                "roles": [ "site5_entry" ],
                "modes": [ "read", "update", "delete", "comment" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 5'"
                }
              },
              {
                "roles": [
                  "central_entry",
                  "central_monitor",
                  "central_read",
                  "central_pi",
                  "central_restricted"
                ],
                "modes": [ "read" ],
                "matches": { "when": "always" }
              },
              {
                "roles": [ "central_monitor" ],
                "modes": [ "verify", "comment" ],
                "matches": { "when": "always" }
              }
            ],
            "repeatable": true,
            "draftable": true,
            "verifiable": { "type": "local" },
            "commentable": true
          },
          {
            "name": "Comments",
            "children": [
              {
                "name": "date",
                "label": "Date",
                "type": "string",
                "required": { "when": "always" },
                "validate": {
                  "name": "dateValid",
                  "message": "is not a valid date",
                  "code": "dateValid(value, 'YYYY-MM-DD');"
                },
                "permissions": [
                  {
                    "roles": [ "site1_read", "site1_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Vanderbilt'"
                    }
                  },
                  {
                    "roles": [ "site1_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Vanderbilt'"
                    }
                  },
                  {
                    "roles": [ "site2_read", "site2_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 2'"
                    }
                  },
                  {
                    "roles": [ "site2_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 2'"
                    }
                  },
                  {
                    "roles": [ "site3_read", "site3_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 3'"
                    }
                  },
                  {
                    "roles": [ "site3_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 3'"
                    }
                  },
                  {
                    "roles": [ "site4_read", "site4_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 4'"
                    }
                  },
                  {
                    "roles": [ "site4_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 4'"
                    }
                  },
                  {
                    "roles": [ "site5_read", "site5_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 5'"
                    }
                  },
                  {
                    "roles": [ "site5_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 5'"
                    }
                  },
                  {
                    "roles": [ "central_entry" ],
                    "modes": [ "read", "delete" ],
                    "matches": { "when": "always" }
                  },
                  {
                    "roles": [ "central_monitor", "central_read" ],
                    "modes": [ "read" ],
                    "matches": { "when": "always" }
                  }
                ]
              },
              {
                "name": "comment",
                "label": "Comment",
                "type": "string",
                "required": { "when": "always" }
              },
              {
                "name": "enteredBy",
                "label": "Comment entered by",
                "type": "string"
              }
            ],
            "hooks": [
              {
                "action": "afterComment",
                "roles": [ "central_monitor" ],
                "code": [
                  "if (item.isDirty()) {",
                  "  [{",
                  "    type: 'event',",
                  "    args: {",
                  "      event: 'email',",
                  "      eventName: 'sendCommentSubmittedEmail',",
                  "      data: {",
                  "        roles: [ 'site1_entry' ],",
                  "        notificationName: 'monitorCommented',",
                  "        from: 'noreply@vanderbilt.edu',",
                  "        bodyOpts: {",
                  "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/comments/'+item.id.toString()",
                  "        }",
                  "      }",
                  "    }",
                  "  }]",
                  "}"
                ]
              },
              {
                "action": "afterComment",
                "roles": [ "site1_entry" ],
                "code": [
                  "if (item.isDirty()) {",
                  "  [{",
                  "    type: 'event',",
                  "    args: {",
                  "      event: 'email',",
                  "      eventName: 'sendCommentSubmittedEmail',",
                  "      data: {",
                  "        roles: [ 'central_monitor' ],",
                  "        notificationName: 'entryCommented',",
                  "        from: 'noreply@vanderbilt.edu',",
                  "        bodyOpts: {",
                  "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/comments/'+item.id.toString()",
                  "        }",
                  "      }",
                  "    }",
                  "  }]",
                  "}"
                ]
              }
            ],
            "events": [
              {
                "name": "sendCommentSubmittedEmail",
                "code": [
                  "var mailerOpts = {",
                  "  to: data.opts.to,",
                  "  from: data.opts.from,",
                  "  bodyOpts: data.opts.bodyOpts",
                  "};",
                  "data.mailer.set(mailerOpts);",
                  "data.mailer.send();"
                ]
              }
            ],
            "notifications": [
              {
                "type": "email",
                "name": "monitorCommented",
                "subject": "HEM1538 EDC Query submitted",
                "body": "A query has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
              },
              {
                "type": "email",
                "name": "entryCommented",
                "subject": "Site entry user comment submitted",
                "body": "A query response has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
              },
              {
                "type": "display",
                "name": "create",
                "body": "Comment was saved successfully"
              },
              {
                "type": "display",
                "name": "update",
                "body": "Comment was saved successfully"
              },
              {
                "type": "display",
                "name": "delete",
                "body": "Comment was deleted successfully"
              }
            ],
            "permissions": [
              {
                "roles": [ "site1_read", "site1_pi", "site1_restricted" ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Vanderbilt'"
                }
              },
              {
                "roles": [ "site2_read", "site2_pi", "site2_restricted" ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 2'"
                }
              },
              {
                "roles": [ "site3_read", "site3_pi", "site3_restricted" ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 3'"
                }
              },
              {
                "roles": [ "site4_read", "site4_pi", "site4_restricted" ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 4'"
                }
              },
              {
                "roles": [ "site5_read", "site5_pi", "site5_restricted" ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 5'"
                }
              },
              {
                "roles": [ "site1_entry" ],
                "modes": [ "read", "update", "delete", "comment" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Vanderbilt'"
                }
              },
              {
                "roles": [ "site2_entry" ],
                "modes": [ "read", "update", "delete", "comment" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 2'"
                }
              },
              {
                "roles": [ "site3_entry" ],
                "modes": [ "read", "update", "delete", "comment" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 3'"
                }
              },
              {
                "roles": [ "site4_entry" ],
                "modes": [ "read", "update", "delete", "comment" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 4'"
                }
              },
              {
                "roles": [ "site5_entry" ],
                "modes": [ "read", "update", "delete", "comment" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 5'"
                }
              },
              {
                "roles": [
                  "central_entry",
                  "central_monitor",
                  "central_read",
                  "central_pi",
                  "central_restricted"
                ],
                "modes": [ "read" ],
                "matches": { "when": "always" }
              },
              {
                "roles": [ "central_monitor" ],
                "modes": [ "verify", "comment" ],
                "matches": { "when": "always" }
              }
            ],
            "repeatable": true,
            "draftable": true,
            "verifiable": { "type": "local" },
            "commentable": true
          },
          {
            "name": "Deviations",
            "children": [
              {
                "name": "category",
                "label": "Category",
                "type": "string",
                "required": { "when": "always" },
                "enum": [
                  "Consent",
                  "Eligibility",
                  "Pharmacy",
                  "Response/outcome",
                  "Scheduled test",
                  "Specimen collection",
                  "Specimen kit preparation",
                  "Specimen processing",
                  "Specimen variation",
                  "Treatment",
                  "Other"
                ]
              },
              {
                "name": "description",
                "label": "Deviation description",
                "type": "string",
                "required": { "when": "always" }
              },
              {
                "name": "deviation_date",
                "label": "Date of deviation",
                "type": "string",
                "required": { "when": "always" },
                "validate": {
                  "name": "deviationDateValid",
                  "message": "is not a valid date",
                  "code": "dateValid(value, 'YYYY-MM-DD')"
                },
                "permissions": [
                  {
                    "roles": [ "site1_read", "site1_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Vanderbilt'"
                    }
                  },
                  {
                    "roles": [ "site1_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Vanderbilt'"
                    }
                  },
                  {
                    "roles": [ "site2_read", "site2_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 2'"
                    }
                  },
                  {
                    "roles": [ "site2_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 2'"
                    }
                  },
                  {
                    "roles": [ "site3_read", "site3_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 3'"
                    }
                  },
                  {
                    "roles": [ "site3_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 3'"
                    }
                  },
                  {
                    "roles": [ "site4_read", "site4_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 4'"
                    }
                  },
                  {
                    "roles": [ "site4_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 4'"
                    }
                  },
                  {
                    "roles": [ "site5_read", "site5_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 5'"
                    }
                  },
                  {
                    "roles": [ "site5_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 5'"
                    }
                  },
                  {
                    "roles": [ "central_entry" ],
                    "modes": [ "read", "delete" ],
                    "matches": { "when": "always" }
                  },
                  {
                    "roles": [ "central_monitor", "central_read" ],
                    "modes": [ "read" ],
                    "matches": { "when": "always" }
                  }
                ]
              },
              {
                "name": "discovered_date",
                "label": "Date discovered",
                "type": "string",
                "required": { "when": "always" },
                "validate": {
                  "name": "discoveredDateValid",
                  "message": "is not a valid date",
                  "code": "dateValid(value, 'YYYY-MM-DD')"
                },
                "permissions": [
                  {
                    "roles": [ "site1_read", "site1_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Vanderbilt'"
                    }
                  },
                  {
                    "roles": [ "site1_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Vanderbilt'"
                    }
                  },
                  {
                    "roles": [ "site2_read", "site2_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 2'"
                    }
                  },
                  {
                    "roles": [ "site2_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 2'"
                    }
                  },
                  {
                    "roles": [ "site3_read", "site3_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 3'"
                    }
                  },
                  {
                    "roles": [ "site3_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 3'"
                    }
                  },
                  {
                    "roles": [ "site4_read", "site4_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 4'"
                    }
                  },
                  {
                    "roles": [ "site4_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 4'"
                    }
                  },
                  {
                    "roles": [ "site5_read", "site5_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 5'"
                    }
                  },
                  {
                    "roles": [ "site5_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 5'"
                    }
                  },
                  {
                    "roles": [ "central_entry" ],
                    "modes": [ "read", "delete" ],
                    "matches": { "when": "always" }
                  },
                  {
                    "roles": [ "central_monitor", "central_read" ],
                    "modes": [ "read" ],
                    "matches": { "when": "always" }
                  }
                ]
              },
              {
                "name": "reported_by",
                "label": "Reported by",
                "type": "string",
                "required": { "when": "always" }
              },
              {
                "name": "effect_on_patient_safety",
                "label": "Effect on patient safety",
                "type": "string",
                "required": { "when": "always" }
              },
              {
                "name": "action_taken",
                "label": "Action taken",
                "type": "string",
                "required": { "when": "always" }
              },
              {
                "name": "did_increased_risk_or_negatively_affect",
                "label": "Did the deviation put the participant or others at increased risk and/or negatively affect the primary study aims?",
                "type": "string",
                "required": { "when": "always" },
                "enum": [ "Yes", "No" ]
              },
              {
                "name": "report_to_irb",
                "label": "Report to IRB?",
                "type": "string",
                "required": { "when": "always" },
                "enum": [
                  "Yes, immediately",
                  "Yes, at next continuing review",
                  "No, IRB report not applicable"
                ]
              },
              {
                "name": "report_to_irb_date",
                "label": "Date reported to IRB",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "item.report_to_irb !== undefined && item.report_to_irb.search('Yes') >= 0;"
                },
                "permissions": [
                  {
                    "roles": [ "site1_read", "site1_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Vanderbilt'"
                    }
                  },
                  {
                    "roles": [ "site1_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Vanderbilt'"
                    }
                  },
                  {
                    "roles": [ "site2_read", "site2_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 2'"
                    }
                  },
                  {
                    "roles": [ "site2_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 2'"
                    }
                  },
                  {
                    "roles": [ "site3_read", "site3_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 3'"
                    }
                  },
                  {
                    "roles": [ "site3_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 3'"
                    }
                  },
                  {
                    "roles": [ "site4_read", "site4_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 4'"
                    }
                  },
                  {
                    "roles": [ "site4_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 4'"
                    }
                  },
                  {
                    "roles": [ "site5_read", "site5_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 5'"
                    }
                  },
                  {
                    "roles": [ "site5_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 5'"
                    }
                  },
                  {
                    "roles": [ "central_entry" ],
                    "modes": [ "read", "delete" ],
                    "matches": { "when": "always" }
                  },
                  {
                    "roles": [ "central_monitor", "central_read" ],
                    "modes": [ "read" ],
                    "matches": { "when": "always" }
                  }
                ]
              },
              {
                "name": "sponsor_notification",
                "label": "Sponsor notification",
                "type": "string",
                "required": { "when": "always" },
                "enum": [
                  "Initial notification of study sponsor will be by submission of this eCRF.",
                  "Initial notification of study sponsor already has taken place by phone, email, or other means."
                ]
              },
              {
                "name": "sponsor_notification_initial_date",
                "label": "Date of INITIAL sponsor notification",
                "type": "string",
                "required": {
                  "when": "conditionally",
                  "code": "(item.sponsor_notification !== undefined) && (item.did_increased_risk_or_negatively_affect === 'Yes' || item.sponsor_notification.search('eCRF') >= 0)"
                },
                "permissions": [
                  {
                    "roles": [ "site1_read", "site1_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Vanderbilt'"
                    }
                  },
                  {
                    "roles": [ "site1_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Vanderbilt'"
                    }
                  },
                  {
                    "roles": [ "site2_read", "site2_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 2'"
                    }
                  },
                  {
                    "roles": [ "site2_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 2'"
                    }
                  },
                  {
                    "roles": [ "site3_read", "site3_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 3'"
                    }
                  },
                  {
                    "roles": [ "site3_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 3'"
                    }
                  },
                  {
                    "roles": [ "site4_read", "site4_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 4'"
                    }
                  },
                  {
                    "roles": [ "site4_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 4'"
                    }
                  },
                  {
                    "roles": [ "site5_read", "site5_pi" ],
                    "modes": [ "read" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 5'"
                    }
                  },
                  {
                    "roles": [ "site5_entry" ],
                    "modes": [ "read", "update" ],
                    "matches": {
                      "when": "conditionally",
                      "code": "top.site_name === 'Site 5'"
                    }
                  },
                  {
                    "roles": [ "central_entry" ],
                    "modes": [ "read", "delete" ],
                    "matches": { "when": "always" }
                  },
                  {
                    "roles": [ "central_monitor", "central_read" ],
                    "modes": [ "read" ],
                    "matches": { "when": "always" }
                  }
                ]
              }
            ],
            "validations": [
              {
                "name": "discoverDateGTEDeviationDate",
                "field": "discovered_date",
                "message": "must be after date of deviation",
                "code": "dateCompare(item.discovered_date, '>=', item.deviation_date)"
              },
              {
                "name": "reportIRBDateValid",
                "field": "report_to_irb_date",
                "message": "is not a valid date",
                "code": "(item.report_to_irb && item.report_to_irb.search('Yes') < 0) || dateValid(item.report_to_irb_date, 'YYYY-MM-DD')"
              },
              {
                "name": "sponsorNotificationDateValid",
                "field": "sponsor_notification_initial_date",
                "message": "is not a valid date",
                "code": "!item.sponsor_notification_initial_date || dateValid(item.sponsor_notification_initial_date, 'YYYY-MM-DD')"
              },
              {
                "name": "reportToIRBDateGTEDiscoveredDate",
                "field": "report_to_irb_date",
                "message": "must be after date of discovery",
                "code": "!item.report_to_irb_date || dateCompare(item.report_to_irb_date, '>=', item.discovered_date)"
              },
              {
                "name": "sponsorNotificationDateGTEDiscoveredDate",
                "field": "sponsor_notification_initial_date",
                "message": "must be after date of discovery",
                "code": "!item.sponsor_notification_initial_date || dateCompare(item.sponsor_notification_initial_date, '>=', item.discovered_date)"
              }
            ],
            "hooks": [
              {
                "action": "afterSave",
                "code": [
                  "if(item.isNew() || item.isDirty()){",
                  "  [{",
                  "    type: 'event',",
                  "    args: {",
                  "      event: 'email',",
                  "      eventName: 'sendDeviationEmail',",
                  "      data: {",
                  "        notificationName: 'deviationSaved',",
                  "        to: 'coordinating.center@vanderbilt.edu',",
                  "        from: 'noreply@vanderbilt.edu',",
                  "        subjectOpts: {",
                  "          action: (item.isNew() ? 'submitted' : 'updated'),",
                  "        },",
                  "        bodyOpts: {",
                  "          descriptor: (item.isNew() ? 'new' : ''),",
                  "          action: (item.isNew() ? 'submitted' : 'updated'),",
                  "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/deviations/'+item.id.toString()",
                  "        }",
                  "      }",
                  "    }",
                  "  }]",
                  "}"
                ]
              },
              {
                "action": "afterComment",
                "roles": [ "central_monitor" ],
                "code": [
                  "if (item.isDirty()) {",
                  "  [{",
                  "    type: 'event',",
                  "    args: {",
                  "      event: 'email',",
                  "      eventName: 'sendCommentSubmittedEmail',",
                  "      data: {",
                  "        roles: [ 'site1_entry' ],",
                  "        notificationName: 'monitorCommented',",
                  "        from: 'noreply@vanderbilt.edu',",
                  "        bodyOpts: {",
                  "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/deviations/'+item.id.toString()",
                  "        }",
                  "      }",
                  "    }",
                  "  }]",
                  "}"
                ]
              },
              {
                "action": "afterComment",
                "roles": [ "site1_entry" ],
                "code": [
                  "if (item.isDirty()) {",
                  "  [{",
                  "    type: 'event',",
                  "    args: {",
                  "      event: 'email',",
                  "      eventName: 'sendCommentSubmittedEmail',",
                  "      data: {",
                  "        roles: [ 'central_monitor' ],",
                  "        notificationName: 'entryCommented',",
                  "        from: 'noreply@vanderbilt.edu',",
                  "        bodyOpts: {",
                  "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/deviations/'+item.id.toString()",
                  "        }",
                  "      }",
                  "    }",
                  "  }]",
                  "}"
                ]
              }
            ],
            "events": [
              {
                "name": "sendDeviationEmail",
                "code": [
                  "var bodyOpts = {};",
                  "for (var attr in data.opts.bodyOpts) {",
                  "  bodyOpts[attr] = data.opts.bodyOpts[attr];",
                  "}",
                  "var mailerOpts = {",
                  "  to: data.opts.to,",
                  "  from: data.opts.from,",
                  "  subjectOpts: data.opts.subjectOpts,",
                  "  bodyOpts: bodyOpts",
                  "};",
                  "data.mailer.set(mailerOpts);",
                  "data.mailer.send();"
                ]
              },
              {
                "name": "sendCommentSubmittedEmail",
                "code": [
                  "var mailerOpts = {",
                  "  to: data.opts.to,",
                  "  from: data.opts.from,",
                  "  bodyOpts: data.opts.bodyOpts",
                  "};",
                  "data.mailer.set(mailerOpts);",
                  "data.mailer.send();"
                ]
              }
            ],
            "notifications": [
              {
                "type": "email",
                "name": "monitorCommented",
                "subject": "HEM1538 EDC Query submitted",
                "body": "A query has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
              },
              {
                "type": "email",
                "name": "entryCommented",
                "subject": "Site entry user comment submitted",
                "body": "A query response has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
              },
              {
                "type": "display",
                "name": "create",
                "body": "Deviation was saved successfully"
              },
              {
                "type": "display",
                "name": "update",
                "body": "Deviation was saved successfully"
              },
              {
                "type": "display",
                "name": "delete",
                "body": "Deviation was deleted successfully"
              },
              {
                "type": "email",
                "name": "deviationSaved",
                "subject": "HEM1538: Deviation {{action}}",
                "body": "A {{descriptor}} deviation has been {{action}} in the HEM1538 EDC. Please review deviation at this link: {{& link}}"
              }
            ],
            "permissions": [
              {
                "roles": [ "site1_read", "site1_pi", "site1_restricted" ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Vanderbilt'"
                }
              },
              {
                "roles": [ "site2_read", "site2_pi", "site2_restricted" ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 2'"
                }
              },
              {
                "roles": [ "site3_read", "site3_pi", "site3_restricted" ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 3'"
                }
              },
              {
                "roles": [ "site4_read", "site4_pi", "site4_restricted" ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 4'"
                }
              },
              {
                "roles": [ "site5_read", "site5_pi", "site5_restricted" ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 5'"
                }
              },
              {
                "roles": [ "site1_entry" ],
                "modes": [ "read", "update", "delete", "comment" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Vanderbilt'"
                }
              },
              {
                "roles": [ "site2_entry" ],
                "modes": [ "read", "update", "delete", "comment" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 2'"
                }
              },
              {
                "roles": [ "site3_entry" ],
                "modes": [ "read", "update", "delete", "comment" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 3'"
                }
              },
              {
                "roles": [ "site4_entry" ],
                "modes": [ "read", "update", "delete", "comment" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 4'"
                }
              },
              {
                "roles": [ "site5_entry" ],
                "modes": [ "read", "update", "delete", "comment" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 5'"
                }
              },
              {
                "roles": [
                  "central_entry",
                  "central_monitor",
                  "central_read",
                  "central_pi",
                  "central_restricted"
                ],
                "modes": [ "read" ],
                "matches": { "when": "always" }
              },
              {
                "roles": [ "central_monitor" ],
                "modes": [ "verify", "comment" ],
                "matches": { "when": "always" }
              }
            ],
            "repeatable": true,
            "draftable": true,
            "verifiable": { "type": "local" },
            "commentable": true
          },
          {
            "name": "AdverseEvents",
            "children": [
              {
                "name": "event",
                "component": "adverse_event",
                "verifiable": { "type": "local" },
                "commentable": true
              },
              {
                "name": "event_id",
                "type": "sequence",
                "sequence": {
                  "name": "event_id",
                  "applies": {
                    "when": "conditionally",
                    "code": "item.event.serious === 'Yes'"
                  }
                }
              },
              {
                "name": "Followups",
                "children": [
                  {
                    "name": "event",
                    "component": "adverse_event",
                    "verifiable": { "type": "local" },
                    "commentable": true
                  }
                ],
                "hooks": [
                  {
                    "action": "afterSave",
                    "code": [
                      "if(item.isNew()){",
                      "  [{",
                      "    type: 'event',",
                      "    args: {",
                      "      event: 'email',",
                      "      eventName: 'sendFollowupEmail',",
                      "      data: {",
                      "        notificationName: 'followupSaved',",
                      "        to: 'coordinating.center@vanderbilt.edu',",
                      "        from: 'noreply@vanderbilt.edu',",
                      "        subjectOpts: {",
                      "          action: 'submitted',",
                      "          eventType: 'followup'",
                      "        },",
                      "        bodyOpts: {",
                      "          descriptor: 'new',",
                      "          action: 'submitted',",
                      "          eventType: 'followup',",
                      "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/adverseevents/'+item.id.toString()",
                      "        }",
                      "      }",
                      "    }",
                      "  }]",
                      "}"
                    ]
                  },
                  {
                    "action": "afterComment",
                    "roles": [ "central_monitor" ],
                    "code": [
                      "if (item.event.isDirty()) {",
                      "  [{",
                      "    type: 'event',",
                      "    args: {",
                      "      event: 'email',",
                      "      eventName: 'sendCommentSubmittedEmail',",
                      "      data: {",
                      "        roles: [ 'site1_entry' ],",
                      "        notificationName: 'monitorCommented',",
                      "        from: 'noreply@vanderbilt.edu',",
                      "        bodyOpts: {",
                      "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/adverseevents/'+parent.id.toString()",
                      "        }",
                      "      }",
                      "    }",
                      "  }]",
                      "}"
                    ]
                  },
                  {
                    "action": "afterComment",
                    "roles": [ "site1_entry" ],
                    "code": [
                      "if (item.event.isDirty()) {",
                      "  [{",
                      "    type: 'event',",
                      "    args: {",
                      "      event: 'email',",
                      "      eventName: 'sendCommentSubmittedEmail',",
                      "      data: {",
                      "        roles: [ 'central_monitor' ],",
                      "        notificationName: 'entryCommented',",
                      "        from: 'noreply@vanderbilt.edu',",
                      "        bodyOpts: {",
                      "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/adverseevents/'+parent.id.toString()",
                      "        }",
                      "      }",
                      "    }",
                      "  }]",
                      "}"
                    ]
                  }
                ],
                "events": [
                  {
                    "name": "sendFollowupEmail",
                    "code": [
                      "var bodyOpts = { link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/123/adverseevents/123' };",
                      "for (var attr in data.opts.bodyOpts) {",
                      "  bodyOpts[attr] = data.opts.bodyOpts[attr];",
                      "}",
                      "var mailerOpts = {",
                      "  to: data.opts.to,",
                      "  from: data.opts.from,",
                      "  subjectOpts: data.opts.subjectOpts,",
                      "  bodyOpts: bodyOpts",
                      "};",
                      "data.mailer.set(mailerOpts);",
                      "data.mailer.send();"
                    ]
                  },
                  {
                    "name": "sendCommentSubmittedEmail",
                    "code": [
                      "var mailerOpts = {",
                      "  to: data.opts.to,",
                      "  from: data.opts.from,",
                      "  bodyOpts: data.opts.bodyOpts",
                      "};",
                      "data.mailer.set(mailerOpts);",
                      "data.mailer.send();"
                    ]
                  }
                ],
                "notifications": [
                  {
                    "type": "email",
                    "name": "monitorCommented",
                    "subject": "HEM1538 EDC Query submitted",
                    "body": "A query has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
                  },
                  {
                    "type": "email",
                    "name": "entryCommented",
                    "subject": "Site entry user comment submitted",
                    "body": "A query response has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
                  },
                  {
                    "type": "display",
                    "name": "create",
                    "body": "Followup was saved successfully"
                  },
                  {
                    "type": "display",
                    "name": "update",
                    "body": "Followup was saved successfully"
                  },
                  {
                    "type": "display",
                    "name": "delete",
                    "body": "Followup was deleted successfully"
                  },
                  {
                    "type": "email",
                    "name": "followupSaved",
                    "subject": "HEM1538: {{eventType}} {{action}}",
                    "body": "A {{eventType}} has been {{action}} in the HEM1538 trial EDC. Please review the {{eventType}} at this link: {{& link}}"
                  }
                ],
                "repeatable": true
              }
            ],
            "validations": [
              {
                "name": "firstFollowupDateValid",
                "field": "event.followup_date",
                "message": "must be after initial event",
                "code": [
                  "var result = true;",
                  "if(item.Followups && item.Followups.length > 0){",
                  "  var first = item.Followups[0];",
                  "  result =  dateCompare(first.event.followup_date, '>=', item.event.start_date);",
                  "}else{",
                  "  result = true;",
                  "}",
                  "result;"
                ]
              }
            ],
            "hooks": [
              {
                "action": "afterSave",
                "code": [
                  "if((item.isNew() || item.isDirty() || item.event.isDirty()) && (item.event.serious === 'Yes' || item.event.is_dlt === 'Yes')){",
                  "  [{",
                  "    type: 'event',",
                  "    args: {",
                  "      event: 'email',",
                  "      eventName: 'sendAdverseEventEmail',",
                  "      data: {",
                  "        notificationName: 'adverseEventSaved',",
                  "        to: 'coordinating.center@vanderbilt.edu',",
                  "        from: 'noreply@vanderbilt.edu',",
                  "        subjectOpts: {",
                  "          action: (item.isNew() ? 'submitted' : 'updated'),",
                  "          eventType: (item.event.serious === 'Yes' ? 'SAE' : 'DLT')",
                  "        },",
                  "        bodyOpts: {",
                  "          descriptor: (item.isNew() ? 'new' : ''),",
                  "          action: (item.isNew() ? 'submitted' : 'updated'),",
                  "          eventType: (item.event.serious === 'Yes' ? 'SAE' : 'DLT'),",
                  "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/adverseevents/'+item.id.toString()",
                  "        }",
                  "      }",
                  "    }",
                  "  }]",
                  "}"
                ]
              },
              {
                "action": "afterComment",
                "roles": [ "central_monitor" ],
                "code": [
                  "if (item.event.isDirty()) {",
                  "  [{",
                  "    type: 'event',",
                  "    args: {",
                  "      event: 'email',",
                  "      eventName: 'sendCommentSubmittedEmail',",
                  "      data: {",
                  "        roles: [ 'site1_entry' ],",
                  "        notificationName: 'monitorCommented',",
                  "        from: 'noreply@vanderbilt.edu',",
                  "        bodyOpts: {",
                  "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/adverseevents/'+item.id.toString()",
                  "        }",
                  "      }",
                  "    }",
                  "  }]",
                  "}"
                ]
              },
              {
                "action": "afterComment",
                "roles": [ "site1_entry" ],
                "code": [
                  "if (item.event.isDirty()) {",
                  "  [{",
                  "    type: 'event',",
                  "    args: {",
                  "      event: 'email',",
                  "      eventName: 'sendCommentSubmittedEmail',",
                  "      data: {",
                  "        roles: [ 'central_monitor' ],",
                  "        notificationName: 'entryCommented',",
                  "        from: 'noreply@vanderbilt.edu',",
                  "        bodyOpts: {",
                  "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()+'/adverseevents/'+item.id.toString()",
                  "        }",
                  "      }",
                  "    }",
                  "  }]",
                  "}"
                ]
              }
            ],
            "events": [
              {
                "name": "sendAdverseEventEmail",
                "code": [
                  "var bodyOpts = { link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/123/adverseevents/123' };",
                  "for (var attr in data.opts.bodyOpts) {",
                  "  bodyOpts[attr] = data.opts.bodyOpts[attr];",
                  "}",
                  "var mailerOpts = {",
                  "  to: data.opts.to,",
                  "  from: data.opts.from,",
                  "  subjectOpts: data.opts.subjectOpts,",
                  "  bodyOpts: bodyOpts",
                  "};",
                  "data.mailer.set(mailerOpts);",
                  "data.mailer.send();"
                ]
              },
              {
                "name": "sendCommentSubmittedEmail",
                "code": [
                  "var mailerOpts = {",
                  "  to: data.opts.to,",
                  "  from: data.opts.from,",
                  "  bodyOpts: data.opts.bodyOpts",
                  "};",
                  "data.mailer.set(mailerOpts);",
                  "data.mailer.send();"
                ]
              }
            ],
            "notifications": [
              {
                "type": "email",
                "name": "monitorCommented",
                "subject": "HEM1538 EDC Query submitted",
                "body": "A query has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
              },
              {
                "type": "email",
                "name": "entryCommented",
                "subject": "Site entry user comment submitted",
                "body": "A query response has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
              },
              {
                "type": "display",
                "name": "create",
                "body": "Adverse event was saved successfully"
              },
              {
                "type": "display",
                "name": "update",
                "body": "Adverse event was saved successfully"
              },
              {
                "type": "display",
                "name": "delete",
                "body": "Adverse event was deleted successfully"
              },
              {
                "type": "email",
                "name": "adverseEventSaved",
                "subject": "HEM1538: {{eventType}} {{action}}",
                "body": "A {{eventType}} has been {{action}} in the HEM1538 trial EDC. Please review the {{eventType}} at this link: {{& link}}"
              }
            ],
            "permissions": [
              {
                "roles": [ "site1_read", "site1_pi", "site1_restricted" ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Vanderbilt'"
                }
              },
              {
                "roles": [ "site2_read", "site2_pi", "site2_restricted" ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 2'"
                }
              },
              {
                "roles": [ "site3_read", "site3_pi", "site3_restricted" ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 3'"
                }
              },
              {
                "roles": [ "site4_read", "site4_pi", "site4_restricted" ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 4'"
                }
              },
              {
                "roles": [ "site5_read", "site5_pi", "site5_restricted" ],
                "modes": [ "read" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 5'"
                }
              },
              {
                "roles": [ "site1_entry" ],
                "modes": [ "read", "update", "delete", "comment" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Vanderbilt'"
                }
              },
              {
                "roles": [ "site2_entry" ],
                "modes": [ "read", "update", "delete", "comment" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 2'"
                }
              },
              {
                "roles": [ "site3_entry" ],
                "modes": [ "read", "update", "delete", "comment" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 3'"
                }
              },
              {
                "roles": [ "site4_entry" ],
                "modes": [ "read", "update", "delete", "comment" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 4'"
                }
              },
              {
                "roles": [ "site5_entry" ],
                "modes": [ "read", "update", "delete", "comment" ],
                "matches": {
                  "when": "conditionally",
                  "code": "top.site_name === 'Site 5'"
                }
              },
              {
                "roles": [
                  "central_entry",
                  "central_monitor",
                  "central_read",
                  "central_pi",
                  "central_restricted"
                ],
                "modes": [ "read" ],
                "matches": { "when": "always" }
              },
              {
                "roles": [ "central_monitor" ],
                "modes": [ "verify", "comment" ],
                "matches": { "when": "always" }
              }
            ],
            "repeatable": true
          }
        ],
        "validations": [
          {
            "name": "studyEnrollments1",
            "field": "visit_date",
            "message": "Visits must have sequential dates",
            "code": [
              "if(item.Visits && item.Visits.length > 0){",
              "  var visits = item.Visits.filter(function(v) { return ['Unscheduled visit', 'Dose adjustment by phone'].indexOf(v.visit_type) < 0; });",
              "  var results = [];",
              "  visits.forEach(function(visit, index){",
              "    if(index > 0 && visit.visit_date < visits[index-1].visit_date){",
              "      results.push(false);",
              "    }else{",
              "      results.push(true)",
              "    }",
              "  });",
              "  results.indexOf(false) < 0;",
              "}else{",
              "  true;",
              "}"
            ]
          },
          {
            "name": "concomStartDateGTEDOB",
            "field": "start_date",
            "message": "must be after patient's date of birth",
            "code": [
              "/*if(item.Visits && item.Visits.length > 0){",
              "  var baseline = item.Visits.filter(function(x){ return (x.visit_type === 'Screening visit' && x.BaselineCovariates && x.BaselineCovariates.birth_date)});",
              "  if(baseline.length > 0){",
              "    var DOB =  baseline[0].BaselineCovariates.birth_date;",
              "    var results = [];",
              "    for(var i= 0; i < item.ConcomitantMedications.length; i++){",
              "      results.push(dateCompare(item.ConcomitantMedications[i].start_date, '>=', DOB));",
              "    }",
              "    return !results.indexOf(false) >= 0;",
              "  }else{",
              "    return true;",
              "  }",
              "}else{",
              "  return true;",
              "}*/"
            ]
          },
          {
            "name": "medHisStartDateGTEDOB",
            "field": "start_date",
            "message": "must be after patient's date of birth",
            "code": [
              "/*if(item.Visits && item.Visits.length > 0){",
              "  var baseline = item.Visits.filter(function(x){ return x.visit_type === 'Screening visit' && x.BaselineCovariates && x.BaselineCovariates.birth_date });",
              "  if(baseline.length > 0){",
              "    var DOB =  baseline[0].BaselineCovariates.birth_date;",
              "    var results = [];",
              "    for(var i= 0; i < item.MedicalHistories.length; i++){",
              "      results.push(dateCompare(item.MedicalHistories[i].start_date, '>=', DOB));",
              "    }",
              "    return !results.indexOf(false) >= 0;",
              "  }else{",
              "    return true;",
              "  }",
              "}else{",
              "  return true;",
              "}*/"
            ]
          },
          {
            "name": "birthDateLTScreeningVisitDate",
            "field": "birth_date",
            "message": "date must be after patient's date of birth",
            "code": [
              "/*if(item.Visits && item.Visits.length > 0){",
              "  var baseline = item.Visits.filter(function(x){ return(x.BaselineCovariates && x.BaselineCovariates.birth_date)});",
              "  var screening = item.Visits.filter(function(x){ return x.visit_type === 'Screening visit' && x.visit_date });",
              "  if(baseline.length > 0 && screening.length > 0){",
              "    var DOB =  baseline[0].BaselineCovariates.birth_date;",
              "    var results = [];",
              "    for(var i= 0; i < screening.length; i++){",
              "      results.push(dateCompare(screening[i].visit_date, '>', DOB));",
              "    }",
              "    return results.indexOf(false) < 0;",
              "  }else{",
              "    return true;",
              "  }",
              "}else{",
              "  return true;",
              "}*/"
            ]
          }
        ],
        "hooks": [
          {
            "action": "afterComment",
            "roles": [ "central_monitor" ],
            "code": [
              "if (item.isDirty()) {",
              "  [{",
              "    type: 'event',",
              "    args: {",
              "      event: 'email',",
              "      eventName: 'sendCommentSubmittedEmail',",
              "      data: {",
              "        roles: [ 'site1_entry' ],",
              "        notificationName: 'monitorCommented',",
              "        from: 'noreply@vanderbilt.edu',",
              "        bodyOpts: {",
              "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()",
              "        }",
              "      }",
              "    }",
              "  }]",
              "}"
            ]
          },
          {
            "action": "afterComment",
            "roles": [ "site1_entry" ],
            "code": [
              "if (item.isDirty()) {",
              "  [{",
              "    type: 'event',",
              "    args: {",
              "      event: 'email',",
              "      eventName: 'sendCommentSubmittedEmail',",
              "      data: {",
              "        roles: [ 'central_monitor' ],",
              "        notificationName: 'entryCommented',",
              "        from: 'noreply@vanderbilt.edu',",
              "        bodyOpts: {",
              "          link: 'https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/'+topItem.id.toString()",
              "        }",
              "      }",
              "    }",
              "  }]",
              "}"
            ]
          }
        ],
        "events": [
          {
            "name": "sendCommentSubmittedEmail",
            "code": [
              "var mailerOpts = {",
              "  to: data.opts.to,",
              "  from: data.opts.from,",
              "  bodyOpts: data.opts.bodyOpts",
              "};",
              "data.mailer.set(mailerOpts);",
              "data.mailer.send();"
            ]
          }
        ],
        "notifications": [
          {
            "type": "email",
            "name": "monitorCommented",
            "subject": "HEM1538 EDC Query submitted",
            "body": "A query has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
          },
          {
            "type": "email",
            "name": "entryCommented",
            "subject": "Site entry user comment submitted",
            "body": "A query response has been submitted in the HEM1538 EDC. Please review and respond accordingly at this link: {{& link}}"
          },
          {
            "type": "display",
            "name": "create",
            "body": "Study enrollment was saved successfully"
          },
          {
            "type": "display",
            "name": "update",
            "body": "Study enrollment was saved successfully"
          },
          {
            "type": "display",
            "name": "delete",
            "body": "Study enrollment was deleted successfully"
          }
        ],
        "permissions": [
          {
            "roles": [ "site1_read", "site1_pi", "site1_restricted" ],
            "modes": [ "read" ],
            "matches": {
              "when": "conditionally",
              "code": "top.site_name === 'Vanderbilt'"
            }
          },
          {
            "roles": [ "site2_read", "site2_pi", "site2_restricted" ],
            "modes": [ "read" ],
            "matches": {
              "when": "conditionally",
              "code": "top.site_name === 'Site 2'"
            }
          },
          {
            "roles": [ "site3_read", "site3_pi", "site3_restricted" ],
            "modes": [ "read" ],
            "matches": {
              "when": "conditionally",
              "code": "top.site_name === 'Site 3'"
            }
          },
          {
            "roles": [ "site4_read", "site4_pi", "site4_restricted" ],
            "modes": [ "read" ],
            "matches": {
              "when": "conditionally",
              "code": "top.site_name === 'Site 4'"
            }
          },
          {
            "roles": [ "site5_read", "site5_pi", "site5_restricted" ],
            "modes": [ "read" ],
            "matches": {
              "when": "conditionally",
              "code": "top.site_name === 'Site 5'"
            }
          },
          {
            "roles": [ "site1_entry" ],
            "modes": [ "read", "update", "comment" ],
            "matches": {
              "when": "conditionally",
              "code": "top.site_name === 'Vanderbilt'"
            }
          },
          {
            "roles": [ "site2_entry" ],
            "modes": [ "read", "update", "comment" ],
            "matches": {
              "when": "conditionally",
              "code": "top.site_name === 'Site 2'"
            }
          },
          {
            "roles": [ "site3_entry" ],
            "modes": [ "read", "update", "comment" ],
            "matches": {
              "when": "conditionally",
              "code": "top.site_name === 'Site 3'"
            }
          },
          {
            "roles": [ "site4_entry" ],
            "modes": [ "read", "update", "comment" ],
            "matches": {
              "when": "conditionally",
              "code": "top.site_name === 'Site 4'"
            }
          },
          {
            "roles": [ "site5_entry" ],
            "modes": [ "read", "update", "comment" ],
            "matches": {
              "when": "conditionally",
              "code": "top.site_name === 'Site 5'"
            }
          },
          {
            "roles": [ "central_pi", "central_read", "central_restricted" ],
            "modes": [ "read" ],
            "matches": { "when": "always" }
          },
          {
            "roles": [ "central_pi" ],
            "modes": [ "e_sign" ],
            "matches": { "when": "always" }
          },
          {
            "roles": [ "site1_pi" ],
            "modes": [ "e_sign" ],
            "matches": {
              "when": "conditionally",
              "code": "top.site_name === 'Vanderbilt'"
            }
          },
          {
            "roles": [ "site2_pi" ],
            "modes": [ "e_sign" ],
            "matches": {
              "when": "conditionally",
              "code": "top.site_name === 'Site 2'"
            }
          },
          {
            "roles": [ "site3_pi" ],
            "modes": [ "e_sign" ],
            "matches": {
              "when": "conditionally",
              "code": "top.site_name === 'Site 3'"
            }
          },
          {
            "roles": [ "site4_pi" ],
            "modes": [ "e_sign" ],
            "matches": {
              "when": "conditionally",
              "code": "top.site_name === 'Site 4'"
            }
          },
          {
            "roles": [ "site5_pi" ],
            "modes": [ "e_sign" ],
            "matches": {
              "when": "conditionally",
              "code": "top.site_name === 'Site 5'"
            }
          },
          {
            "roles": [ "central_entry" ],
            "modes": [ "create", "read", "delete" ],
            "matches": { "when": "always" }
          },
          {
            "roles": [ "central_monitor" ],
            "modes": [ "verify", "comment", "read" ],
            "matches": { "when": "always" }
          }
        ],
        "verifiable": {
          "type": "sectional",
          "sections": [ "Eligibility", "Details" ]
        },
        "commentable": true
      },
      "reports": [
        {
          "name": "ae",
          "title": "Adverse Events",
          "code": [
            "var startDateStr = undefined, endDateStr = undefined;",
            "if (userQuery) {",
            "  var obj = userQuery;",
            "  if (obj.AdverseEvents) {",
            "    obj = obj.AdverseEvents;",
            "    if (obj.$elemMatch) {",
            "      obj = obj.$elemMatch;",
            "      if (obj.$and && obj.$and.length > 0) {",
            "        var arr = obj.$and;",
            "        var startDate = undefined, endDate = undefined;",
            "        for (var i = 0, ilen = arr.length; i < ilen; i++) {",
            "          if (arr[i]['event.start_date']) {",
            "            obj = arr[i]['event.start_date'];",
            "            if (obj.$gte) {",
            "              startDateStr = obj.$gte;",
            "              var md = obj.$gte.match(/^(\\d{4})-(\\d{2})-(\\d{2})$/);",
            "              if (md) {",
            "                startDate = { year: md[1], month: md[2], day: md[3] };",
            "              }",
            "            } else if (obj.$lte) {",
            "              endDateStr = obj.$lte;",
            "              var md = obj.$lte.match(/^(\\d{4})-(\\d{2})-(\\d{2})$/);",
            "              if (md) {",
            "                endDate = { year: md[1], month: md[2], day: md[3] };",
            "              }",
            "            }",
            "          }",
            "        }",
            "        if (startDate && endDate) {",
            "          dateRange = { start: startDate, end: endDate };",
            "        } else if (startDate) {",
            "          dateSince = { start: startDate };",
            "        } else if (endDate) {",
            "          dateUntil = { end: endDate };",
            "        }",
            "      }",
            "    }",
            "  }",
            "}",
            "reportEvents = [];",
            "reportTotal = { grade_1: 0, grade_2: 0, grade_3: 0, grade_4: 0, grade_5: 0, total: 0 };",
            "for (var i = 0, ilen = items.length; i < ilen; i++) {",
            "  var item = items[i];",
            "  if (item.AdverseEvents && item.AdverseEvents.length > 0) {",
            "    for (var j = 0, jlen = item.AdverseEvents.length; j < jlen; j++) {",
            "      var ae = item.AdverseEvents[j];",
            "      if (startDateStr != undefined && endDateStr != undefined) {",
            "        if (ae.event.start_date < startDateStr || ae.event.start_date > endDateStr) {",
            "          continue;",
            "        }",
            "      }",
            "      var category = ae.event.event_category;",
            "      var toxicity = undefined;",
            "      switch (category) {",
            "        case 'Blood and lymphatic system disorders':",
            "          toxicity = ae.event.blood_event_type;",
            "          break;",
            "        case 'Cardiac disorders':",
            "          toxicity = ae.event.cardiac_event_type;",
            "          break;",
            "        case 'Congenital, familial and genetic disorders':",
            "          toxicity = ae.event.congenital_event_type;",
            "          break;",
            "        case 'Ear and labyrinth disorders':",
            "          toxicity = ae.event.ear_event_type;",
            "          break;",
            "        case 'Endocrine disorders':",
            "          toxicity = ae.event.endocrine_event_type;",
            "          break;",
            "        case 'Eye disorders':",
            "          toxicity = ae.event.eye_event_type;",
            "          break;",
            "        case 'Gastrointestinal disorders':",
            "          toxicity = ae.event.gastro_event_type;",
            "          break;",
            "        case 'General disorders and administration site conditions':",
            "          toxicity = ae.event.general_event_type;",
            "          break;",
            "        case 'Hepatobiliary disorders':",
            "          toxicity = ae.event.hepatobiliary_event_type;",
            "          break;",
            "        case 'Immune system disorders':",
            "          toxicity = ae.event.immune_event_type;",
            "          break;",
            "        case 'Infections and infestations':",
            "          toxicity = ae.event.infection_event_type;",
            "          break;",
            "        case 'Injury, poisoning and procedural complications':",
            "          toxicity = ae.event.complications_event_type;",
            "          break;",
            "        case 'Investigations':",
            "          toxicity = ae.event.investigations_event_type;",
            "          break;",
            "        case 'Metabolism and nutrition disorders':",
            "          toxicity = ae.event.metabolism_event_type;",
            "          break;",
            "        case 'Musculoskeletal and connective tissue disorders':",
            "          toxicity = ae.event.musculoskeletal_event_type;",
            "          break;",
            "        case 'Neoplasms benign, malignant, or unspecified (including cysts and polyps)':",
            "          toxicity = ae.event.neoplasms_event_type;",
            "          break;",
            "        case 'Nervous system disorders':",
            "          toxicity = ae.event.nervous_system_event_type;",
            "          break;",
            "        case 'Pregnancy, puerperium and perinatal conditions':",
            "          toxicity = ae.event.pregnancy_event_type;",
            "          break;",
            "        case 'Psychiatric disorders':",
            "          toxicity = ae.event.psych_event_type;",
            "          break;",
            "        case 'Renal and urinary disorders':",
            "          toxicity = ae.event.renal_event_type;",
            "          break;",
            "        case 'Reproductive system and breast disorders':",
            "          toxicity = ae.event.reproductive_event_type;",
            "          break;",
            "        case 'Respiratory, thoracic and mediastinal disorders':",
            "          toxicity = ae.event.respiratory_event_type;",
            "          break;",
            "        case 'Skin and subcutaneous tissue disorders':",
            "          toxicity = ae.event.skin_event_type;",
            "          break;",
            "        case 'Social circumstances':",
            "          toxicity = ae.event.social_event_type;",
            "          break;",
            "        case 'Surgical and medical procedures':",
            "          toxicity = ae.event.surgical_event_type;",
            "          break;",
            "        case 'Vascular disorders':",
            "          toxicity = ae.event.vascular_event_type;",
            "          break;",
            "      }",
            "      if (typeof(toxicity) == 'undefined') {",
            "        continue;",
            "      }",
            "      var reportEvent = undefined;",
            "      var found = reportEvents.some(function(re) {",
            "        if (re.category == category && re.toxicity == toxicity) {",
            "          reportEvent = re;",
            "          return true;",
            "        }",
            "        return false;",
            "      });",
            "      if (!found) {",
            "        reportEvent = { category: category, toxicity: toxicity, grade_1: 0, grade_2: 0, grade_3: 0, grade_4: 0, grade_5: 0, total: 0 };",
            "        reportEvents.push(reportEvent);",
            "      }",
            "      var grade_key = 'grade_' + ae.event.grade;",
            "      reportEvent[grade_key]++;",
            "      reportEvent['total']++;",
            "      reportTotal[grade_key]++;",
            "      reportTotal['total']++;",
            "    }",
            "  }",
            "}",
            ""
          ],
          "template": [
            "{{=<% %>=}}",
            "\\documentclass{article}",
            "\\renewcommand*{\\familydefault}{\\sfdefault}",
            "\\usepackage[top=0.3in, bottom=0.3in, left=0.3in, right=0.3in]{geometry}",
            "\\usepackage{array}",
            "\\usepackage[us]{datetime}",
            "\\newcolumntype{C}[1]{>{\\centering\\let\\newline\\\\\\arraybackslash\\hspace{0pt}}p{#1}}",
            "\\begin{document}",
            "\\title{HEM1538: Adverse Event Report}",
            "<%#dateRange%>",
            "\\author{Date range: \\formatdate{<%start.day%>}{<%start.month%>}{<%start.year%>} to \\formatdate{<%end.day%>}{<%end.month%>}{<%end.year%>}}",
            "<%/dateRange%>",
            "<%#dateSince%>",
            "\\author{Since: \\formatdate{<%start.day%>}{<%start.month%>}{<%start.year%>}}",
            "<%/dateSince%>",
            "<%#dateUntil%>",
            "\\author{Until: \\formatdate{<%end.day%>}{<%end.month%>}{<%end.year%>}}",
            "<%/dateUntil%>",
            "\\date{As of \\today}",
            "\\maketitle",
            "\\begin{tabular}{ | >{\\raggedright}p{5cm} | >{\\raggedright}p{4.5cm} | C{1.1cm} | C{1.1cm} | C{1.1cm} | C{1.1cm} | C{1.1cm} | C{1.1cm} | }",
            "  \\hline \\centering \\textbf{Category} & \\centering \\textbf{Toxicity} & \\textbf{Grade 1} & \\textbf{Grade 2} & \\textbf{Grade 3} & \\textbf{Grade 4} & \\textbf{Grade 5} & \\textbf{Total} \\\\",
            "<%#reportEvents%>",
            "  \\hline <%category%> & <%toxicity%> & <%grade_1%> & <%grade_2%> & <%grade_3%> & <%grade_4%> & <%grade_5%> & <%total%> \\\\",
            "<%/reportEvents%>",
            "<%#reportTotal%>",
            "\\hline \\multicolumn{2}{|l|}{\\textbf{Total}} & <%grade_1%> & <%grade_2%> & <%grade_3%> & <%grade_4%> & <%grade_5%> & <%total%> \\\\",
            "<%/reportTotal%>",
            "  \\hline",
            "\\end{tabular}",
            "\\end{document}",
            ""
          ],
          "search": { "query": {  }, "projection": {  } }
        },
        {
          "name": "verify",
          "title": "Verifications",
          "code": [
            "for (var i = 0, ilen = items.length; i < ilen; i++) {",
            "  var item = items[i];",
            "  var patient_study_id = item.Details ? item.Details.patient_study_id : '';",
            "  var site_name = item.site_name;",
            "  if (item.Details) {",
            "    obj = item.Details;",
            "    obj.site_name = site_name;",
            "    obj.item_id = item.id;",
            "  }",
            "  if (item.AdverseEvents && item.AdverseEvents.length > 0) {",
            "    item.AE = [];",
            "    item.SAE = [];",
            "    for (var j = 0, jlen = item.AdverseEvents.length; j < jlen; j++) {",
            "      var obj = item.AdverseEvents[j];",
            "      if (obj.event.serious == 'Yes') {",
            "        if (obj.Followups && obj.Followups.length > 0) {",
            "          for (var k = 0, klen = obj.Followups.length; k < klen; k++) {",
            "            var child = obj.Followups[k];",
            "            child.site_name = site_name;",
            "            child.patient_study_id = patient_study_id;",
            "            child.event_id = obj.event_id;",
            "            child.index = k + 1;",
            "            child.item_id = item.id;",
            "          }",
            "        }",
            "        item.SAE.push(obj);",
            "      } else {",
            "        item.AE.push(obj);",
            "      }",
            "      obj.site_name = site_name;",
            "      obj.patient_study_id = patient_study_id;",
            "      obj.item_id = item.id;",
            "    }",
            "  }",
            "  if (item.ConcomitantMedications && item.ConcomitantMedications.length > 0) {",
            "    for (var j = 0, jlen = item.ConcomitantMedications.length; j < jlen; j++) {",
            "      var obj = item.ConcomitantMedications[j];",
            "      obj.site_name = site_name;",
            "      obj.patient_study_id = patient_study_id;",
            "      obj.item_id = item.id;",
            "    }",
            "  }",
            "  if (item.Comments && item.Comments.length > 0) {",
            "    for (var j = 0, jlen = item.Comments.length; j < jlen; j++) {",
            "      var obj = item.Comments[j];",
            "      obj.site_name = site_name;",
            "      obj.patient_study_id = patient_study_id;",
            "      obj.item_id = item.id;",
            "    }",
            "  }",
            "  if (item.MedicalHistories && item.MedicalHistories.length > 0) {",
            "    for (var j = 0, jlen = item.MedicalHistories.length; j < jlen; j++) {",
            "      var obj = item.MedicalHistories[j];",
            "      obj.site_name = site_name;",
            "      obj.patient_study_id = patient_study_id;",
            "      obj.item_id = item.id;",
            "    }",
            "  }",
            "  if (item.Deviations && item.Deviations.length > 0) {",
            "    for (var j = 0, jlen = item.Deviations.length; j < jlen; j++) {",
            "      var obj = item.Deviations[j];",
            "      obj.site_name = site_name;",
            "      obj.patient_study_id = patient_study_id;",
            "      obj.item_id = item.id;",
            "    }",
            "  }",
            "  if (item.Visits && item.Visits.length > 0) {",
            "    for (var j = 0, jlen = item.Visits.length; j < jlen; j++) {",
            "      var obj = item.Visits[j];",
            "      obj.site_name = site_name;",
            "      obj.patient_study_id = patient_study_id;",
            "      obj.item_id = item.id;",
            "      if (obj.BaselineCovariates) {",
            "        obj.BaselineCovariates.site_name = site_name;",
            "        obj.BaselineCovariates.patient_study_id = patient_study_id;",
            "        obj.BaselineCovariates.visit_type = obj.visit_type;",
            "        obj.BaselineCovariates.item_id = item.id;",
            "        obj.BaselineCovariates.visit_id = obj.id;",
            "      }",
            "      if (obj.BiomarkerSpecimens) {",
            "        obj.BiomarkerSpecimens.site_name = site_name;",
            "        obj.BiomarkerSpecimens.patient_study_id = patient_study_id;",
            "        obj.BiomarkerSpecimens.visit_type = obj.visit_type;",
            "        obj.BiomarkerSpecimens.item_id = item.id;",
            "        obj.BiomarkerSpecimens.visit_id = obj.id;",
            "      }",
            "      if (obj.BoneMarrow) {",
            "        obj.BoneMarrow.site_name = site_name;",
            "        obj.BoneMarrow.patient_study_id = patient_study_id;",
            "        obj.BoneMarrow.visit_type = obj.visit_type;",
            "        obj.BoneMarrow.item_id = item.id;",
            "        obj.BoneMarrow.visit_id = obj.id;",
            "      }",
            "      if (obj.ClinicalExam) {",
            "        obj.ClinicalExam.site_name = site_name;",
            "        obj.ClinicalExam.patient_study_id = patient_study_id;",
            "        obj.ClinicalExam.visit_type = obj.visit_type;",
            "        obj.ClinicalExam.item_id = item.id;",
            "        obj.ClinicalExam.visit_id = obj.id;",
            "      }",
            "      if (obj.CTScanDiagnostics) {",
            "        obj.CTScanDiagnostics.site_name = site_name;",
            "        obj.CTScanDiagnostics.patient_study_id = patient_study_id;",
            "        obj.CTScanDiagnostics.visit_type = obj.visit_type;",
            "        obj.CTScanDiagnostics.item_id = item.id;",
            "        obj.CTScanDiagnostics.visit_id = obj.id;",
            "      }",
            "      if (obj.DiseaseAssessment) {",
            "        obj.DiseaseAssessment.site_name = site_name;",
            "        obj.DiseaseAssessment.patient_study_id = patient_study_id;",
            "        obj.DiseaseAssessment.visit_type = obj.visit_type;",
            "        obj.DiseaseAssessment.item_id = item.id;",
            "        obj.DiseaseAssessment.visit_id = obj.id;",
            "      }",
            "      if (obj.DrugAdministration) {",
            "        obj.DrugAdministration.site_name = site_name;",
            "        obj.DrugAdministration.patient_study_id = patient_study_id;",
            "        obj.DrugAdministration.visit_type = obj.visit_type;",
            "        obj.DrugAdministration.item_id = item.id;",
            "        obj.DrugAdministration.visit_id = obj.id;",
            "      }",
            "      if (obj.Labs) {",
            "        obj.Labs.site_name = site_name;",
            "        obj.Labs.patient_study_id = patient_study_id;",
            "        obj.Labs.visit_type = obj.visit_type;",
            "        obj.Labs.item_id = item.id;",
            "        obj.Labs.visit_id = obj.id;",
            "      }",
            "      if (obj.MPNSAFTSS) {",
            "        obj.MPNSAFTSS.site_name = site_name;",
            "        obj.MPNSAFTSS.patient_study_id = patient_study_id;",
            "        obj.MPNSAFTSS.visit_type = obj.visit_type;",
            "        obj.MPNSAFTSS.item_id = item.id;",
            "        obj.MPNSAFTSS.visit_id = obj.id;",
            "      }",
            "      if (obj.ObservationsAndReviews) {",
            "        obj.ObservationsAndReviews.site_name = site_name;",
            "        obj.ObservationsAndReviews.patient_study_id = patient_study_id;",
            "        obj.ObservationsAndReviews.visit_type = obj.visit_type;",
            "        obj.ObservationsAndReviews.item_id = item.id;",
            "        obj.ObservationsAndReviews.visit_id = obj.id;",
            "      }",
            "      if (obj.OffTreatmentDetails) {",
            "        obj.OffTreatmentDetails.site_name = site_name;",
            "        obj.OffTreatmentDetails.patient_study_id = patient_study_id;",
            "        obj.OffTreatmentDetails.visit_type = obj.visit_type;",
            "        obj.OffTreatmentDetails.item_id = item.id;",
            "        obj.OffTreatmentDetails.visit_id = obj.id;",
            "      }",
            "      if (obj.PKSpecimens) {",
            "        obj.PKSpecimens.site_name = site_name;",
            "        obj.PKSpecimens.patient_study_id = patient_study_id;",
            "        obj.PKSpecimens.visit_type = obj.visit_type;",
            "        obj.PKSpecimens.item_id = item.id;",
            "        obj.PKSpecimens.visit_id = obj.id;",
            "      }",
            "      if (obj.QuantitativeImmunoglobulins) {",
            "        obj.QuantitativeImmunoglobulins.site_name = site_name;",
            "        obj.QuantitativeImmunoglobulins.patient_study_id = patient_study_id;",
            "        obj.QuantitativeImmunoglobulins.visit_type = obj.visit_type;",
            "        obj.QuantitativeImmunoglobulins.item_id = item.id;",
            "        obj.QuantitativeImmunoglobulins.visit_id = obj.id;",
            "      }",
            "    }",
            "  }",
            "}",
            "function formatDate() {",
            "  return function(text, render) {",
            "    var value = this[text];",
            "    var result = value;",
            "    if (typeof(value) == 'object' && value !== null && 'getFullYear' in value) {",
            "      var day = value.getDate();",
            "      if (day < 10) {",
            "        day = '0' + day.toString();",
            "      } else {",
            "        day = day.toString();",
            "      }",
            "      var month = value.getMonth() + 1;",
            "      if (month < 10) {",
            "        month = '0' + month.toString();",
            "      } else {",
            "        month = month.toString();",
            "      }",
            "      result = value.getFullYear().toString() + '-' + month + '-' + day",
            "    }",
            "    return result;",
            "  };",
            "}",
            ""
          ],
          "template": [
            "{{=<% %>=}}",
            "\\documentclass{article}",
            "\\renewcommand*{\\familydefault}{\\sfdefault}",
            "\\newcommand{\\statustable}[2][c]{\\begin{tabular}[#1]{@{}r@{ - }l@{}}#2\\end{tabular}}",
            "\\usepackage[top=0.3in, bottom=0.3in, left=0.3in, right=0.3in]{geometry}",
            "\\usepackage{hyperref}",
            "\\hypersetup{",
            "  colorlinks,",
            "  citecolor=blue,",
            "  filecolor=blue,",
            "  linkcolor=blue,",
            "  urlcolor=blue",
            "}",
            "\\begin{document}",
            "\\title{HEM1538: Verify Report}",
            "\\maketitle",
            "\\tableofcontents",
            "\\newpage",
            "\\section{Study Enrollment}",
            "\\begin{tabular}{ | l | l | l | l | }",
            "  \\hline \\textbf{Site} & \\textbf{DB Patient ID} & \\textbf{Link} & \\textbf{Verifications} \\\\",
            "  <%#items%><%#Details%>",
            "  \\hline <%site_name%> & <%patient_study_id%> & \\href{https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/<%item_id%>}{Link} & \\statustable[t]{ <%#__verifications%><%action%> & <%#formatDate%>timestamp<%/formatDate%> \\\\<%/__verifications%> } \\\\",
            "  <%/Details%><%/items%>",
            "  \\hline",
            "\\end{tabular}",
            "\\section{Adverse Events}",
            "\\begin{tabular}{ | l | l | l | l | l | }",
            "  \\hline \\textbf{Site} & \\textbf{DB Patient ID} & \\textbf{Start Date} & \\textbf{Link} & \\textbf{Verifications} \\\\",
            "  <%#items%><%#AE%>",
            "  \\hline <%site_name%> & <%patient_study_id%> & <%#event%><%start_date%> & \\href{https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/<%item_id%>/adverseevents/<%id%>}{Link} & \\statustable[t]{ <%#__verifications%><%action%> & <%#formatDate%>timestamp<%/formatDate%> \\\\<%/__verifications%><%/event%> } \\\\",
            "  <%/AE%><%/items%>",
            "  \\hline",
            "\\end{tabular}",
            "\\section{Serious Adverse Events}",
            "\\begin{tabular}{ | l | l | l | l | l | l | }",
            "  \\hline \\textbf{Site} & \\textbf{DB Patient ID} & \\textbf{ID} & \\textbf{Follow-up Number} & \\textbf{Link} & \\textbf{Verifications} \\\\",
            "  <%#items%><%#SAE%>",
            "  \\hline <%site_name%> & <%patient_study_id%> & <%event_id%> & 0 & \\href{https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/<%item_id%>/adverseevents/<%id%>}{Link} & \\statustable[t]{ <%#event%><%#__verifications%><%action%> & <%#formatDate%>timestamp<%/formatDate%> \\\\<%/__verifications%><%/event%> } \\\\",
            "  <%#Followups%>",
            "  \\hline <%site_name%> & <%patient_study_id%> & <%event_id%> & <%index%> & \\href{https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/<%item_id%>/adverseevents/<%id%>}{Link} & \\statustable[t]{ <%#event%><%#__verifications%><%action%> & <%#formatDate%>timestamp<%/formatDate%> \\\\<%/__verifications%><%/event%> } \\\\",
            "  <%/Followups%>",
            "  <%/SAE%><%/items%>",
            "  \\hline",
            "\\end{tabular}",
            "\\section{Comments}",
            "\\begin{tabular}{ | l | l | l | l | l | }",
            "  \\hline \\textbf{Site} & \\textbf{DB Patient ID} & \\textbf{Date} & \\textbf{Link} & \\textbf{Verifications} \\\\",
            "  <%#items%><%#Comments%>",
            "  \\hline <%site_name%> & <%patient_study_id%> & <%date%> & \\href{https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/<%item_id%>/comments/<%id%>}{Link} & \\statustable[t]{ <%#__verifications%><%action%> & <%#formatDate%>timestamp<%/formatDate%> \\\\<%/__verifications%> } \\\\",
            "  <%/Comments%><%/items%>",
            "  \\hline",
            "\\end{tabular}",
            "\\section{Concomitant Medications}",
            "\\begin{tabular}{ | l | l | l | l | l | }",
            "  \\hline \\textbf{Site} & \\textbf{DB Patient ID} & \\textbf{Start Date} & \\textbf{Link} & \\textbf{Verifications} \\\\",
            "  <%#items%><%#ConcomitantMedications%>",
            "  \\hline <%site_name%> & <%patient_study_id%> & <%start_date%> & \\href{https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/<%item_id%>/concomitant_medications/<%id%>}{Link} & \\statustable[t]{ <%#__verifications%><%action%> & <%#formatDate%>timestamp<%/formatDate%> \\\\<%/__verifications%> } \\\\",
            "  <%/ConcomitantMedications%><%/items%>",
            "  \\hline",
            "\\end{tabular}",
            "\\section{Medical History}",
            "\\begin{tabular}{ | l | l | l | l | l | }",
            "  \\hline \\textbf{Site} & \\textbf{DB Patient ID} & \\textbf{Start Date} & \\textbf{Link} & \\textbf{Verifications} \\\\",
            "  <%#items%><%#MedicalHistories%>",
            "  \\hline <%site_name%> & <%patient_study_id%> & <%start_date%> & \\href{https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/<%item_id%>/medicalhistories/<%id%>}{Link} & \\statustable[t]{ <%#__verifications%><%action%> & <%#formatDate%>timestamp<%/formatDate%> \\\\<%/__verifications%> } \\\\",
            "  <%/MedicalHistories%><%/items%>",
            "  \\hline",
            "\\end{tabular}",
            "\\section{Deviations}",
            "\\begin{tabular}{ | l | l | l | l | l | }",
            "  \\hline \\textbf{Site} & \\textbf{DB Patient ID} & \\textbf{Deviation Date} & \\textbf{Link} & \\textbf{Verifications} \\\\",
            "  <%#items%><%#Deviations%>",
            "  \\hline <%site_name%> & <%patient_study_id%> & <%deviation_date%> & \\href{https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/<%item_id%>/deviations/<%id%>}{Link} & \\statustable[t]{ <%#__verifications%><%action%> & <%#formatDate%>timestamp<%/formatDate%> \\\\<%/__verifications%> } \\\\",
            "  <%/Deviations%><%/items%>",
            "  \\hline",
            "\\end{tabular}",
            "\\section{Visit Details}",
            "\\begin{tabular}{ | l | l | l | l | l | }",
            "  \\hline \\textbf{Site} & \\textbf{DB Patient ID} & \\textbf{Visit Type} & \\textbf{Link} & \\textbf{Verifications} \\\\",
            "  <%#items%><%#Visits%>",
            "  \\hline <%site_name%> & <%patient_study_id%> & <%visit_type%> & \\href{https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/<%item_id%>/visits/<%id%>}{Link} & \\statustable[t]{ <%#__verifications%><%action%> & <%#formatDate%>timestamp<%/formatDate%> \\\\<%/__verifications%> } \\\\",
            "  <%/Visits%><%/items%>",
            "  \\hline",
            "\\end{tabular}",
            "\\section{Baseline Covariates}",
            "\\begin{tabular}{ | l | l | l | l | l | }",
            "  \\hline \\textbf{Site} & \\textbf{DB Patient ID} & \\textbf{Visit Type} & \\textbf{Link} & \\textbf{Verifications} \\\\",
            "  <%#items%><%#Visits%><%#BaselineCovariates%>",
            "  \\hline <%site_name%> & <%patient_study_id%> & <%visit_type%> & \\href{https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/<%item_id%>/visits/<%visit_id%>/BaselineCovariates}{Link} & \\statustable[t]{ <%#__verifications%><%action%> & <%#formatDate%>timestamp<%/formatDate%> \\\\<%/__verifications%> } \\\\",
            "  <%/BaselineCovariates%><%/Visits%><%/items%>",
            "  \\hline",
            "\\end{tabular}",
            "\\section{Biomarker Specimens}",
            "\\begin{tabular}{ | l | l | l | l | l | }",
            "  \\hline \\textbf{Site} & \\textbf{DB Patient ID} & \\textbf{Visit Type} & \\textbf{Link} & \\textbf{Verifications} \\\\",
            "  <%#items%><%#Visits%><%#BiomarkerSpecimens%>",
            "  \\hline <%site_name%> & <%patient_study_id%> & <%visit_type%> & \\href{https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/<%item_id%>/visits/<%visit_id%>/BiomarkerSpecimens}{Link} & \\statustable[t]{ <%#__verifications%><%action%> & <%#formatDate%>timestamp<%/formatDate%> \\\\<%/__verifications%> } \\\\",
            "  <%/BiomarkerSpecimens%><%/Visits%><%/items%>",
            "  \\hline",
            "\\end{tabular}",
            "\\section{Bone Marrow}",
            "\\begin{tabular}{ | l | l | l | l | l | }",
            "  \\hline \\textbf{Site} & \\textbf{DB Patient ID} & \\textbf{Visit Type} & \\textbf{Link} & \\textbf{Verifications} \\\\",
            "  <%#items%><%#Visits%><%#BoneMarrow%>",
            "  \\hline <%site_name%> & <%patient_study_id%> & <%visit_type%> & \\href{https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/<%item_id%>/visits/<%visit_id%>/BoneMarrow}{Link} & \\statustable[t]{ <%#__verifications%><%action%> & <%#formatDate%>timestamp<%/formatDate%> \\\\<%/__verifications%> } \\\\",
            "  <%/BoneMarrow%><%/Visits%><%/items%>",
            "  \\hline",
            "\\end{tabular}",
            "\\section{Clinical Exam}",
            "\\begin{tabular}{ | l | l | l | l | l | }",
            "  \\hline \\textbf{Site} & \\textbf{DB Patient ID} & \\textbf{Visit Type} & \\textbf{Link} & \\textbf{Verifications} \\\\",
            "  <%#items%><%#Visits%><%#ClinicalExam%>",
            "  \\hline <%site_name%> & <%patient_study_id%> & <%visit_type%> & \\href{https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/<%item_id%>/visits/<%visit_id%>/ClinicalExam}{Link} & \\statustable[t]{ <%#__verifications%><%action%> & <%#formatDate%>timestamp<%/formatDate%> \\\\<%/__verifications%> } \\\\",
            "  <%/ClinicalExam%><%/Visits%><%/items%>",
            "  \\hline",
            "\\end{tabular}",
            "\\section{CT Scan Diagnostics}",
            "\\begin{tabular}{ | l | l | l | l | l | }",
            "  \\hline \\textbf{Site} & \\textbf{DB Patient ID} & \\textbf{Visit Type} & \\textbf{Link} & \\textbf{Verifications} \\\\",
            "  <%#items%><%#Visits%><%#CTScanDiagnostics%>",
            "  \\hline <%site_name%> & <%patient_study_id%> & <%visit_type%> & \\href{https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/<%item_id%>/visits/<%visit_id%>/CTScanDiagnostics}{Link} & \\statustable[t]{ <%#__verifications%><%action%> & <%#formatDate%>timestamp<%/formatDate%> \\\\<%/__verifications%> } \\\\",
            "  <%/CTScanDiagnostics%><%/Visits%><%/items%>",
            "  \\hline",
            "\\end{tabular}",
            "\\section{Disease Assessment}",
            "\\begin{tabular}{ | l | l | l | l | l | }",
            "  \\hline \\textbf{Site} & \\textbf{DB Patient ID} & \\textbf{Visit Type} & \\textbf{Link} & \\textbf{Verifications} \\\\",
            "  <%#items%><%#Visits%><%#DiseaseAssessment%>",
            "  \\hline <%site_name%> & <%patient_study_id%> & <%visit_type%> & \\href{https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/<%item_id%>/visits/<%visit_id%>/DiseaseAssessment}{Link} & \\statustable[t]{ <%#__verifications%><%action%> & <%#formatDate%>timestamp<%/formatDate%> \\\\<%/__verifications%> } \\\\",
            "  <%/DiseaseAssessment%><%/Visits%><%/items%>",
            "  \\hline",
            "\\end{tabular}",
            "\\section{Drug Administration}",
            "\\begin{tabular}{ | l | l | l | l | l | }",
            "  \\hline \\textbf{Site} & \\textbf{DB Patient ID} & \\textbf{Visit Type} & \\textbf{Link} & \\textbf{Verifications} \\\\",
            "  <%#items%><%#Visits%><%#DrugAdministration%>",
            "  \\hline <%site_name%> & <%patient_study_id%> & <%visit_type%> & \\href{https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/<%item_id%>/visits/<%visit_id%>/DrugAdministration}{Link} & \\statustable[t]{ <%#__verifications%><%action%> & <%#formatDate%>timestamp<%/formatDate%> \\\\<%/__verifications%> } \\\\",
            "  <%/DrugAdministration%><%/Visits%><%/items%>",
            "  \\hline",
            "\\end{tabular}",
            "\\section{Labs}",
            "\\begin{tabular}{ | l | l | l | l | l | }",
            "  \\hline \\textbf{Site} & \\textbf{DB Patient ID} & \\textbf{Visit Type} & \\textbf{Link} & \\textbf{Verifications} \\\\",
            "  <%#items%><%#Visits%><%#Labs%>",
            "  \\hline <%site_name%> & <%patient_study_id%> & <%visit_type%> & \\href{https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/<%item_id%>/visits/<%visit_id%>/Labs}{Link} & \\statustable[t]{ <%#__verifications%><%action%> & <%#formatDate%>timestamp<%/formatDate%> \\\\<%/__verifications%> } \\\\",
            "  <%/Labs%><%/Visits%><%/items%>",
            "  \\hline",
            "\\end{tabular}",
            "\\section{MPN-SAF TSS}",
            "\\begin{tabular}{ | l | l | l | l | l | }",
            "  \\hline \\textbf{Site} & \\textbf{DB Patient ID} & \\textbf{Visit Type} & \\textbf{Link} & \\textbf{Verifications} \\\\",
            "  <%#items%><%#Visits%><%#MPNSAFTSS%>",
            "  \\hline <%site_name%> & <%patient_study_id%> & <%visit_type%> & \\href{https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/<%item_id%>/visits/<%visit_id%>/MPNSAFTSS}{Link} & \\statustable[t]{ <%#__verifications%><%action%> & <%#formatDate%>timestamp<%/formatDate%> \\\\<%/__verifications%> } \\\\",
            "  <%/MPNSAFTSS%><%/Visits%><%/items%>",
            "  \\hline",
            "\\end{tabular}",
            "\\section{Observations and Reviews}",
            "\\begin{tabular}{ | l | l | l | l | l | }",
            "  \\hline \\textbf{Site} & \\textbf{DB Patient ID} & \\textbf{Visit Type} & \\textbf{Link} & \\textbf{Verifications} \\\\",
            "  <%#items%><%#Visits%><%#ObservationsAndReviews%>",
            "  \\hline <%site_name%> & <%patient_study_id%> & <%visit_type%> & \\href{https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/<%item_id%>/visits/<%visit_id%>/ObservationsAndReviews}{Link} & \\statustable[t]{ <%#__verifications%><%action%> & <%#formatDate%>timestamp<%/formatDate%> \\\\<%/__verifications%> } \\\\",
            "  <%/ObservationsAndReviews%><%/Visits%><%/items%>",
            "  \\hline",
            "\\end{tabular}",
            "\\section{Off-Treatment Details}",
            "\\begin{tabular}{ | l | l | l | l | l | }",
            "  \\hline \\textbf{Site} & \\textbf{DB Patient ID} & \\textbf{Visit Type} & \\textbf{Link} & \\textbf{Verifications} \\\\",
            "  <%#items%><%#Visits%><%#OffTreatmentDetails%>",
            "  \\hline <%site_name%> & <%patient_study_id%> & <%visit_type%> & \\href{https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/<%item_id%>/visits/<%visit_id%>/OffTreatmentDetails}{Link} & \\statustable[t]{ <%#__verifications%><%action%> & <%#formatDate%>timestamp<%/formatDate%> \\\\<%/__verifications%> } \\\\",
            "  <%/OffTreatmentDetails%><%/Visits%><%/items%>",
            "  \\hline",
            "\\end{tabular}",
            "\\section{PK Specimens}",
            "\\begin{tabular}{ | l | l | l | l | l | }",
            "  \\hline \\textbf{Site} & \\textbf{DB Patient ID} & \\textbf{Visit Type} & \\textbf{Link} & \\textbf{Verifications} \\\\",
            "  <%#items%><%#Visits%><%#PKSpecimens%>",
            "  \\hline <%site_name%> & <%patient_study_id%> & <%visit_type%> & \\href{https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/<%item_id%>/visits/<%visit_id%>/PKSpecimens}{Link} & \\statustable[t]{ <%#__verifications%><%action%> & <%#formatDate%>timestamp<%/formatDate%> \\\\<%/__verifications%> } \\\\",
            "  <%/PKSpecimens%><%/Visits%><%/items%>",
            "  \\hline",
            "\\end{tabular}",
            "\\section{Quantitative Immunoglobulins}",
            "\\begin{tabular}{ | l | l | l | l | l | }",
            "  \\hline \\textbf{Site} & \\textbf{DB Patient ID} & \\textbf{Visit Type} & \\textbf{Link} & \\textbf{Verifications} \\\\",
            "  <%#items%><%#Visits%><%#QuantitativeImmunoglobulins%>",
            "  \\hline <%site_name%> & <%patient_study_id%> & <%visit_type%> & \\href{https://cqsclinical.mc.vanderbilt.edu/hem1538/#/studyenrollments/<%item_id%>/visits/<%visit_id%>/QuantitativeImmunoglobulins}{Link} & \\statustable[t]{ <%#__verifications%><%action%> & <%#formatDate%>timestamp<%/formatDate%> \\\\<%/__verifications%> } \\\\",
            "  <%/QuantitativeImmunoglobulins%><%/Visits%><%/items%>",
            "  \\hline",
            "\\end{tabular}",
            "\\end{document}",
            ""
          ],
          "search": { "query": {  }, "projection": {  } }
        },
        {
          "name": "deviation",
          "title": "Deviations",
          "code": [
            "var startDateStr = undefined, endDateStr = undefined;",
            "if (userQuery) {",
            "  var obj = userQuery;",
            "  if (obj.Deviations) {",
            "    obj = obj.Deviations;",
            "    if (obj.$elemMatch) {",
            "      obj = obj.$elemMatch;",
            "      if (obj.$and && obj.$and.length > 0) {",
            "        var arr = obj.$and;",
            "        var startDate = undefined, endDate = undefined;",
            "        for (var i = 0, ilen = arr.length; i < ilen; i++) {",
            "          if (arr[i].discovered_date) {",
            "            obj = arr[i].discovered_date;",
            "            if (obj.$gte) {",
            "              startDateStr = obj.$gte;",
            "              var md = obj.$gte.match(/^(\\d{4})-(\\d{2})-(\\d{2})$/);",
            "              if (md) {",
            "                startDate = { year: md[1], month: md[2], day: md[3] };",
            "              }",
            "            } else if (obj.$lte) {",
            "              endDateStr = obj.$lte;",
            "              var md = obj.$lte.match(/^(\\d{4})-(\\d{2})-(\\d{2})$/);",
            "              if (md) {",
            "                endDate = { year: md[1], month: md[2], day: md[3] };",
            "              }",
            "            }",
            "          }",
            "        }",
            "        if (startDate && endDate) {",
            "          dateRange = { start: startDate, end: endDate };",
            "        } else if (startDate) {",
            "          dateSince = { start: startDate };",
            "        } else if (endDate) {",
            "          dateUntil = { end: endDate };",
            "        }",
            "      }",
            "    }",
            "  }",
            "}",
            "reportEvents = [];",
            "for (var i = 0, ilen = items.length; i < ilen; i++) {",
            "  var item = items[i];",
            "  if (item.Deviations) {",
            "    var patient_study_id = '', subj_init = '';",
            "    if (item.Details) {",
            "      patient_study_id = item.Details.patient_study_id;",
            "      if (item.Details.first_initial) {",
            "        subj_init += item.Details.first_initial;",
            "      }",
            "      if (item.Details.middle_initial) {",
            "        subj_init += item.Details.middle_initial;",
            "      }",
            "      if (item.Details.last_initial) {",
            "        subj_init += item.Details.last_initial;",
            "      }",
            "    }",
            "    for (var j = 0, jlen = item.Deviations.length; j < jlen; j++) {",
            "      var deviation = item.Deviations[j];",
            "      if (startDateStr != undefined && endDateStr != undefined) {",
            "        if (deviation.discovered_date < startDateStr || deviation.discovered_date > endDateStr) {",
            "          continue;",
            "        }",
            "      }",
            "      deviation.site_name = item.site_name;",
            "      deviation.seq_number = patient_study_id;",
            "      deviation.subj_init = subj_init;",
            "      reportEvents.push(deviation);",
            "    }",
            "  }",
            "}",
            ""
          ],
          "template": [
            "{{=<% %>=}}",
            "\\documentclass[landscape]{article}",
            "\\renewcommand*{\\familydefault}{\\sfdefault}",
            "\\usepackage[top=0.3in, bottom=0.3in, left=0.3in, right=0.3in]{geometry}",
            "\\usepackage{array}",
            "\\usepackage[us]{datetime}",
            "\\newcolumntype{L}[1]{>{\\raggedright\\let\\newline\\\\\\arraybackslash\\hspace{0pt}}m{#1}}",
            "\\setlength{\\tabcolsep}{3pt}",
            "\\begin{document}",
            "\\title{HEM1538: Deviation Report}",
            "<%#dateRange%>",
            "\\author{Date range: \\formatdate{<%start.day%>}{<%start.month%>}{<%start.year%>} to \\formatdate{<%end.day%>}{<%end.month%>}{<%end.year%>}}",
            "<%/dateRange%>",
            "<%#dateSince%>",
            "\\author{Since: \\formatdate{<%start.day%>}{<%start.month%>}{<%start.year%>}}",
            "<%/dateSince%>",
            "<%#dateUntil%>",
            "\\author{Until: \\formatdate{<%end.day%>}{<%end.month%>}{<%end.year%>}}",
            "<%/dateUntil%>",
            "\\date{As of \\today}",
            "\\maketitle",
            "\\scriptsize",
            "\\begin{tabular}{ | L{2.2cm} | L{1.3cm} | L{0.6cm} | L{0.6cm} | L{4cm} | L{1.25cm} | L{1.25cm} | L{1.25cm} | L{4cm} | L{1.85cm} | L{4cm} | }",
            "  \\hline \\textbf{Category} & \\textbf{Study Site} & \\textbf{Seq. Num.} & \\textbf{Subj. Init.} & \\textbf{Deviation Description} & \\textbf{Date Discovered} & \\textbf{Deviation Date} & \\textbf{IRB Report Date} & \\textbf{Effect on Patient Safety} & \\textbf{Increased Risk Effect on Study} & \\textbf{Action Taken} \\\\",
            "  <%#reportEvents%>",
            "  \\hline <%category%> & <%site_name%> & <%seq_number%> & <%subj_init%> & <%description%> & <%discovered_date%> & <%deviation_date%> & <%report_to_irb_date%> & <%effect_on_patient_safety%> & <%did_increased_risk_or_negatively_affect%> & <%action_taken%> \\\\",
            "<%/reportEvents%>",
            "  \\hline",
            "\\end{tabular}",
            "\\end{document}",
            ""
          ],
          "search": { "query": {  }, "projection": {  } }
        },
        {
          "name": "sae",
          "title": "Serious Adverse Events",
          "code": [
            "function createReportEvent(base, ae, eventNo, followupIndex) {",
            "  if (ae.event.serious != 'Yes') {",
            "    return null;",
            "  }",
            "  var reportEvent = {};",
            "  for (var key in base) {",
            "    reportEvent[key] = base[key];",
            "  }",
            "  reportEvent.sae_type = ae.event.serious_reason;",
            "  reportEvent.event_no = eventNo;",
            "  reportEvent.event_date = ae.event.start_date;",
            "  reportEvent.followup_no = followupIndex;",
            "  reportEvent.toxicity_type = ae.event.event_category;",
            "  switch (reportEvent.toxicity_type) {",
            "    case 'Blood and lymphatic system disorders':",
            "      reportEvent.toxicity_type += ' - ' + ae.event.blood_event_type;",
            "      break;",
            "    case 'Cardiac disorders':",
            "      reportEvent.toxicity_type += ' - ' + ae.event.cardiac_event_type;",
            "      break;",
            "    case 'Congenital, familial and genetic disorders':",
            "      reportEvent.toxicity_type += ' - ' + ae.event.congenital_event_type;",
            "      break;",
            "    case 'Ear and labyrinth disorders':",
            "      reportEvent.toxicity_type += ' - ' + ae.event.ear_event_type;",
            "      break;",
            "    case 'Endocrine disorders':",
            "      reportEvent.toxicity_type += ' - ' + ae.event.endocrine_event_type;",
            "      break;",
            "    case 'Eye disorders':",
            "      reportEvent.toxicity_type += ' - ' + ae.event.eye_event_type;",
            "      break;",
            "    case 'Gastrointestinal disorders':",
            "      reportEvent.toxicity_type += ' - ' + ae.event.gastro_event_type;",
            "      break;",
            "    case 'General disorders and administration site conditions':",
            "      reportEvent.toxicity_type += ' - ' + ae.event.general_event_type;",
            "      break;",
            "    case 'Hepatobiliary disorders':",
            "      reportEvent.toxicity_type += ' - ' + ae.event.hepatobiliary_event_type;",
            "      break;",
            "    case 'Immune system disorders':",
            "      reportEvent.toxicity_type += ' - ' + ae.event.immune_event_type;",
            "      break;",
            "    case 'Infections and infestations':",
            "      reportEvent.toxicity_type += ' - ' + ae.event.infection_event_type;",
            "      break;",
            "    case 'Injury, poisoning and procedural complications':",
            "      reportEvent.toxicity_type += ' - ' + ae.event.complications_event_type;",
            "      break;",
            "    case 'Investigations':",
            "      reportEvent.toxicity_type += ' - ' + ae.event.investigations_event_type;",
            "      break;",
            "    case 'Metabolism and nutrition disorders':",
            "      reportEvent.toxicity_type += ' - ' + ae.event.metabolism_event_type;",
            "      break;",
            "    case 'Musculoskeletal and connective tissue disorders':",
            "      reportEvent.toxicity_type += ' - ' + ae.event.musculoskeletal_event_type;",
            "      break;",
            "    case 'Neoplasms benign, malignant, or unspecified (including cysts and polyps)':",
            "      reportEvent.toxicity_type += ' - ' + ae.event.neoplasms_event_type;",
            "      break;",
            "    case 'Nervous system disorders':",
            "      reportEvent.toxicity_type += ' - ' + ae.event.nervous_system_event_type;",
            "      break;",
            "    case 'Pregnancy, puerperium and perinatal conditions':",
            "      reportEvent.toxicity_type += ' - ' + ae.event.pregnancy_event_type;",
            "      break;",
            "    case 'Psychiatric disorders':",
            "      reportEvent.toxicity_type += ' - ' + ae.event.psych_event_type;",
            "      break;",
            "    case 'Renal and urinary disorders':",
            "      reportEvent.toxicity_type += ' - ' + ae.event.renal_event_type;",
            "      break;",
            "    case 'Reproductive system and breast disorders':",
            "      reportEvent.toxicity_type += ' - ' + ae.event.reproductive_event_type;",
            "      break;",
            "    case 'Respiratory, thoracic and mediastinal disorders':",
            "      reportEvent.toxicity_type += ' - ' + ae.event.respiratory_event_type;",
            "      break;",
            "    case 'Skin and subcutaneous tissue disorders':",
            "      reportEvent.toxicity_type += ' - ' + ae.event.skin_event_type;",
            "      break;",
            "    case 'Social circumstances':",
            "      reportEvent.toxicity_type += ' - ' + ae.event.social_event_type;",
            "      break;",
            "    case 'Surgical and medical procedures':",
            "      reportEvent.toxicity_type += ' - ' + ae.event.surgical_event_type;",
            "      break;",
            "    case 'Vascular disorders':",
            "      reportEvent.toxicity_type += ' - ' + ae.event.vascular_event_type;",
            "      break;",
            "  }",
            "  if (ae.event.other_event_specify) {",
            "    reportEvent.toxicity_type += ' - ' + ae.event.other_event_specify;",
            "  }",
            "  reportEvent.toxicity_grade = ae.event.grade;",
            "  var attributions = [];",
            "  if (ae.event.disease_attribution != 'Unrelated') {",
            "    attributions.push('Disease: ' + ae.event.disease_attribution);",
            "  }",
            "  if (ae.event.tgr1202_attribution != 'Unrelated') {",
            "    attributions.push('TGR-1202: ' + ae.event.tgr1202_attribution);",
            "  }",
            "  if (ae.event.ruxolitinib_attribution != 'Unrelated') {",
            "    attributions.push('Ruxolitinib: ' + ae.event.ruxolitinib_attribution);",
            "  }",
            "  if (ae.event.procedure_attribution != 'Unrelated') {",
            "    attributions.push('Procedure: ' + ae.event.procedure_attribution);",
            "  }",
            "  if (ae.event.other_attribution != 'Unrelated') {",
            "    attributions.push('Other: ' + ae.event.other_attribution);",
            "  }",
            "  reportEvent.toxicity_attribution = attributions.join(', ');",
            "  return(reportEvent);",
            "};",
            "var startDateStr = undefined, endDateStr = undefined;",
            "if (userQuery) {",
            "  var obj = userQuery;",
            "  if (obj.AdverseEvents) {",
            "    obj = obj.AdverseEvents;",
            "    if (obj.$elemMatch) {",
            "      obj = obj.$elemMatch;",
            "      if (obj.$and && obj.$and.length > 0) {",
            "        var arr = obj.$and;",
            "        var startDate = undefined, endDate = undefined;",
            "        for (var i = 0, ilen = arr.length; i < ilen; i++) {",
            "          if (arr[i]['event.start_date']) {",
            "            obj = arr[i]['event.start_date'];",
            "            if (obj.$gte) {",
            "              startDateStr = obj.$gte;",
            "              var md = obj.$gte.match(/^(\\d{4})-(\\d{2})-(\\d{2})$/);",
            "              if (md) {",
            "                startDate = { year: md[1], month: md[2], day: md[3] };",
            "              }",
            "            } else if (obj.$lte) {",
            "              endDateStr = obj.$lte;",
            "              var md = obj.$lte.match(/^(\\d{4})-(\\d{2})-(\\d{2})$/);",
            "              if (md) {",
            "                endDate = { year: md[1], month: md[2], day: md[3] };",
            "              }",
            "            }",
            "          }",
            "        }",
            "        if (startDate && endDate) {",
            "          dateRange = { start: startDate, end: endDate };",
            "        } else if (startDate) {",
            "          dateSince = { start: startDate };",
            "        } else if (endDate) {",
            "          dateUntil = { end: endDate };",
            "        }",
            "      }",
            "    }",
            "  }",
            "}",
            "reportEvents = [];",
            "for (var i = 0, ilen = items.length; i < ilen; i++) {",
            "  var item = items[i];",
            "  if (item.AdverseEvents && item.AdverseEvents.length > 0) {",
            "    var base = {",
            "      study_site: item.site_name,",
            "      subject_mrn: item.Details ? item.Details.patient_study_id : ''",
            "    };",
            "    if (item.Visits && item.Visits.length > 0) {",
            "      if (item.Visits[0].visit_type == 'Screening visit' && item.Visits[0].BaselineCovariates) {",
            "        base.on_study_date = item.Visits[0].BaselineCovariates.consent_date;",
            "      }",
            "      for (var j = 0, jlen = item.Visits.length; j < jlen; j++) {",
            "        var visit = item.Visits[j];",
            "        if (visit.visit_type == 'Treatment period visit' && visit.cycle_day_c == '1' && visit.cycle_day_d == '1') {",
            "          base.on_treatment_date = visit.visit_date;",
            "        } else if (visit.visit_type == 'End-of-treatment (EoT) visit' && visit.OffTreatmentDetails) {",
            "          base.off_treatment_date = visit.OffTreatmentDetails.off_treatment_date;",
            "        } else if (visit.visit_type == 'End-of-study (EoS) visit') {",
            "          if (visit.performed == 'Yes') {",
            "            base.off_study_date = visit.visit_date;",
            "          } else {",
            "            base.off_study_date = base.off_treatment_date;",
            "          }",
            "        }",
            "      }",
            "    }",
            "    for (var j = 0, jlen = item.AdverseEvents.length; j < jlen; j++) {",
            "      var ae = item.AdverseEvents[j];",
            "      if (ae.event.serious == 'Yes' && ae.event.serious_reason == 'Death') {",
            "        base.expired_date = ae.event.end_date;",
            "        break;",
            "      }",
            "      if (ae.Followups && ae.Followups.length > 0) {",
            "        for (var k = 0, klen = ae.Followups.length; k < klen; k++) {",
            "          var fu = ae.Followups[k];",
            "          if (fu.event.serious == 'Yes' && fu.event.serious_reason == 'Death') {",
            "            base.expired_date = fu.event.end_date;",
            "            break;",
            "          }",
            "        }",
            "        if (base.expired_date) {",
            "          break;",
            "        }",
            "      }",
            "    }",
            "    for (var j = 0, jlen = item.AdverseEvents.length; j < jlen; j++) {",
            "      var ae = item.AdverseEvents[j];",
            "      if (startDateStr != undefined && endDateStr != undefined) {",
            "        if (ae.event.start_date < startDateStr || ae.event.start_date > endDateStr) {",
            "          continue;",
            "        }",
            "      }",
            "      var reportEvent = createReportEvent(base, ae, ae.event_id);",
            "      if (reportEvent) {",
            "        reportEvents.push(reportEvent);",
            "      }",
            "      if (ae.Followups && ae.Followups.length > 0) {",
            "        for (var k = 0, klen = ae.Followups.length; k < klen; k++) {",
            "          var fu = ae.Followups[k];",
            "          var reportEvent = createReportEvent(base, fu, ae.event_id, k + 1);",
            "          if (reportEvent) {",
            "            reportEvents.push(reportEvent);",
            "          }",
            "        }",
            "      }",
            "    }",
            "  }",
            "}",
            ""
          ],
          "template": [
            "{{=<% %>=}}",
            "\\documentclass{article}",
            "\\renewcommand*{\\familydefault}{\\sfdefault}",
            "\\usepackage[top=0.3in, bottom=0.3in, left=0.3in, right=0.3in, landscape]{geometry}",
            "\\usepackage{array}",
            "\\usepackage[us]{datetime}",
            "\\newcolumntype{L}[1]{>{\\raggedright\\let\\newline\\\\\\arraybackslash\\hspace{0pt}}p{#1}}",
            "\\begin{document}",
            "\\title{HEM1538: Serious Adverse Event Report}",
            "<%#dateRange%>",
            "\\author{Date range: \\formatdate{<%start.day%>}{<%start.month%>}{<%start.year%>} to \\formatdate{<%end.day%>}{<%end.month%>}{<%end.year%>}}",
            "<%/dateRange%>",
            "<%#dateSince%>",
            "\\author{Since: \\formatdate{<%start.day%>}{<%start.month%>}{<%start.year%>}}",
            "<%/dateSince%>",
            "<%#dateUntil%>",
            "\\author{Until: \\formatdate{<%end.day%>}{<%end.month%>}{<%end.year%>}}",
            "<%/dateUntil%>",
            "\\date{As of \\today}",
            "\\maketitle",
            "\\scriptsize",
            "\\begin{tabular}{ | L{1.3cm} | L{0.6cm} | L{1.25cm} | L{1.25cm} | L{1.25cm} | L{1.25cm} | L{1.75cm} | L{1.25cm} | L{0.9cm} | L{1.25cm} | L{0.9cm} | L{2.5cm} | L{0.7cm} | L{2.5cm} | }",
            "  \\hline \\textbf{Study Site} & \\textbf{Subj. MRN} & \\textbf{On Study Date} & \\textbf{On Treatment Date} & \\textbf{Off Treatment Date} & \\textbf{Off Study Date} & \\textbf{SAE Type} & \\textbf{Expired Date} & \\textbf{Event No.} & \\textbf{Event Date} & \\textbf{Follow-up No.} & \\multicolumn{3}{c |}{\\textbf{Toxicities}} \\\\",
            "  \\cline{12-14} & & & & & & & & & & & \\textbf{Type/Comment} & \\textbf{Grade} & \\textbf{Attribution} \\\\",
            "<%#reportEvents%>",
            "  \\hline <%study_site%> & <%subject_mrn%> & <%on_study_date%> & <%on_treatment_date%> & <%off_treatment_date%> & <%off_study_date%> & <%sae_type%> & <%expired_date%> & <%event_no%> & <%event_date%> & <%followup_no%> & <%toxicity_type%> & <%toxicity_grade%> & <%toxicity_attribution%> \\\\",
            "<%/reportEvents%>",
            "  \\hline",
            "\\end{tabular}",
            "\\end{document}",
            ""
          ],
          "search": { "query": {  }, "projection": {  } }
        }
      ]
    }
  ],
  "helpers": [
    {
      "name": "getCycleDay",
      "code": [
        "function getCycleDay(visit, enrollment) {",
        "var visits_c = ['1', '1', '1', '1', '2', '2', '2', '2', '3', '3', '4', '4'];",
        "var visits_d = ['1', '8', '15', '22', '1', '8', '15', '22', '1', '15', '1', '15'];",
        "var treatmentPeriodVisits = $.grep(enrollment.Visits,",
        "  function (e) {",
        "  if (e.visit_type === 'Treatment period visit') {",
        "    return true;",
        "  }",
        "});",
        "var visitNumber = treatmentPeriodVisits.indexOf(visit);",
        "var cycle_day_c, cycle_day_d;",
        "if (visitNumber < 12) {",
        "  cycle_day_c = visits_c[visitNumber];",
        "  cycle_day_d = visits_d[visitNumber];",
        "} else {",
        "  cycle_day_c = (visitNumber - 7).toString();",
        "  cycle_day_d = '1';",
        "}",
        "return 'C'+cycle_day_c+'D'+cycle_day_d;",
        "}"
      ]
    },
    {
      "name": "validTime",
      "code": [
        "function validTime(time){",
        "  if(time){",
        "    var parts = time.split(':');",
        "    var hours = parseInt(parts[0]);",
        "    var minutes = parseInt(parts[1].split(' ')[0]);",
        "    var ampm = parts[1].split(' ')[1].toLowerCase();",
        "    return (hours <= 12 || hours === 99) && (minutes < 60 || minutes === 99) && (ampm === 'am' || ampm === 'pm');",
        "  }else{",
        "    return true;",
        "  }",
        "}"
      ]
    },
    {
      "name": "addDays",
      "code": [
        "function addDays(date, days) {",
        "  var newDate = new Date(date);",
        "  newDate.setDate(newDate.getDate() + days);",
        "  newDate.setHours(0,0,0,0);",
        "  return newDate;",
        "}"
      ]
    },
    {
      "name": "yearValid",
      "code": [
        "function yearValid(year, format){",
        "  var valid = true;",
        "  var current = new Date();",
        "  if(format === '9999' && year === '9999'){",
        "    valid = true;",
        "  }else{",
        "    if( !year.match(/[0-9]{4}/) || year < '1900' || year > current.getFullYear()){ valid = false;}",
        "  }",
        "  return valid;",
        "}"
      ]
    },
    {
      "name": "monthValid",
      "code": [
        "function monthValid(month, format){",
        "  var valid = true;",
        "  if(format === '99' && month === '99'){",
        "    valid = true;",
        "  }else{",
        "    if( !month.match(/[0-9]{2}/) || month < '01' || month > '12'){ valid = false;}",
        "  }",
        "  return valid;",
        "}"
      ]
    },
    {
      "name": "dayValid",
      "code": [
        "function dayValid(day, format){",
        "  var valid = true;",
        "  if(format === '99' && day === '99'){",
        "      valid = true;",
        "    }else if(day.match(/[0-9]{2}/) === null || day < '01' || day > '31'){",
        "      valid = false;",
        "  }",
        "  return valid;",
        "}"
      ]
    },
    {
      "name": "dateValid",
      "code": [
        "function dateValid(date, format) {",
        "  if( !date ){ return false; }",
        "  var dateParts = date.split('-');",
        "  var year = dateParts[0];",
        "  if( !year ){ return false; }",
        "  var month = dateParts[1];",
        "  if( !month ){ return false; }",
        "  var day = dateParts[2];",
        "  if( !day ){ return false; }",
        "  var formatParts = format.split('-');",
        "  if( !yearValid(year, formatParts[0])) { return false; }",
        "  if( !monthValid(month, formatParts[1])){ return false;}",
        "  if( !dayValid(day, formatParts[2])){ return false;}",
        "  var today = new Date();",
        "  if (year != '9999' && year > today.getFullYear()) { return false; }",
        "  if (year == today.getFullYear() && month != '99' && month > today.getMonth() + 1) { return false; }",
        "  if (year == today.getFullYear() && month == today.getMonth() + 1 && day != '99' && day > today.getDate()) { return false; }",
        "  if (year == '9999' && month != '99') { return false; }",
        "  if (month == '99' && day != '99') { return false; }",
        "  return true;",
        "}"
      ]
    },
    {
      "name": "datePieceCompare",
      "code": [
        "function datePieceCompare(piece1, operator, piece2){",
        " if(['99','9999'].indexOf(piece1) >= 0 || ['99','9999'].indexOf(piece2) >= 0){",
        "   return true;",
        " }else{",
        "   return eval('\"'+piece1+'\"'+operator+'\"'+piece2+'\"');",
        " }",
        "}"
      ]
    },
    {
      "name": "dateCompare",
      "code": [
        "function dateCompare(date1, operator, date2){",
        "  if( !date1 ){ return false; }",
        "  if( !date2 ){ return false; }",
        "  if( !operator ){ return false; }",
        "  var y1 = date1.split('-')[0];",
        "  var m1 = date1.split('-')[1];",
        "  var d1 = date1.split('-')[2];",
        "  var y2 = date2.split('-')[0];",
        "  var m2 = date2.split('-')[1];",
        "  var d2 = date2.split('-')[2];",
        "  if( !y1 || !m1 || !d1 || !y2 || !m2 || !d2){",
        "    return false;",
        "  }else{",
        "    var yearResult = datePieceCompare(y1, operator, y2);",
        "    var monthResult = datePieceCompare(m1, operator, m2);",
        "    var dayResult = datePieceCompare(d1, operator, d2);",
        "    var allowEqual = operator.indexOf('=') >= 0;",
        "    if(allowEqual){",
        "      if(yearResult === true){",
        "        if(y1 === y2){",
        "          if(monthResult === true){",
        "            if(m1 === m2){",
        "              if(dayResult === true){",
        "                return true;",
        "              }else{",
        "                return false;",
        "              }",
        "            }else{",
        "              return true;",
        "            }",
        "          }else{",
        "            return false;",
        "          }",
        "        }else{",
        "          return true;",
        "        }",
        "      }else{",
        "        return false;",
        "      }",
        "    }else{",
        "      if(yearResult === true){",
        "        return true;",
        "      }else if(y1 === y2){",
        "        if(monthResult === true){",
        "          return true;",
        "        }else if(m1 === m2){",
        "          return dayResult;",
        "        }else{",
        "          return false;",
        "        }",
        "      }",
        "    }",
        "  }",
        "}"
      ]
    }
  ]
}
